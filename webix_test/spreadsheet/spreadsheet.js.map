{"version":3,"sources":["spreadsheet.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","_interopRequireWildcard","obj","__esModule","newObj","key","Object","prototype","hasOwnProperty","_toolbar","bar","_styles","stl","_table","tbl","_hotkeys","_resize","rsz","_spans","spn","_undo","und","_live_editor","led","webix","protoUI","name","_base_index","count","defaults","spans","rowCount","columnCount","columnOperation","$init","this","$index","$view","className","$ready","unshift","_sub_init","push","_set_handlers","formatHelpers","price","value","i18n","priceFormat","int","numberFormat","percent","Math","round","config","rows","readonly","toolbar","init","subbar","liveEditor","editable","clipboard","rows_setter","_this","reset","$$","attachEvent","callEvent","getSelectedId","$onLoad","driver","excel","options","math","getSheet","_excel_to_data","max","data","length","cols","refresh","serialize","dataObj","copy","i","row","column","all","refreshColumns","eachSelectedCell","cb","cells","area","getSelectArea","start","selection","c0","c1","end","j","getCellValue","item","getRow","setCellValue","saveCell","$exportView","extend","header","rawValues","xCorrection","yCorrection","getItem","getColumn","getColumnConfig","getStyle","setStyle","style","combineCells","range","sel","getRange","cell","x","y","addSpan","splitCell","removeSpan","group","uid","span","getSpan","_save","save","url","$proxy","ajax","post","undo","redo","AtomDataLoader","IdSpace","ui","layout","spreadsheet","labels","common","currency","number","font","text","align","format","px","tooltips","color","background","font-family","font-size","text-align","vertical-align","borders","borders-no","borders-left","borders-top","borders-right","borders-bottom","borders-all","borders-outer","borders-top-bottom","borders-color","align-left","align-center","align-right","align-top","align-middle","align-bottom","wrap","font-weight","font-style","text-decoration","menus","add_row","del_row","show_row","hide_row","add_column","del_column","show_column","hide_column","width","body","margin","view","css","borderless","scroll","select","xCount","yCount","on","onAfterSelect","suggest","getParentView","updateMasterValue","type","height","template","title","tooltip","onChange","hide","getValue","master","setValue","getList","getColorView","getBody","getChildViews","$cssName","fitMaster","bind","getPopup","isArray","join","richselect","charAt","drawSelection","isVisible","elems","lastChild","getElementsByTagName","getAttribute","toUpperCase","html","removeCss","addCss","colorboard","icon","palette","onSelect","setMasterValue","$renderInput","divStart","renderColor","replace","match","p1","p2","p3","colorpicker","$setValue","popup","toString","getColorNode","backgroundColor","firstChild","childNodes","$renderIcon","apply","arguments","toggle","onValue","offValue","inp","awidth","aheight","command","onItemClick","getTopParentView","getCellFormats","example","getColumnOperation","getFontSize","numbers","fontSize","isMerged","ready","padding","elements","toolbarElements","buttons","source","$eventSource","viewId","innerId","actions","selected","setValues","styles","props","defaultStyles","_typeof","Symbol","iterator","constructor","white-space","_fontFamily","_borders","toolbarSizes","paddingY","sectorPadding","sectorMargin","structure","block","elementsBlock","separator","columns","blockColumns","buttonsMap","button","label","colorButton","iconButton","btn","segmented","popupWidth","popupTemplate","indexOf","locale","_applyStyles","_parse","_serialize","_undoStyle","_styles_cache","_styles_max","$cellCss","styleid","oldStyle","styleObj","_styleFromText","_addStyle","_obj$data$i","update_style_data","_applyCellStyles","ostyle","nstyle","_updateStyle","_style_handlers","_styleToText","cache","$cellFormat","silent","_style_map","addStyle","_style_names","parts","split","top","middle","result","bottom","nowrap","border-left","border-top","border-right","border-bottom","border_checks","mode","modes","extra","datatable","headerRowHeight","leftSplit","areaselect","editaction","navigation","grid","mth","editMath","cop","on_context","sheet_column_0","e","target","pos","show","preventEvent","webix_hcell","st","ed","old","undefined","clp","selectRow","selectColumn","_undoValue","delay","document","activeElement","tagName","focus","UIManager","getFocus","setFocus","state","getState","ids","concat","hidden","eachRow","sizes","define","cell_template","helper","clearAll","el","editor","nms","encode","_hideColumn","map","hideColumn","parse","_hideRow","filter","addCellCss","addSelectArea","_math","_clipboard","_column_operations","_column_names","applyMath","r","handler","_execute","core","check_trigger","line","triggers","backtrak","get_core","remove_triggers","formula","add_triggers","trs","back","adds","blist","step","k","add_backtrack","bcell","splice","v","r1","c2","r2","decode","val","code","_build_function","Function","isNaN","set","methods","_math_methods","_to_number","SUM","sum","AVERAGE","COUNT","COUNTA","COUNTBLANK","MAX","MIN","min","PRODUCT","product","SUMPRODUCT","sets","sp","s","isUndefined","SUMSQ","sq","pow","VARP","avg","STDEVP","sqrt","POWER","num","n","QUOTIENT","div","d","SQRT","ABS","abs","RAND","random","PI","INT","ROUND","digits","parseFloat","toFixed","ROUNDDOWN","floor","ROUNDUP","ceil","TRUNC","parseInt","EVEN","ODD","alpha","prefixIndex","str","ctrlKey","styledata","_get_sel_style","clipdata","getElementsByClassName","_clip_to_sel","_undoPaste","JSON","csv","delimiter","leftTop","mapSelection","mapCells","col","row_ind","col_ind","cdata","fromSheet","oldValue","newValue","render","stringify","node","_view$$$$getSelectAre","onBeforeShow","field_id","row_data","column_data","hid","add","last","_selectRange","startRow","order","lastRow","a","b","_hide","_add","process","action","_handleState","showColumn","o","removeCellCss","arr","indexNext","indexPrev","cleanUpNextTick","draining","currentQueue","queue","queueIndex","drainQueue","timeout","setTimeout","len","run","clearTimeout","Item","fun","array","noop","nextTick","args","Array","browser","env","argv","version","versions","addListener","once","off","removeListener","removeAllListeners","emit","binding","Error","cwd","chdir","dir","umask","params","updater","fpd","get","substr","_updater","updateRanges","update","updateMath","stack","_parser","_stack$i","isChar","char","charCodeAt","isNumber","getWord","isPosition","operand","test","position","word","colid","size","operandCode","deps","_position","methodCode","namedRangeCode","templateCode","rangeCode","_position2","_position3","t","lines","index","quotes","ph","next","pair","addHotKey","ev","which","keyCode","edit","resizeCell","removeSelectArea","$height","_undoResize","defWidth","columnWidth","defHeight","rowHeight","setColumnWidth","_renderSelectAreas","pull","rid","cid","isUndo","undoSpan","lx","ly","rx","ry","Infinity","cx","cy","addToHistory","nvalue","ovalue","newStyle","restoreHistory","_ssUndoHistory","_ssUndoCursor","$skipHistory","ignoreUndo","func","direction","prevData","disabled","suggestData","methodsName","linkToView","isBlockSelect","areaObj","selectCell","enable","event","trim","locate","setRange","areas","getAllSelectAreas","blockStart","blockEnd","keys","keyPressTimeout","Date","_last_value_set","updateCellValue","newv","setValueHere","getInputNode","cursor","selectionStart","str1","substring","str2","setSelectionRange","trg","search","toLowerCase","point","offset","symbolLenght","getItemText"],"mappings":"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","file":"spreadsheet.js","sourcesContent":["/*\r\n@license\r\nWebix SpreadSheet v.3.4.0\r\nThis software is covered by Webix Commercial License.\r\nUsage without proper license is prohibited.\r\n(c) XB Software Ltd.\r\n*/\r\n/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"/codebase/\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\t__webpack_require__(1);\n\t\n\t__webpack_require__(2);\n\t\n\tvar _toolbar = __webpack_require__(9);\n\t\n\tvar bar = _interopRequireWildcard(_toolbar);\n\t\n\tvar _styles = __webpack_require__(10);\n\t\n\tvar stl = _interopRequireWildcard(_styles);\n\t\n\tvar _table = __webpack_require__(11);\n\t\n\tvar tbl = _interopRequireWildcard(_table);\n\t\n\tvar _hotkeys = __webpack_require__(22);\n\t\n\tvar key = _interopRequireWildcard(_hotkeys);\n\t\n\tvar _resize = __webpack_require__(23);\n\t\n\tvar rsz = _interopRequireWildcard(_resize);\n\t\n\tvar _spans = __webpack_require__(24);\n\t\n\tvar spn = _interopRequireWildcard(_spans);\n\t\n\tvar _undo = __webpack_require__(25);\n\t\n\tvar und = _interopRequireWildcard(_undo);\n\t\n\tvar _live_editor = __webpack_require__(26);\n\t\n\tvar led = _interopRequireWildcard(_live_editor);\n\t\n\t__webpack_require__(29);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj[\"default\"] = obj; return newObj; } }\n\t\n\twebix.protoUI({\n\t\tname: \"spreadsheet\",\n\t\t_base_index: { count: 1 },\n\t\tdefaults: {\n\t\t\tspans: true,\n\t\t\trowCount: 50,\n\t\t\tcolumnCount: 20,\n\t\t\tcolumnOperation: false\n\t\t},\n\t\t$init: function $init(obj) {\n\t\t\tthis.$index = this._base_index.count++;\n\t\t\tthis.$view.className += \" webix_ssheet\";\n\t\n\t\t\tthis.$ready.unshift(this._sub_init);\n\t\t\tthis.$ready.push(this._set_handlers);\n\t\t},\n\t\tformatHelpers: {\n\t\t\tprice: function price(value) {\n\t\t\t\treturn webix.i18n.priceFormat(value);\n\t\t\t},\n\t\t\t\"int\": function int(value) {\n\t\t\t\treturn webix.i18n.numberFormat(value);\n\t\t\t},\n\t\t\tpercent: function percent(value) {\n\t\t\t\treturn Math.round(value * 100) + \"%\";\n\t\t\t}\n\t\t},\n\t\t_sub_init: function _sub_init() {\n\t\t\tvar obj = this.config;\n\t\t\tvar rows = [];\n\t\n\t\t\t//toolbars\n\t\t\tif (!obj.readonly || obj.toolbar === false) rows.push(bar.init(this));\n\t\t\tif (obj.subbar) rows.push(obj.subbar);\n\t\t\tif (obj.liveEditor) rows.push(led.init(this));\n\t\n\t\t\t//data part\n\t\t\trows.push(tbl.init(this, {\n\t\t\t\teditable: !obj.readonly,\n\t\t\t\tspans: true,\n\t\t\t\tclipboard: obj.clipboard\n\t\t\t}));\n\t\n\t\t\tthis.rows_setter(rows);\n\t\t},\n\t\t_set_handlers: function _set_handlers() {\n\t\t\tvar _this = this;\n\t\n\t\t\t//prevent double init\n\t\t\tif (this._table) return;\n\t\n\t\t\t//set sizes for the table\n\t\t\ttbl.reset(this, this.config.columnCount, this.config.rowCount);\n\t\t\tstl.init(this); //styles\n\t\t\tkey.init(this); //keyboard shortcuts\n\t\t\trsz.init(this); //resizers\n\t\t\tund.init(this); //undo/redo\n\t\n\t\t\tthis._table = this.$$(\"cells\");\n\t\t\tthis._table.attachEvent(\"onAfterAreaAdd\", function () {\n\t\t\t\treturn _this.callEvent(\"onAfterSelect\", [_this.getSelectedId(true)]);\n\t\t\t});\n\t\n\t\t\tthis.callEvent(\"onComponentInit\", []);\n\t\n\t\t\t//span must be loaded last, as they depends on already loaded data\n\t\t\tspn.init(this);\n\t\t},\n\t\t$onLoad: function $onLoad(obj, driver) {\n\t\t\t//when loading data by data:, we can get $onLoad before _set_handlers call\n\t\t\tthis._set_handlers();\n\t\n\t\t\tif (obj.excel) {\n\t\t\t\tvar options = obj.options || {};\n\t\t\t\toptions.math = this.config.math;\n\t\n\t\t\t\tobj = driver.getSheet(obj, options);\n\t\t\t\tobj = this._excel_to_data(obj);\n\t\t\t}\n\t\n\t\t\tvar rows = Math.max(this.config.rowCount, obj.data.length);\n\t\t\tvar cols = obj.data[0] ? Math.max(this.config.columnCount, obj.data[0].length) : this.config.columnCount;\n\t\n\t\t\tif (rows != this.config.rowCount || cols != this.config.columnCount) {\n\t\t\t\tthis.config.rowCount = rows;\n\t\t\t\tthis.config.columnCount = cols;\n\t\t\t\ttbl.reset(this);\n\t\t\t}\n\t\n\t\t\tthis.callEvent(\"onDataParse\", [obj]);\n\t\t\tthis._table.refresh();\n\t\t},\n\t\tserialize: function serialize(config) {\n\t\t\tvar obj = {};\n\t\t\tthis.callEvent(\"onDataSerialize\", [obj, config]);\n\t\t\treturn obj;\n\t\t},\n\t\t_excel_to_data: function _excel_to_data(obj) {\n\t\t\tvar dataObj = webix.copy(obj.data || obj);\n\t\t\tvar data = [];\n\t\n\t\t\tfor (var i = 0; i < dataObj.length; i++) {\n\t\t\t\tfor (var c = 0; c < dataObj[0].length; c++) {\n\t\t\t\t\tvar row = i + 1,\n\t\t\t\t\t    column = c + 1;\n\t\t\t\t\tdata.push([row, column, dataObj[i][c]]);\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tif (obj.spans) for (var i = 0; i < obj.spans.length; i++) {\n\t\t\t\tobj.spans[i][0]++;\n\t\t\t\tobj.spans[i][1]++;\n\t\t\t}\n\t\n\t\t\tif (obj.data) obj.data = data;else obj = { data: data };\n\t\t\treturn obj;\n\t\t},\n\t\trefresh: function refresh(all) {\n\t\t\tif (all) this._table.refreshColumns();else this._table.refresh();\n\t\t},\n\t\teachSelectedCell: function eachSelectedCell(cb) {\n\t\t\tvar cells = this.getSelectedId(true);\n\t\t\tfor (var i = 0; i < cells.length; i++) {\n\t\t\t\tcb.call(this, cells[i]);\n\t\t\t}\n\t\t},\n\t\tgetSelectedId: function getSelectedId(all) {\n\t\t\tvar area = this._table.getSelectArea();\n\t\t\tif (!all) return area && area.start.row ? area.start : null;\n\t\n\t\t\tvar selection = [];\n\t\t\tif (area) {\n\t\t\t\tvar c0 = area.start;\n\t\t\t\tvar c1 = area.end;\n\t\n\t\t\t\tfor (var i = c0.row; i <= c1.row; i++) {\n\t\t\t\t\tfor (var j = c0.column; j <= c1.column; j++) {\n\t\t\t\t\t\tselection.push({ row: i, column: j });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\treturn selection;\n\t\t\t//return this._table.getSelectedId(all)\n\t\t},\n\t\tgetCellValue: function getCellValue(row, column) {\n\t\t\tvar item = this.getRow(row);\n\t\t\treturn item[\"$\" + column] || item[column];\n\t\t},\n\t\tsetCellValue: function setCellValue(row, column, value) {\n\t\t\tvar item = this.getRow(row);\n\t\t\titem[column] = value;\n\t\t\tdelete item[\"$\" + column];\n\t\n\t\t\tthis.callEvent(\"onCellChange\", [row, column, value, true]);\n\t\t\tthis.saveCell(row, column);\n\t\t},\n\t\t$exportView: function $exportView(options) {\n\t\t\twebix.extend(options, { header: false, rawValues: true, spans: true, xCorrection: 1, yCorrection: 1 });\n\t\t\treturn this._table;\n\t\t},\n\t\tgetRow: function getRow(id) {\n\t\t\treturn this._table.getItem(id);\n\t\t},\n\t\tgetColumn: function getColumn(id) {\n\t\t\treturn this._table.getColumnConfig(id);\n\t\t},\n\t\tgetStyle: function getStyle(row, column) {\n\t\t\treturn stl.getStyle(this, { row: row, column: column });\n\t\t},\n\t\tsetStyle: function setStyle(row, column, style) {\n\t\t\treturn stl.setStyle(this, { row: row, column: column }, style);\n\t\t},\n\t\tcombineCells: function combineCells(range) {\n\t\t\tif (!range) {\n\t\t\t\tvar sel = this.getSelectedId(true);\n\t\t\t\tif (sel.length > 1) {\n\t\t\t\t\trange = spn.getRange(sel);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (range && this.callEvent(\"onBeforeSpan\", [range.cell.row, range.cell.column, [range.x, range.y]])) spn.addSpan(this, range.cell, range.x, range.y);\n\t\t\tthis.refresh();\n\t\t},\n\t\tsplitCell: function splitCell(row, column) {\n\t\t\tif (row && column) {\n\t\t\t\tspn.removeSpan(this, { row: row, column: column });\n\t\t\t} else {\n\t\t\t\tvar group = webix.uid();\n\t\t\t\tthis.eachSelectedCell(function (cell) {\n\t\t\t\t\tvar span = this._table.getSpan(cell.row, cell.column);\n\t\t\t\t\tif (span && this.callEvent(\"onBeforeSplit\", [cell.row, cell.column, [span[2], span[3]], group])) {\n\t\t\t\t\t\tspn.removeSpan(this, cell);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\n\t\t\tthis.refresh();\n\t\t},\n\t\t_save: function _save(name, data) {\n\t\t\tvar save = this.config.save;\n\t\t\tvar url = \"\";\n\t\t\tif (typeof save === \"string\") url = save + \"/\" + name;else if (save && save[name]) url = save[name];\n\t\n\t\t\tif (url) {\n\t\t\t\tif (url.$proxy && url.save) url.save(this, data, null, null);else webix.ajax().post(url, data);\n\t\t\t}\n\t\t},\n\t\tsaveCell: function saveCell(row, column) {\n\t\t\tvar style = this.getStyle(row, column);\n\t\n\t\t\tthis._save(\"data\", {\n\t\t\t\trow: row,\n\t\t\t\tcolumn: column,\n\t\t\t\tvalue: this.getCellValue(row, column),\n\t\t\t\tstyle: style ? style.id : \"\"\n\t\t\t});\n\t\t},\n\t\treset: function reset(config) {\n\t\t\tthis.callEvent(\"onReset\", [config]);\n\t\t},\n\t\tundo: function undo() {\n\t\t\tund.undo(this);\n\t\t},\n\t\tredo: function redo() {\n\t\t\tund.redo(this);\n\t\t}\n\t}, webix.AtomDataLoader, webix.IdSpace, webix.ui.layout);\n\n/***/ },\n/* 1 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\twebix.i18n.spreadsheet = {\n\t    labels: {\n\t        // formats\n\t        common: \"Common\",\n\t        currency: \"Currency\",\n\t        number: \"Number\",\n\t        percent: \"Percent\",\n\t        // titles\n\t        \"undo\": \"Undo/Redo\",\n\t        \"font\": \"Font\",\n\t        \"text\": \"Text\",\n\t        \"cell\": \"Cell\",\n\t        \"align\": \"Align\",\n\t        \"format\": \"Format\",\n\t        \"column\": \"Column\",\n\t        \"px\": \"px\"\n\t    },\n\t    tooltips: {\n\t        \"color\": \"Font color\",\n\t        \"background\": \"Background color\",\n\t        \"font-family\": \"Font family\",\n\t        \"font-size\": \"Font size\",\n\t        \"text-align\": \"Horizontal align\",\n\t        \"vertical-align\": \"Vertical align\",\n\t        \"borders\": \"Borders\",\n\t        \"borders-no\": \"Clear borders\",\n\t        \"borders-left\": \"Left border\",\n\t        \"borders-top\": \"Top border\",\n\t        \"borders-right\": \"Right border\",\n\t        \"borders-bottom\": \"Bottom border\",\n\t        \"borders-all\": \"All borders\",\n\t        \"borders-outer\": \"Outer borders\",\n\t        \"borders-top-bottom\": \"Top and bottom borders\",\n\t        \"borders-color\": \"Border color\",\n\t        \"align-left\": \"Left align\",\n\t        \"align-center\": \"Center align\",\n\t        \"align-right\": \"Right align\",\n\t        \"align-top\": \"Top align\",\n\t        \"align-middle\": \"Middle align\",\n\t        \"align-bottom\": \"Bottom align\",\n\t        \"span\": \"Merge\",\n\t        \"wrap\": \"Text wrap\",\n\t        \"undo\": \"Undo\",\n\t        \"redo\": \"Redo\",\n\t        \"format\": \"Format\",\n\t        \"font-weight\": \"Bold\",\n\t        \"font-style\": \"Italic\",\n\t        \"text-decoration\": \"Underline\"\n\t    },\n\t    menus: {\n\t        \"add_row\": \"Insert Row\",\n\t        \"del_row\": \"Delete Row\",\n\t        \"show_row\": \"Show Row\",\n\t        \"hide_row\": \"Hide Row\",\n\t        \"add_column\": \"Insert Column\",\n\t        \"del_column\": \"Delete Column\",\n\t        \"show_column\": \"Show Column\",\n\t        \"hide_column\": \"Hide Column\"\n\t    }\n\t};\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\n\t__webpack_require__(3);\n\n\t__webpack_require__(4);\n\n\t__webpack_require__(5);\n\n\t__webpack_require__(6);\n\n\t__webpack_require__(7);\n\n\t__webpack_require__(8);\n\n/***/ },\n/* 3 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\twebix.protoUI({\n\t    name: \"ssheet-borders-suggest\",\n\t    defaults: {\n\t        width: 300\n\t    },\n\t    $init: function $init(config) {\n\t        config.body = {\n\t            margin: 6,\n\t            cols: [{ view: \"dataview\", css: \"webix_ssheet_dataview\", borderless: true, scroll: false, select: true,\n\t                xCount: 4,\n\t                yCount: 2,\n\t                on: {\n\t                    onAfterSelect: function onAfterSelect(id) {\n\t                        var suggest = this.getParentView().getParentView();\n\t                        suggest.updateMasterValue(true);\n\t                    }\n\t                },\n\t                type: {\n\t                    width: 36,\n\t                    height: 36,\n\t                    template: function template(obj) {\n\t                        var css = \"webix_ssheet_button_icon webix_ssheet_icon_borders_\" + obj.value;\n\t                        var title = webix.i18n.spreadsheet.tooltips[\"borders-\" + obj.id];\n\t                        return \"<div title='\" + title + \"'><span class='\" + css + \"'></span></div>\";\n\t                    }\n\t                },\n\t                data: config.data\n\t            }, { view: \"ssheet-separator\" }, {\n\t                rows: [{ view: \"ssheet-colorpicker\", css: config.css, name: config.name, width: 62,\n\t                    tooltip: webix.i18n.spreadsheet.tooltips[\"borders-color\"],\n\t                    title: \"<span class='webix_icon fa-pencil'></span>\",\n\t                    on: {\n\t                        onChange: function onChange() {\n\t                            var suggest = this.getParentView().getParentView().getParentView();\n\t                            suggest.updateMasterValue(false);\n\t                        }\n\t                    }\n\t                }, {}]\n\t            }]\n\t        };\n\t    },\n\t    updateMasterValue: function updateMasterValue(hide) {\n\t        var value = this.getValue();\n\t        var master = webix.$$(this.config.master);\n\t        master.setValue(value);\n\t        if (hide) this.hide();\n\t    },\n\t    setValue: function setValue(value) {\n\t        if (value[0]) this.getList().select(value[0]);\n\t        if (value[1]) this.getColorView().setValue(value[1]);\n\t    },\n\t    getValue: function getValue() {\n\t        return [this.getList().getSelectedId(), this.getColorView().getValue() || \"\"];\n\t    },\n\t    getList: function getList() {\n\t        return this.getBody().getChildViews()[0];\n\t    },\n\t    getColorView: function getColorView() {\n\t        return this.getBody().getChildViews()[2].getChildViews()[0];\n\t    }\n\t}, webix.ui.suggest);\n\t\n\twebix.protoUI({\n\t    name: \"ssheet-borders\",\n\t    $cssName: \"richselect\",\n\t    defaults: {\n\t        text: \"<span class='webix_ssheet_button_icon webix_ssheet_icon_borders'>\"\n\t    },\n\t    $init: function $init(config) {\n\t        config.options = {\n\t            view: \"ssheet-borders-suggest\",\n\t            fitMaster: false,\n\t            data: config.data\n\t        };\n\t\n\t        this.$ready.push(webix.bind(function () {\n\t            this.getPopup().config.master = this.config.id;\n\t        }, this));\n\t    },\n\t    setValue: function setValue(value) {\n\t        if (webix.isArray(value)) {\n\t            if (!this.config.value || value[0] != this.config.value[0] || value[1] != this.config.value[1]) {\n\t                this.getPopup().setValue(value);\n\t            }\n\t            this.config.value = value;\n\t            if (value[0]) this.callEvent(\"onChange\");\n\t        }\n\t        return value;\n\t    },\n\t    getValue: function getValue() {\n\t        return this.getPopup().getValue().join(\",\");\n\t    },\n\t    getList: function getList() {\n\t        return this.getPopup().getBody().getChildViews()[0];\n\t    },\n\t    getColorView: function getColorView() {\n\t        return this.getPopup().getBody().getChildViews()[1].getChildViews()[0];\n\t    }\n\t}, webix.ui.richselect);\n\n/***/ },\n/* 4 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\t// toolbar: color selector\n\twebix.protoUI({\n\t    $cssName: \"colorboard\",\n\t    name: \"ssheet-colorboard\",\n\t    setValue: function setValue(value) {\n\t        if (!value) return;\n\t        if (value.charAt(0) != \"#\") value = '#' + value;\n\t\n\t        this.config.value = value;\n\t        this.drawSelection(value);\n\t\n\t        return value;\n\t    },\n\t    drawSelection: function drawSelection(value, cell) {\n\t        if (this.isVisible(this.config.id)) {\n\t            var elems = this.$view.lastChild.getElementsByTagName(\"DIV\");\n\t            for (var i = 0; i < elems.length; i++) {\n\t                var color = elems[i].getAttribute(\"webix_val\");\n\t                if (color) {\n\t                    if (color.toUpperCase() != value.toUpperCase()) {\n\t                        webix.html.removeCss(elems[i], \"webix_selected\");\n\t                    } else webix.html.addCss(elems[i], \"webix_selected\", \"\");\n\t                }\n\t            }\n\t        }\n\t    }\n\t}, webix.ui.colorboard);\n\t\n\twebix.protoUI({\n\t    $cssName: \"richselect\",\n\t    name: \"ssheet-colorpicker\",\n\t    defaults: {\n\t        css: \"webix_ssheet_colorpicker\",\n\t        icon: \"angle-down\",\n\t        suggest: {\n\t            height: 202,\n\t            borderless: true,\n\t            body: {\n\t                view: \"ssheet-colorboard\",\n\t                css: \"webix_ssheet_colorboard\",\n\t                palette: [[\"#000000\", \"#434343\", \"#666666\", \"#999999\", \"#b7b7b7\", \"#cccccc\", \"#d9d9d9\", \"#efefef\", \"#f3f3f3\", \"#ffffff\"], [\"#980000\", \"#ff0000\", \"#ff9900\", \"#ffff00\", \"#00ff00\", \"#00ffff\", \"#4a86e8\", \"#0000ff\", \"#9900ff\", \"#ff00ff\"], [\"#e6b8af\", \"#f4cccc\", \"#fce5cd\", \"#fff2cc\", \"#d9ead3\", \"#d0e0e3\", \"#c9daf8\", \"#cfe2f3\", \"#d9d2e9\", \"#ead1dc\"], [\"#dd7e6b\", \"#ea9999\", \"#f9cb9c\", \"#ffe599\", \"#b6d7a8\", \"#a2c4c9\", \"#a4c2f4\", \"#9fc5e8\", \"#b4a7d6\", \"#d5a6bd\"], [\"#cc4125\", \"#e06666\", \"#f6b26b\", \"#ffd966\", \"#93c47d\", \"#76a5af\", \"#6d9eeb\", \"#6fa8dc\", \"#8e7cc3\", \"#c27ba0\"], [\"#a61c00\", \"#cc0000\", \"#e69138\", \"#f1c232\", \"#6aa84f\", \"#45818e\", \"#3c78d8\", \"#3d85c6\", \"#674ea7\", \"#a64d79\"], [\"#85200c\", \"#990000\", \"#b45f06\", \"#bf9000\", \"#38761d\", \"#134f5c\", \"#1155cc\", \"#0b5394\", \"#351c75\", \"#741b47\"], [\"#5b0f00\", \"#660000\", \"#783f04\", \"#7f6000\", \"#274e13\", \"#0c343d\", \"#1c4587\", \"#073763\", \"#20124d\", \"#4c1130\"]],\n\t                on: {\n\t                    onSelect: function onSelect(value) {\n\t                        this.getParentView().setMasterValue({ value: value });\n\t                    }\n\t                }\n\t            }\n\t        }\n\t    },\n\t    $init: function $init() {\n\t        this.$view.className += \" webix_ssheet_colorpicker\";\n\t    },\n\t    $renderInput: function $renderInput(config, divStart, id) {\n\t        var color = this.renderColor.call(this);\n\t        divStart = divStart.replace(/([^>]>)(.*)(<\\/div)/, function (match, p1, p2, p3) {\n\t            return p1 + config.title + color + p3;\n\t        });\n\t\n\t        return webix.ui.colorpicker.prototype.$renderInput.call(this, config, divStart, id);\n\t    },\n\t    $setValue: function $setValue(value) {\n\t        var popup = webix.$$(this.config.popup.toString());\n\t        var colorboard = popup.getBody();\n\t        if (value) {\n\t            colorboard.setValue(value);\n\t            this.config.value = value;\n\t            this.getColorNode().style.backgroundColor = value;\n\t        }\n\t    },\n\t    renderColor: function renderColor() {\n\t        return \"<div class='webix_ssheet_cp_color' style='background-color:\" + this.config.value + \";'> </div>\";\n\t    },\n\t    getColorNode: function getColorNode() {\n\t        return this.$view.firstChild.firstChild.childNodes[1];\n\t    },\n\t    $renderIcon: function $renderIcon() {\n\t        return webix.ui.richselect.prototype.$renderIcon.apply(this, arguments);\n\t    }\n\t}, webix.ui.colorpicker);\n\n/***/ },\n/* 5 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\twebix.protoUI({\n\t    name: \"ssheet-align\",\n\t    $cssName: \"richselect\",\n\t    $init: function $init(config) {\n\t        config.options = {\n\t            view: \"datasuggest\",\n\t            css: \"webix_ssheet_dataview\",\n\t\n\t            body: {\n\t                borderless: true,\n\t                tooltip: {\n\t                    template: \"#tooltip#\"\n\t                },\n\t                xCount: 3, yCount: 1,\n\t                type: {\n\t                    width: 36,\n\t                    height: 36\n\t                }\n\t            },\n\t            data: config.data\n\t        };\n\t    }\n\t}, webix.ui.richselect);\n\n/***/ },\n/* 6 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\t// toolbar: toogle button\n\twebix.protoUI({\n\t    $cssName: \"toggle\",\n\t    name: \"ssheet-toggle\",\n\t    toggle: function toggle() {\n\t        var value = this.getValue() == this.config.onValue ? true : false;\n\t        this.setValue(!value);\n\t    },\n\t    getValue: function getValue() {\n\t        var config = this.config;\n\t        var value = config.value;\n\t        return !value ? config.offValue || false : config.onValue || true;\n\t    },\n\t    defaults: {\n\t        template: function template(obj, common) {\n\t            var css = obj.value === true || obj.value == obj.onValue ? \" webix_pressed\" : \"\";\n\t            var inp = common.$renderInput(obj, common);\n\t            return \"<div class='webix_el_box\" + css + \"' style='width:\" + obj.awidth + \"px; height:\" + obj.aheight + \"px'>\" + inp + \"</div>\";\n\t        }\n\t    }\n\t}, webix.ui.toggle);\n\n/***/ },\n/* 7 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\twebix.protoUI({\n\t    name: \"ssheet-separator\",\n\t    defaults: {\n\t        css: \"webix_ssheet_toolbar_spacer\",\n\t        template: \" \",\n\t        width: 1,\n\t        borderless: true\n\t    }\n\t}, webix.ui.view);\n\n/***/ },\n/* 8 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\twebix.protoUI({\n\t    name: \"ssheet-column\",\n\t    $cssName: \"richselect\",\n\t    defaults: {\n\t        command: true, //trigger command only\n\t        width: 70,\n\t        text: \"<span class='webix_ssheet_button_icon webix_ssheet_icon_borders'>\"\n\t    },\n\t    $init: function $init(config) {\n\t        config.options = {\n\t            fitMaster: false,\n\t            body: {\n\t                view: \"list\",\n\t                on: {\n\t                    onItemClick: function onItemClick(id) {\n\t                        var view = this.getTopParentView();\n\t                        view.callEvent(\"onCommand\", [id, null]);\n\t                    }\n\t                },\n\t                css: \"webix_ssheet_column__selected\",\n\t                data: config.data,\n\t                width: 150\n\t            }\n\t        };\n\t    },\n\t    $setValue: function $setValue() {\n\t        return \"\";\n\t    }\n\t}, webix.ui.richselect);\n\n/***/ },\n/* 9 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\texports.__esModule = true;\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj; };\n\t\n\texports.init = init;\n\t// default styles for toolbar elements\n\tvar defaultStyles = {\n\t    \"color\": \"#000000\",\n\t    \"background\": \"#ffffff\",\n\t    \"font-family\": \"'PT Sans', Tahoma\",\n\t    \"font-size\": \"15px\",\n\t    \"text-align\": \"left\",\n\t    \"vertical-align\": \"top\",\n\t    \"white-space\": \"nowrap\",\n\t    \"borders\": [\"no\", \"#434343\"]\n\t};\n\t\n\t// options for 'font-family' select\n\tvar _fontFamily = [{ id: \"Arial\", value: \"Arial\" }, { id: \"'PT Sans', Tahoma\", value: \"PT Sans\" }, { id: \"Tahoma\", value: \"Tahoma\" }, { id: \"Verdana\", value: \"Verdana\" }];\n\t\n\t// options for 'format' select\n\tfunction getCellFormats() {\n\t    return [{ id: \"-1\", value: webix.i18n.spreadsheet.labels.common }, { id: \"price\", value: webix.i18n.spreadsheet.labels.currency, example: \"98.20\" }, { id: \"int\", value: webix.i18n.spreadsheet.labels.number, example: \"2120.02\" }, { id: \"percent\", value: webix.i18n.spreadsheet.labels.percent, example: \"0.5\" }];\n\t}\n\t\n\tfunction getColumnOperation() {\n\t    return [{ id: \"add_row\", value: webix.i18n.spreadsheet.menus.add_row }, { id: \"del_row\", value: webix.i18n.spreadsheet.menus.del_row }, { id: \"show_row\", value: webix.i18n.spreadsheet.menus.show_row }, { id: \"hide_row\", value: webix.i18n.spreadsheet.menus.hide_row }, { id: \"add_column\", value: webix.i18n.spreadsheet.menus.add_column }, { id: \"del_column\", value: webix.i18n.spreadsheet.menus.del_column }, { id: \"show_column\", value: webix.i18n.spreadsheet.menus.show_column }, { id: \"hide_column\", value: webix.i18n.spreadsheet.menus.hide_column }];\n\t}\n\t// options for 'borders' select\n\tvar _borders = [{ id: \"no\", value: \"no\" }, { id: \"left\", value: \"left\" }, { id: \"top\", value: \"top\" }, { id: \"right\", value: \"right\" }, { id: \"bottom\", value: \"bottom\" }, { id: \"all\", value: \"all\" }, { id: \"outer\", value: \"outer\" }, { id: \"top-bottom\", value: \"top_bottom\" }];\n\t\n\t// options for 'font-size' select\n\tfunction getFontSize() {\n\t    var numbers = [\"8\", \"9\", \"10\", \"11\", \"12\", \"14\", \"15\", \"16\", \"18\", \"20\", \"22\", \"24\", \"28\", \"36\"];\n\t    var fontSize = [];\n\t\n\t    for (var i = 0; i < numbers.length; i++) {\n\t        fontSize.push({ id: numbers[i] + webix.i18n.spreadsheet.labels.px, value: numbers[i] });\n\t    }\n\t    return fontSize;\n\t}\n\t\n\tvar toolbarSizes = {\n\t    height: 39,\n\t    margin: 7,\n\t    paddingY: 1,\n\t    sectorPadding: 5,\n\t    sectorMargin: 0\n\t};\n\t\n\tvar buttons = {\n\t    \"undo\": [\"undo\", \"redo\"],\n\t    \"font\": [\"font-family\", \"font-size\"],\n\t    \"text\": [\"font-weight\", \"font-style\", \"text-decoration\", \"color\"],\n\t    \"cell\": [\"background\", \"borders\", \"span\"],\n\t    \"align\": [\"text-align\", \"vertical-align\", \"wrap\"],\n\t    \"format\": [\"format\"]\n\t};\n\t\n\tvar ui = {\n\t    \"toolbarElements\": function toolbarElements(view, structure) {\n\t        var config = [];\n\t        for (var block in structure) {\n\t            config.push(ui.elementsBlock(view, block, structure[block]));\n\t            config.push(ui.separator());\n\t        }\n\t        return config;\n\t    },\n\t    \"elementsBlock\": function elementsBlock(view, name, columns) {\n\t        var block = {\n\t            rows: [{\n\t                padding: 2,\n\t                cols: [{\n\t                    height: toolbarSizes.height,\n\t                    margin: 2,\n\t                    cols: ui.blockColumns(view, columns)\n\t                }]\n\t            }, ui.title({ title: name })]\n\t        };\n\t        return block;\n\t    },\n\t    \"blockColumns\": function blockColumns(view, buttons) {\n\t        var cols = [];\n\t        for (var i = 0; i < buttons.length; i++) {\n\t            if (_typeof(buttons[i]) == \"object\") {\n\t                cols.push(buttons[i]);\n\t            } else if (buttonsMap[buttons[i]]) {\n\t                cols.push(buttonsMap[buttons[i]](view));\n\t            }\n\t        }\n\t        return cols;\n\t    },\n\t    button: function button(config) {\n\t        return {\n\t            view: \"ssheet-toggle\", width: config.width || 40, id: config.name, name: config.name, label: config.label,\n\t            css: config.css || \"\", onValue: config.onValue, offValue: config.offValue,\n\t            tooltip: webix.i18n.spreadsheet.tooltips[config.name] || \"\"\n\t        };\n\t    },\n\t    colorButton: function colorButton(config) {\n\t        return {\n\t            view: \"ssheet-colorpicker\", css: config.css, name: config.name, width: config.width || 62,\n\t            title: \"<span class='webix_ssheet_button_icon webix_ssheet_color_button_icon webix_ssheet_icon_\" + config.name + \"' ></span>\",\n\t            tooltip: webix.i18n.spreadsheet.tooltips[config.name] || \"\"\n\t        };\n\t    },\n\t    iconButton: function iconButton(config) {\n\t        var btn = webix.copy(config);\n\t        webix.extend(btn, { view: \"button\", type: \"htmlbutton\", width: 40, id: config.name,\n\t            label: \"<span class='webix_ssheet_button_icon webix_ssheet_icon_\" + config.name + \"'></span>\",\n\t            css: \"\",\n\t            tooltip: webix.i18n.spreadsheet.tooltips[config.name] || \"\"\n\t        });\n\t        if (config.onValue) {\n\t            webix.extend(btn, { view: \"ssheet-toggle\", onValue: config.onValue, offValue: config.offValue }, true);\n\t        }\n\t\n\t        return btn;\n\t    },\n\t    segmented: function segmented(config) {\n\t        return {\n\t            view: \"segmented\", name: config.name, css: config.css || \"\", width: config.width || 115, options: config.options\n\t        };\n\t    },\n\t    select: function select(config) {\n\t        webix.extend(config, {\n\t            view: \"richselect\",\n\t            id: config.name,\n\t            value: defaultStyles[config.name],\n\t            suggest: {\n\t                css: \"webix_ssheet_suggest\",\n\t                fitMaster: false,\n\t                padding: 0,\n\t                data: config.options\n\t            }\n\t        });\n\t\n\t        config.tooltip = webix.i18n.spreadsheet.tooltips[config.name] || \"\";\n\t        config.suggest.width = config.popupWidth || config.width;\n\t        if (config.popupTemplate) config.suggest.body = {\n\t            template: config.popupTemplate\n\t        };\n\t        return config;\n\t    },\n\t    separator: function separator() {\n\t        return {\n\t            view: \"ssheet-separator\"\n\t        };\n\t    },\n\t    title: function title(config) {\n\t        var title = config.title;\n\t        if (title.indexOf(\"$\") === 0) title = \"\";\n\t        title = webix.i18n.spreadsheet.labels[config.title] || title;\n\t\n\t        return {\n\t            template: title, height: config.height || 24, css: \"webix_ssheet_subbar_title\",\n\t            borderless: true\n\t        };\n\t    },\n\t    borders: function borders(config) {\n\t        return { view: \"ssheet-borders\", width: config.width || 62, data: _borders, id: config.name, name: config.name,\n\t            tooltip: webix.i18n.spreadsheet.tooltips[config.name] };\n\t    },\n\t    align: function align(config) {\n\t        return { view: \"ssheet-align\", value: defaultStyles[config.name], width: config.width || 62, data: config.options,\n\t            name: config.name, tooltip: webix.i18n.spreadsheet.tooltips[config.name] };\n\t    },\n\t    column: function column(config) {\n\t        return {\n\t            view: \"ssheet-column\",\n\t            data: config.data,\n\t            id: config.name,\n\t            name: config.name\n\t        };\n\t    }\n\t};\n\t\n\tvar actions = {\n\t    span: function span(view) {\n\t        var range = view.$$(\"cells\").getSelectArea();\n\t        if (range) {\n\t            if (isMerged(view, range)) {\n\t                view.splitCell();\n\t            } else {\n\t                view.combineCells();\n\t            }\n\t        }\n\t    },\n\t    undo: function undo(view) {\n\t        view.undo();\n\t    },\n\t    redo: function redo(view) {\n\t        view.redo();\n\t    }\n\t};\n\t\n\tfunction isMerged(view, range) {\n\t    var i,\n\t        j,\n\t        c0 = range.start,\n\t        c1 = range.end;\n\t\n\t    for (i = c0.row * 1; i <= c1.row * 1; i++) {\n\t        for (j = c0.column * 1; j <= c1.column * 1; j++) {\n\t            if (view.$$(\"cells\").getSpan(i, j)) return true;\n\t        }\n\t    }\n\t    return false;\n\t}\n\t\n\tvar buttonsMap = {\n\t    \"undo\": function undo() {\n\t        return ui.iconButton({ name: \"undo\" });\n\t    },\n\t    \"redo\": function redo() {\n\t        return ui.iconButton({ name: \"redo\" });\n\t    },\n\t    \"font-family\": function fontFamily() {\n\t        return ui.select({ name: \"font-family\", tooltip: \"Font family\", options: _fontFamily, width: 100 });\n\t    },\n\t    \"font-size\": function fontSize() {\n\t        return ui.select({ name: \"font-size\", tooltip: \"Font size\", options: getFontSize(), width: 62 });\n\t    },\n\t    \"font-weight\": function fontWeight() {\n\t        return ui.button({ name: \"font-weight\", label: \"B\", css: \"webix_ssheet_bold\",\n\t            tooltip: \"Bold\", onValue: \"bold\", offValue: \"normal\" });\n\t    },\n\t    \"font-style\": function fontStyle() {\n\t        return ui.button({ name: \"font-style\", label: \"I\", css: \"webix_ssheet_italic\",\n\t            tooltip: \"Italic\", onValue: \"italic\", offValue: \"normal\" });\n\t    },\n\t    \"text-decoration\": function textDecoration() {\n\t        return ui.button({ name: \"text-decoration\", label: \"U\", css: \"webix_ssheet_underline\",\n\t            tooltip: \"Underline\", onValue: \"underline\", offValue: \"normal\" });\n\t    },\n\t    \"color\": function color() {\n\t        return ui.colorButton({ name: \"color\", icon: \"font\", css: \"webix_ssheet_color\" });\n\t    },\n\t    \"background\": function background() {\n\t        return ui.colorButton({ name: \"background\", icon: \"paint-brush\", css: \"webix_ssheet_background\" });\n\t    },\n\t    \"borders\": function borders() {\n\t        return ui.borders({ name: \"borders\" });\n\t    },\n\t    \"span\": function span() {\n\t        return ui.iconButton({ name: \"span\" });\n\t    },\n\t    \"text-align\": function textAlign() {\n\t        var locale = webix.i18n.spreadsheet.tooltips;\n\t        return ui.align({ name: \"text-align\", tooltip: \"Horizontal Align\", css: \"webix_ssheet_align\", options: [{ id: \"left\", value: \"<span class='webix_ssheet_button_icon webix_ssheet_icon_left'></span>\", tooltip: locale[\"align-left\"] }, { id: \"center\", value: \"<span class='webix_ssheet_button_icon webix_ssheet_icon_center' ></span>\", tooltip: locale[\"align-center\"] }, { id: \"right\", value: \"<span class='webix_ssheet_button_icon webix_ssheet_icon_right' ></span>\", tooltip: locale[\"align-right\"] }] });\n\t    },\n\t    \"vertical-align\": function verticalAlign() {\n\t        var locale = webix.i18n.spreadsheet.tooltips;\n\t        return ui.align({ name: \"vertical-align\", tooltip: \"Vertical Align\", css: \"webix_ssheet_align\", options: [{ id: \"top\", value: \"<span class='webix_ssheet_button_icon webix_ssheet_icon_top' ></span>\", tooltip: locale[\"align-top\"] }, { id: \"middle\", value: \"<span class='webix_ssheet_button_icon webix_ssheet_icon_middle'></span>\", tooltip: locale[\"align-middle\"] }, { id: \"bottom\", value: \"<span class='webix_ssheet_button_icon webix_ssheet_icon_bottom'></span>\", tooltip: locale[\"align-bottom\"] }] });\n\t    },\n\t    \"wrap\": function wrap() {\n\t        return ui.iconButton({ name: \"wrap\", onValue: \"wrap\", offValue: \"nowrap\" });\n\t    },\n\t    \"format\": function format(view) {\n\t        return ui.select({\n\t            name: \"format\", tooltip: \"Cell data format\", options: getCellFormats(), width: 100,\n\t            popupWidth: 150,\n\t            popupTemplate: function popupTemplate(obj) {\n\t                var format = view.formatHelpers[obj.id];\n\t                return obj.value + (format ? \"<span class='webix_ssheet_right'>\" + format(obj.example) + \"</span>\" : \"\");\n\t            }\n\t        });\n\t    },\n\t    \"column\": function column(view) {\n\t        return ui.column({\n\t            data: getColumnOperation()\n\t        });\n\t    }\n\t};\n\t\n\tfunction init(view) {\n\t    view.attachEvent(\"onComponentInit\", function () {\n\t        return ready(view);\n\t    });\n\t\n\t    var bar = {\n\t        view: \"toolbar\",\n\t        css: \"webix_ssheet_toolbar webix_layout_toolbar\",\n\t        id: \"bar\",\n\t        padding: 0,\n\t        elements: ui.toolbarElements(view, view.config.buttons || buttons),\n\t        on: {\n\t            onChange: function onChange() {\n\t                var source = this.$eventSource;\n\t                var value = source.getValue();\n\t                var name = source.config.name;\n\t\n\t                view.callEvent(\"onStyleSet\", [name, value]);\n\t            },\n\t            onItemClick: function onItemClick(id) {\n\t                var viewId = view.innerId(id);\n\t                if (actions[viewId]) {\n\t                    actions[viewId].call(this, view);\n\t                }\n\t            }\n\t        }\n\t    };\n\t    view.callEvent(\"onViewInit\", [\"toolbar\", bar]);\n\t    return bar;\n\t}\n\t\n\tfunction ready(view) {\n\t    view.attachEvent(\"onAfterSelect\", function (selected) {\n\t        return setValues(view, selected);\n\t    });\n\t}\n\t\n\tfunction setValues(view, selected) {\n\t    var styles = {};\n\t    var cell = selected[0];\n\t    if (cell) {\n\t        var obj = view.getStyle(cell.row, cell.column);\n\t        if (obj) styles = obj.props;\n\t    }\n\t\n\t    webix.extend(styles, defaultStyles);\n\t    view.$$(\"bar\").setValues(styles);\n\t}\n\n/***/ },\n/* 10 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\texports.__esModule = true;\n\texports.init = init;\n\texports.getStyle = getStyle;\n\texports.setStyle = setStyle;\n\t//do not change order, it will break server side compatibility\n\t//add new options to the end of this list\n\tvar _style_names = [\"color\", \"background\", \"text-align\", \"font-family\", \"font-size\", \"font-style\", \"text-decoration\", \"font-weight\", \"vertical-align\", \"wrap\", \"borders\", \"format\", \"border-right\", \"border-bottom\", \"border-left\", \"border-top\"];\n\t\n\tvar _style_map = {\n\t\t\"vertical-align\": {\n\t\t\t\"top\": function top(obj) {\n\t\t\t\treturn \"display: block;\";\n\t\t\t},\n\t\t\t\"middle\": function middle(obj) {\n\t\t\t\tvar align = \"flex-start\";\n\t\t\t\tif (obj[\"text-align\"] == \"center\") align = \"center\";else if (obj[\"text-align\"] == \"right\") align = \"flex-end\";\n\t\t\t\tvar result = \"display: flex; align-items: center;justify-content:\" + align + \";\";\n\t\t\t\treturn result;\n\t\t\t},\n\t\t\t\"bottom\": function bottom(obj) {\n\t\t\t\tvar align = \"flex-start\";\n\t\t\t\tif (obj[\"text-align\"] == \"center\") align = \"center\";else if (obj[\"text-align\"] == \"right\") align = \"flex-end\";\n\t\t\t\tvar result = \"display: flex; align-items:flex-end;justify-content:\" + align + \";\";\n\t\t\t\treturn result;\n\t\t\t}\n\t\t},\n\t\t\"wrap\": {\n\t\t\t\"wrap\": function wrap(obj) {\n\t\t\t\treturn \"white-space: normal !important;\";\n\t\t\t},\n\t\t\t\"nowrap\": function nowrap(obj) {\n\t\t\t\treturn \"\";\n\t\t\t}\n\t\t},\n\t\t\"format\": \"\",\n\t\t\"borders\": \"\",\n\t\t\"border-left\": function borderLeft(obj) {\n\t\t\tif (obj[\"border-left\"]) return \"border-left: 1px solid \" + obj[\"border-left\"] + \" !important;\";\n\t\t\treturn \"\";\n\t\t},\n\t\t\"border-top\": function borderTop(obj) {\n\t\t\tif (obj[\"border-top\"]) return \"border-top: 1px solid \" + obj[\"border-top\"] + \" !important;\";\n\t\t\treturn \"\";\n\t\t},\n\t\t\"border-right\": function borderRight(obj) {\n\t\t\tif (obj[\"border-right\"]) return \"border-right-color: \" + obj[\"border-right\"] + \" !important;\";\n\t\t\treturn \"\";\n\t\t},\n\t\t\"border-bottom\": function borderBottom(obj) {\n\t\t\tif (obj[\"border-bottom\"]) return \"border-bottom-color: \" + obj[\"border-bottom\"] + \" !important;\";\n\t\t\treturn \"\";\n\t\t}\n\t};\n\t\n\tvar border_checks = {\n\t\t\"border-left\": function borderLeft(cell, area, mode) {\n\t\t\treturn cell.column == area.start.column;\n\t\t},\n\t\t\"border-right\": function borderRight(cell, area, mode) {\n\t\t\treturn cell.column == area.end.column || mode == \"all\" || mode == \"no\";\n\t\t},\n\t\t\"border-top\": function borderTop(cell, area, mode) {\n\t\t\treturn cell.row == area.start.row;\n\t\t},\n\t\t\"border-bottom\": function borderBottom(cell, area, mode) {\n\t\t\treturn cell.row == area.end.row || mode == \"all\" || mode == \"no\";\n\t\t}\n\t};\n\t\n\tvar _style_handlers = {\n\t\t\"borders\": function borders(view, style, value, cell) {\n\t\t\tvar area = view.$$(\"cells\").getSelectArea();\n\t\t\tvalue = value.split(\",\");\n\t\t\tvar type = value[0];\n\t\t\tvar color = value[1];\n\t\n\t\t\tvar modes = [\"border-left\", \"border-right\", \"border-bottom\", \"border-top\"];\n\t\n\t\t\tif (type == \"no\") color = \"\";else if (type == \"top-bottom\") {\n\t\t\t\tmodes = [\"border-top\", \"border-bottom\"];\n\t\t\t} else if (type != \"all\" && type != \"outer\") modes = [\"border-\" + type];\n\t\n\t\t\tfor (var i = 0; i < modes.length; i++) {\n\t\t\t\tvar mode = modes[i];\n\t\t\t\tif (border_checks[mode](cell, area, type)) style = _updateStyle(view, style, mode, color, cell);\n\t\t\t}\n\t\n\t\t\treturn style;\n\t\t}\n\t};\n\t\n\tfunction init(view) {\n\t\tview.attachEvent(\"onStyleSet\", function (name, value) {\n\t\t\treturn _applyStyles(view, name, value);\n\t\t});\n\t\tview.attachEvent(\"onDataParse\", function (data) {\n\t\t\treturn _parse(view, data);\n\t\t});\n\t\tview.attachEvent(\"onDataSerialize\", function (data) {\n\t\t\treturn _serialize(view, data);\n\t\t});\n\t\tview.attachEvent(\"onReset\", function (columns, rows) {\n\t\t\treturn reset(view);\n\t\t});\n\t\tview.attachEvent(\"onUndo\", function (type, row, column, style) {\n\t\t\tif (type == \"style\") _undoStyle(view, row, column, style);\n\t\t});\n\t\treset(view);\n\t}\n\t\n\tfunction reset(view) {\n\t\tview._styles = {};\n\t\tview._styles_cache = {};\n\t\tview._styles_max = 0;\n\t}\n\t\n\tfunction getStyle(view, cell) {\n\t\tvar styles = view.getRow(cell.row).$cellCss;\n\t\tif (styles) {\n\t\t\tvar styleid = styles[cell.column];\n\t\t\tif (styleid) return view._styles[styleid];\n\t\t}\n\t\treturn null;\n\t}\n\t\n\t// undo\n\tfunction _undoStyle(view, row, column, style) {\n\t\tvar cell = { row: row, column: column };\n\t\tsetStyle(view, cell, style);\n\t\tvar oldStyle = getStyle(view, cell);\n\t\tview.callEvent(\"onStyleChange\", [row, column, style, oldStyle]);\n\t\tview.refresh();\n\t}\n\t\n\tfunction _serialize(view, obj) {\n\t\tvar styles = [];\n\t\n\t\tfor (var key in view._styles_cache) {\n\t\t\tstyles.push([view._styles_cache[key].id, key]);\n\t\t}obj.styles = styles;\n\t}\n\t\n\tfunction _parse(view, obj) {\n\t\tif (obj.styles) for (var i = 0; i < obj.styles.length; i++) {\n\t\t\tvar styleObj = obj.styles[i];\n\t\t\tvar style = {\n\t\t\t\tid: styleObj[0],\n\t\t\t\ttext: styleObj[1],\n\t\t\t\tprops: _styleFromText(styleObj[1])\n\t\t\t};\n\t\n\t\t\t_addStyle(view, style, true);\n\t\t\tview._styles[style.id] = style;\n\t\t}\n\t\n\t\tfor (var i = 0; i < obj.data.length; i++) {\n\t\t\tvar _obj$data$i = obj.data[i];\n\t\t\tvar row = _obj$data$i[0];\n\t\t\tvar column = _obj$data$i[1];\n\t\t\tvar value = _obj$data$i[2];\n\t\t\tvar css = _obj$data$i[3];\n\t\n\t\n\t\t\tif (css) update_style_data(view.getRow(row), column, view._styles[css]);\n\t\t}\n\t}\n\t\n\tfunction _applyStyles(view, name, value) {\n\t\t//this - spreadsheet\n\t\tvar group = webix.uid();\n\t\tview.eachSelectedCell(function (cell) {\n\t\t\t_applyCellStyles(view, cell, name, value, group);\n\t\t});\n\t\tview.refresh();\n\t}\n\t\n\tfunction _applyCellStyles(view, cell, name, value, group) {\n\t\tvar ostyle = getStyle(view, cell);\n\t\n\t\tvar nstyle = _updateStyle(view, ostyle, name, value, cell);\n\t\tif (nstyle && nstyle != ostyle) {\n\t\t\tif (view.callEvent(\"onBeforeStyleChange\", [cell.row, cell.column, nstyle, ostyle, group])) {\n\t\t\t\tsetStyle(view, cell, nstyle);\n\t\t\t\tview.callEvent(\"onStyleChange\", [cell.row, cell.column, nstyle, ostyle, group]);\n\t\t\t}\n\t\t}\n\t}\n\t\n\tfunction _updateStyle(view, style, name, value, cell) {\n\t\n\t\tif (_style_handlers[name]) {\n\t\t\treturn _style_handlers[name](view, style, value, cell);\n\t\t}\n\t\n\t\tif (style && style.props[name] == value) return style;\n\t\n\t\tvar nstyle = { text: \"\", id: 0, props: style ? webix.copy(style.props) : {} };\n\t\tnstyle.props[name] = value;\n\t\tnstyle.text = _styleToText(nstyle);\n\t\n\t\tvar cache = view._styles_cache[nstyle.text];\n\t\tif (cache) return cache;\n\t\n\t\t_addStyle(view, nstyle);\n\t\n\t\treturn nstyle;\n\t}\n\t\n\tfunction update_style_data(item, column, style) {\n\t\titem.$cellCss = item.$cellCss || {};\n\t\titem.$cellFormat = item.$cellFormat || {};\n\t\n\t\tif (style) {\n\t\t\titem.$cellCss[column] = style.id;\n\t\t\titem.$cellFormat[column] = style.props.format || null;\n\t\t} else {\n\t\t\tdelete item.$cellCss[column];\n\t\t\tdelete item.$cellFormat[column];\n\t\t}\n\t}\n\t\n\tfunction setStyle(view, cell, style) {\n\t\tif (style) view._styles[style.id] = style;\n\t\tupdate_style_data(view.getRow(cell.row), cell.column, style);\n\t\tview.saveCell(cell.row, cell.column);\n\t}\n\t\n\tfunction _addStyle(view, style, silent) {\n\t\tview._styles_max++;\n\t\tview._styles_cache[style.text] = style;\n\t\n\t\tstyle.id = style.id || \"wss\" + view._styles_max;\n\t\n\t\tvar css = \"\";\n\t\tfor (var key in style.props) {\n\t\t\tif (style.props[key]) {\n\t\t\t\tif (_style_map[key]) {\n\t\t\t\t\tif (_style_map[key][style.props[key]]) css += _style_map[key][style.props[key]](style.props);else if (typeof _style_map[key] == \"function\") css += _style_map[key](style.props);\n\t\t\t\t} else css += key + \":\" + style.props[key] + \";\";\n\t\t\t}\n\t\t}\n\t\n\t\twebix.html.addStyle(\".wss_\" + view.$index + \" .\" + style.id + \"{\" + css + \"}\");\n\t\n\t\tif (!silent) view._save(\"styles\", { name: style.id, text: style.text });\n\t}\n\t\n\tfunction _styleToText(style) {\n\t\tvar id = [];\n\t\tfor (var i = 0; i < _style_names.length; i++) {\n\t\t\tid.push(style.props[_style_names[i]]);\n\t\t}return id.join(\";\");\n\t}\n\t\n\tfunction _styleFromText(text) {\n\t\tvar parts = text.split(\";\");\n\t\tvar props = {};\n\t\tfor (var i = 0; i < _style_names.length; i++) {\n\t\t\tprops[_style_names[i]] = parts[i];\n\t\t}return props;\n\t}\n\n/***/ },\n/* 11 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\texports.__esModule = true;\n\texports.init = init;\n\texports.reset = reset;\n\t\n\tvar _math = __webpack_require__(12);\n\t\n\tvar mth = _interopRequireWildcard(_math);\n\t\n\tvar _clipboard = __webpack_require__(15);\n\t\n\tvar clp = _interopRequireWildcard(_clipboard);\n\t\n\tvar _column_operations = __webpack_require__(16);\n\t\n\tvar cop = _interopRequireWildcard(_column_operations);\n\t\n\tvar _column_names = __webpack_require__(14);\n\t\n\tvar nms = _interopRequireWildcard(_column_names);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj[\"default\"] = obj; return newObj; } }\n\t\n\tfunction init(view, extra) {\n\t\tview.attachEvent(\"onComponentInit\", function () {\n\t\t\treturn ready(view);\n\t\t});\n\t\n\t\tvar datatable = {\n\t\t\tview: \"datatable\", id: \"cells\", css: \"webix_ssheet_table wss_\" + view.$index,\n\t\t\theaderRowHeight: 20,\n\t\t\t//select:\"cell\",\n\t\t\tspans: true,\n\t\t\tleftSplit: 1,\n\t\t\tareaselect: true,\n\t\t\teditable: true,\n\t\t\teditaction: \"dblclick\",\n\t\t\tnavigation: true\n\t\t};\n\t\n\t\t//enable clipboard by default\n\t\tif (typeof extra.clipboard === \"undefined\") extra.clipboard = true;\n\t\tif (extra) datatable = webix.extend(datatable, extra, true);\n\t\n\t\treturn datatable;\n\t}\n\t\n\tfunction ready(view) {\n\t\tvar grid = view.$$(\"cells\");\n\t\n\t\tif (view.config.math) {\n\t\t\tmth.init(view);\n\t\t\tgrid.config.editMath = true;\n\t\t}\n\t\n\t\t//FIXME - we need to create a standard solution for context menu\n\t\tif (view.config.columnOperation) {\n\t\t\tcop.init(view);\n\t\t\tgrid.on_context.sheet_column_0 = function (e, obj, target) {\n\t\t\t\tvar pos = webix.html.pos(e);\n\t\t\t\twebix.$$(\"rows_context_menu\").show(pos, obj.row, 'row');\n\t\t\t\twebix.html.preventEvent(e);\n\t\t\t};\n\t\n\t\t\tgrid.on_context.webix_hcell = function (e, obj, target) {\n\t\t\t\tvar pos = webix.html.pos(e);\n\t\t\t\twebix.$$(\"rows_context_menu\").show(pos, obj.column, 'column');\n\t\t\t\twebix.html.preventEvent(e);\n\t\t\t};\n\t\t}\n\t\n\t\t//saving value after edit\n\t\tgrid.attachEvent(\"onAfterEditStop\", function (st, ed) {\n\t\t\t//ignore empty cells\n\t\t\tif (st.old === webix.undefined && st.value === \"\") return;\n\t\n\t\t\tif (st.value != st.old && view.callEvent(\"onBeforeValueChange\", [ed.row, ed.column, st.value, st.old])) view.setCellValue(ed.row, ed.column, st.value);\n\t\t});\n\t\n\t\tif (grid.config.clipboard) clp.init(view, grid.config.readonly);\n\t\n\t\t//parsing initial data\n\t\tview.attachEvent(\"onDataParse\", function (data) {\n\t\t\treturn _parse(view, data);\n\t\t});\n\t\tview.attachEvent(\"onDataSerialize\", function (data, config) {\n\t\t\treturn _serialize(view, data, config);\n\t\t});\n\t\n\t\t//column and row selection\n\t\tgrid.attachEvent(\"onBeforeSelect\", function (id) {\n\t\t\treturn id.column != \"rowId\";\n\t\t});\n\t\tgrid.attachEvent(\"onBeforeBlockSelect\", function (start, end) {\n\t\t\tif (start.column === \"rowId\") start.column = 1;\n\t\t\tif (end.column === \"rowId\") end.column = 1;\n\t\t});\n\t\tgrid.attachEvent(\"onItemClick\", function (id, e) {\n\t\t\treturn id.column == \"rowId\" ? cop.selectRow(id.row, view) : true;\n\t\t});\n\t\tgrid.attachEvent(\"onHeaderClick\", function (id, e) {\n\t\t\treturn cop.selectColumn(id.column, view);\n\t\t});\n\t\n\t\t//reset API\n\t\tview.attachEvent(\"onReset\", function (config) {\n\t\t\treturn reset(view, config);\n\t\t});\n\t\t// undo\n\t\tview.attachEvent(\"onUndo\", function (type, row, column, value) {\n\t\t\tif (type == \"value\") _undoValue(view, row, column, value);\n\t\t});\n\t\n\t\tgrid.attachEvent(\"onBlur\", function () {\n\t\t\t//after focus moved out, check and if it is somewhere\n\t\t\t//on the spreadsheet controls them move focus back to datatable\n\t\t\twebix.delay(function () {\n\t\t\t\tvar target = document.activeElement;\n\t\t\t\tif (target && target.tagName == \"INPUT\") return;\n\t\n\t\t\t\tvar focus = webix.UIManager.getFocus();\n\t\t\t\tif (focus && focus != grid && focus.getTopParentView && focus.getTopParentView() === view) webix.UIManager.setFocus(grid);\n\t\t\t}, this, [], 100);\n\t\t});\n\t}\n\t\n\tfunction _serialize(view, obj, config) {\n\t\tvar math = config && config.math;\n\t\tvar data = [];\n\t\tvar grid = view.$$(\"cells\");\n\t\tvar state = grid.getState();\n\t\tvar columns = state.ids.concat(state.hidden);\n\t\n\t\tgrid.eachRow(function (obj) {\n\t\t\tvar item = this.getItem(obj);\n\t\t\tfor (var i = 1; i < columns.length; i++) {\n\t\t\t\tvar key = columns[i];\n\t\t\t\tvar value = item[key];\n\t\t\t\tvar css = item.$cellCss ? item.$cellCss[key] || \"\" : \"\";\n\t\t\t\tif (value !== \"\" && typeof value != \"undefined\" || css) {\n\t\t\t\t\tif (math) value = item[\"$\" + key] || value;\n\t\t\t\t\tdata.push([obj * 1, key * 1, value || \"\", css]);\n\t\t\t\t}\n\t\t\t}\n\t\t}, true);\n\t\n\t\tobj.data = data;\n\t}\n\t\n\tfunction _parse(view, obj) {\n\t\tvar grid = view.$$(\"cells\");\n\t\n\t\tif (obj.sizes) grid.define(\"fixedRowHeight\", false);\n\t\n\t\tfor (var i = 0; i < obj.data.length; i++) {\n\t\t\tvar _obj$data$i = obj.data[i];\n\t\t\tvar row = _obj$data$i[0];\n\t\t\tvar column = _obj$data$i[1];\n\t\t\tvar value = _obj$data$i[2];\n\t\t\tvar style = _obj$data$i[3];\n\t\n\t\n\t\t\tvar item = grid.getItem(row);\n\t\t\titem[column] = value;\n\t\t\tif (style) {\n\t\t\t\titem.$cellCss = item.$cellCss || {};\n\t\t\t\titem.$cellCss[column] = style;\n\t\t\t}\n\t\t\tview.callEvent(\"onCellChange\", [row, column, value]);\n\t\t}\n\t}\n\t\n\tfunction cell_template(view, obj, common, value, column) {\n\t\tvar format = obj.$cellFormat ? obj.$cellFormat[column.id] : null;\n\t\tif (format) {\n\t\t\tvar helper = view.formatHelpers[format];\n\t\t\treturn helper ? helper(value) : value;\n\t\t}\n\t\treturn value;\n\t}\n\t\n\tfunction reset(view, config) {\n\t\tvar grid = view.$$(\"cells\");\n\t\tvar select = grid.getSelectArea();\n\t\tgrid.clearAll();\n\t\n\t\tvar columns = view.config.columnCount;\n\t\tvar rows = view.config.rowCount;\n\t\n\t\tvar cols = [{\n\t\t\tid: \"rowId\", header: \"\", width: 40,\n\t\t\tcss: \"sheet_column_0\",\n\t\t\ttemplate: function template(el, obj, c, config, i) {\n\t\t\t\treturn el.id;\n\t\t\t}\n\t\t}];\n\t\n\t\tfor (var i = 1; i <= columns; i++) {\n\t\t\tcols.push({\n\t\t\t\tid: i,\n\t\t\t\teditor: \"text\",\n\t\t\t\theader: {\n\t\t\t\t\ttext: nms.encode[i],\n\t\t\t\t\tcss: view._hideColumn && view._hideColumn.indexOf(i + 1) >= 0 ? 'webix_ss_hideColumn' : ''\n\t\t\t\t},\n\t\t\t\ttemplate: function template(obj, common, value, column) {\n\t\t\t\t\treturn cell_template(view, obj, common, value, column);\n\t\t\t\t} });\n\t\t}\n\t\tgrid.refreshColumns(cols);\n\t\n\t\tif (view._hideColumn && view._hideColumn.length) view._hideColumn.map(function (id) {\n\t\t\treturn grid.hideColumn(id);\n\t\t});\n\t\n\t\tvar data = [];\n\t\tfor (var i = 1; i <= rows; i++) {\n\t\t\tdata.push({ id: i });\n\t\t}grid.parse(data);\n\t\n\t\tif (view._hideRow && view._hideRow.length) {\n\t\t\tgrid.filter(function (obj) {\n\t\t\t\tif (view._hideRow.indexOf(obj.id) === -1) {\n\t\t\t\t\treturn true;\n\t\t\t\t} else {\n\t\t\t\t\tif (obj.id - 1 === 0) {\n\t\t\t\t\t\tvar cell = view.$$(\"cells\").getColumnConfig(\"rowId\").header[0];\n\t\t\t\t\t\tcell.css = (cell.css || \"\") + \" webix_ss_hideRow\";\n\t\t\t\t\t\tview.$$(\"cells\").refreshColumns();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tview.$$(\"cells\").addCellCss(obj.id - 1, \"rowId\", \"webix_ss_hideRow\");\n\t\t\t\t\t}\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\n\t\tif (select && config.select && select.end.row < rows && select.end.column < columns) grid.addSelectArea(select.start, select.end);\n\t}\n\t\n\tfunction _undoValue(view, row, column, value) {\n\t\tview.setCellValue(row, column, value);\n\t\tview.refresh();\n\t}\n\n/***/ },\n/* 12 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\texports.__esModule = true;\n\texports.init = init;\n\t\n\tvar _math_methods = __webpack_require__(13);\n\t\n\tvar methods = _interopRequireWildcard(_math_methods);\n\t\n\tvar _column_names = __webpack_require__(14);\n\t\n\tvar nms = _interopRequireWildcard(_column_names);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj[\"default\"] = obj; return newObj; } }\n\t\n\tfunction init(view) {\n\t\tvar triggers = [];\n\t\tvar backtrak = [];\n\t\n\t\t//math operations object\n\t\tvar core = get_core(view);\n\t\n\t\tview.attachEvent(\"onReset\", function (columns, rows) {\n\t\t\ttriggers = [];\n\t\t\tbacktrak = [];\n\t\t});\n\t\n\t\tview.attachEvent(\"onCellChange\", function (r, c, value) {\n\t\t\t//check if changed cell was a math cell, based on some other cells\n\t\t\t//clean triggers in such case\n\t\t\tvar line = backtrak[r];\n\t\t\tif (line && line[c]) remove_triggers(triggers, backtrak, c, r);\n\t\n\t\t\t//if new value is a math, calculate it and store triggers\n\t\t\tif (value && value.toString().indexOf(\"=\") === 0) {\n\t\t\t\tvar formula = _parse(value);\n\t\t\t\tvar row = view.getRow(r);\n\t\t\t\trow[c] = _execute(formula.handler, core);\n\t\t\t\trow[\"$\" + c] = value;\n\t\n\t\t\t\tif (formula.triggers.length) add_triggers(triggers, backtrak, formula.triggers, { row: r, column: c, handler: formula.handler });\n\t\t\t}\n\t\n\t\t\t//check if we have some other cells, related to the changed one\n\t\t\tcheck_trigger(r, c);\n\t\t});\n\t\n\t\t//execute math handler\n\t\tfunction applyMath(r, c, handler) {\n\t\t\tvar row = view.getRow(r);\n\t\t\trow[c] = _execute(handler, core);\n\t\t\t//check if we have related cells, process their math as well\n\t\t\tcheck_trigger(r, c);\n\t\t}\n\t\n\t\t//check and run triggers\n\t\tfunction check_trigger(row, column) {\n\t\t\t//triggers is a matrix[row][column]\n\t\t\t//store array of coordinates of related cells\n\t\t\tvar line = triggers[row];\n\t\t\tif (line) {\n\t\t\t\tvar block = line[column];\n\t\t\t\tif (block) {\n\t\t\t\t\tfor (var i = 0; i < block.length; i++) {\n\t\t\t\t\t\tvar cell = block[i];\n\t\t\t\t\t\t//if triggers exists, run them\n\t\t\t\t\t\tif (cell.row != row || cell.column != column) applyMath(cell.row, cell.column, cell.handler);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\t//add new triggers\n\tfunction add_triggers(trs, back, adds, cell) {\n\t\t//trs - matrix of triggers\n\t\t//back - matrix of backlinks\n\t\t//adds - list of triggers\n\t\tvar blist = [];\n\t\tfor (var i = 0; i < adds.length; i++) {\n\t\t\tvar line = adds[i];\n\t\t\t//line = [start_row, start_column, end_row, end_column]\n\t\t\tfor (var j = line[0]; j <= line[2]; j++) {\n\t\t\t\tvar step = trs[j];\n\t\t\t\tif (!step) step = trs[j] = [];\n\t\t\t\tfor (var k = line[1]; k <= line[3]; k++) {\n\t\t\t\t\tvar block = step[k];\n\t\t\t\t\tif (!block) block = step[k] = [];\n\t\n\t\t\t\t\tblist.push([j, k]);\n\t\t\t\t\tblock.push(cell);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\n\t\t//store back-relations, for easy trigger removing\n\t\tadd_backtrack(back, cell.row, cell.column, blist);\n\t}\n\t\n\t//store backtrack relations as a matrix\n\tfunction add_backtrack(back, row, column, adds) {\n\t\tvar line = back[row];\n\t\tif (!line) line = back[row] = [];\n\t\tline[column] = adds;\n\t}\n\t\n\t//remove unused triggers\n\tfunction remove_triggers(trs, back, c, r) {\n\t\t//get list of triggers from backtrack structure\n\t\tvar adds = back[r][c];\n\t\tback[r][c] = null;\n\t\n\t\t//delete triggers\n\t\tfor (var i = adds.length - 1; i >= 0; i--) {\n\t\t\tvar cell = adds[i];\n\t\t\tvar block = trs[cell[0]][cell[1]];\n\t\n\t\t\tfor (var j = block.length - 1; j >= 0; j--) {\n\t\t\t\tvar bcell = block[j];\n\t\t\t\tif (bcell.row == r && bcell.column == c) block.splice(j, 1);\n\t\t\t}\n\t\t}\n\t}\n\t\n\t//convert math string to the js function\n\tfunction _parse(value) {\n\t\tvar triggers = [];\n\t\n\t\tvalue = value.replace(/\\((.*,.*)\\)/g, \"([$1])\");\n\t\t//group operations\n\t\tvalue = value.replace(/([A-Z]{1,2})([0-9]+)\\:([A-Z]{1,2})([0-9]+)/gi, function (v, c1, r1, c2, r2) {\n\t\t\tc1 = nms.decode[c1.toUpperCase()];\n\t\t\tc2 = nms.decode[c2.toUpperCase()];\n\t\t\ttriggers.push([r1 * 1, c1, r2 * 1, c2]);\n\t\t\treturn \"this.r(\" + c1 + \",\" + r1 + \",\" + c2 + \",\" + r2 + \")\";\n\t\t});\n\t\n\t\t//value operations\n\t\tvalue = value.replace(/([A-Z]{1,2})([0-9]+)/gi, function (v, c1, r1) {\n\t\t\tc1 = nms.decode[c1.toUpperCase()];\n\t\t\ttriggers.push([r1 * 1, c1, r1 * 1, c1]);\n\t\t\treturn \"this.v(\" + c1 + \",\" + r1 + \")*1\";\n\t\t});\n\t\n\t\t//operator names\n\t\tvalue = value.replace(/[A-Z]+/g, function (val) {\n\t\t\treturn \"this.m.\" + val;\n\t\t});\n\t\n\t\t//global return\n\t\tvalue = value.replace(\"=\", \"return \");\n\t\n\t\treturn {\n\t\t\tcode: value,\n\t\t\ttriggers: triggers,\n\t\t\thandler: _build_function(value)\n\t\t};\n\t}\n\t\n\tfunction _build_function(value) {\n\t\ttry {\n\t\t\treturn new Function(value);\n\t\t} catch (e) {}\n\t}\n\t\n\t//run math function\n\tfunction _execute(formula, core) {\n\t\tvar value;\n\t\ttry {\n\t\t\tvalue = formula.call(core);\n\t\t} catch (e) {\n\t\t\t//some error in the math code\n\t\t\treturn \"ERROR\";\n\t\t}\n\t\n\t\t//round values to fix math precision issue in JS\n\t\tif ((value || value === 0) && !isNaN(value)) {\n\t\t\treturn Math.round(value * 100000) / 100000;\n\t\t} else {\n\t\t\treturn \"\";\n\t\t}\n\t}\n\t\n\tfunction _to_number(v) {\n\t\tif (v || v === 0) {\n\t\t\tv = v * 1;\n\t\t\tif (!isNaN(v)) return v;\n\t\t}\n\t\treturn false;\n\t}\n\t\n\t//converts cell references to code\n\tfunction get_core(view) {\n\t\treturn {\n\t\t\tr: function r(c1, r1, c2, r2) {\n\t\t\t\tvar set = [];\n\t\t\t\tfor (var i = r1; i <= r2; i++) {\n\t\t\t\t\tvar item = view.getRow(i);\n\t\t\t\t\tfor (var j = c1; j <= c2; j++) {\n\t\t\t\t\t\tset.push(item[j]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn set;\n\t\t\t},\n\t\t\tv: function v(c, r) {\n\t\t\t\tvar val = view.getRow(r)[c];\n\t\t\t\tif (val || val === 0) return val * 1;\n\t\t\t\treturn \"\";\n\t\t\t},\n\t\t\tm: methods\n\t\t};\n\t}\n\n/***/ },\n/* 13 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\texports.__esModule = true;\n\texports.SUM = SUM;\n\texports.AVERAGE = AVERAGE;\n\texports.COUNT = COUNT;\n\texports.COUNTA = COUNTA;\n\texports.COUNTBLANK = COUNTBLANK;\n\texports.MAX = MAX;\n\texports.MIN = MIN;\n\texports.PRODUCT = PRODUCT;\n\texports.SUMPRODUCT = SUMPRODUCT;\n\texports.SUMSQ = SUMSQ;\n\texports.VARP = VARP;\n\texports.STDEVP = STDEVP;\n\texports.POWER = POWER;\n\texports.QUOTIENT = QUOTIENT;\n\texports.SQRT = SQRT;\n\texports.ABS = ABS;\n\texports.RAND = RAND;\n\texports.PI = PI;\n\texports.INT = INT;\n\texports.ROUND = ROUND;\n\texports.ROUNDDOWN = ROUNDDOWN;\n\texports.ROUNDUP = ROUNDUP;\n\texports.TRUNC = TRUNC;\n\texports.EVEN = EVEN;\n\texports.ODD = ODD;\n\tfunction _to_number(v) {\n\t\tif (v || v === 0) {\n\t\t\tv = v * 1;\n\t\t\tif (!isNaN(v)) return v;\n\t\t}\n\t\treturn false;\n\t}\n\t\n\t/*Empty cells, logical values like TRUE, or text are ignored.*/\n\tfunction SUM(set) {\n\t\tvar sum = 0;\n\t\tfor (var i = 0; i < set.length; i++) {\n\t\t\tvar v = _to_number(set[i]);\n\t\t\tif (v !== false) sum += v;\n\t\t}\n\t\treturn sum;\n\t}\n\t\n\t/*If a range or cell reference argument contains text, logical values, or empty cells, those values are ignored; \n\thowever, cells with the value zero are included.*/\n\tfunction AVERAGE(set) {\n\t\tvar sum = 0,\n\t\t    count = 0;\n\t\tfor (var i = 0; i < set.length; i++) {\n\t\t\tvar v = _to_number(set[i]);\n\t\t\tif (v !== false) {\n\t\t\t\tsum += v;count++;\n\t\t\t}\n\t\t}\n\t\treturn sum / count;\n\t}\n\t\n\t/*Empty cells, logical values, text, or error values in the array or reference are not counted. */\n\tfunction COUNT(set) {\n\t\tvar count = 0;\n\t\tfor (var i = 0; i < set.length; i++) {\n\t\t\tvar v = _to_number(set[i]);\n\t\t\tif (v !== false) count++;\n\t\t}\n\t\treturn count;\n\t}\n\t\n\t/*counts the number of cells that are not empty in a range, zero is excluded.*/\n\tfunction COUNTA(set) {\n\t\tvar count = 0;\n\t\tfor (var i = 0; i < set.length; i++) {\n\t\t\tif (set[i] && set[i] * 1 !== 0) count++;\n\t\t}return count;\n\t}\n\t\n\t/*Counts empty cells in a specified range of cells. Cells with zero values are not counted.*/\n\tfunction COUNTBLANK(set) {\n\t\tvar count = 0;\n\t\tfor (var i = 0; i < set.length; i++) {\n\t\t\tif (!set[i] * 1) count++;\n\t\t}return count;\n\t}\n\t\n\t/*Empty cells, logical values, or text in the array or reference are ignored.\n\tIf the arguments contain no numbers, MAX returns 0 (zero).*/\n\tfunction MAX(set) {\n\t\tvar max = \"\";\n\t\tfor (var i = 0; i < set.length; i++) {\n\t\t\tvar v = _to_number(set[i]);\n\t\t\tif (v !== false && (v > max || max === \"\")) max = v;\n\t\t}\n\t\treturn max || 0;\n\t}\n\t\n\t/*Empty cells, logical values, or text in the array or reference are ignored. \n\tIf the arguments contain no numbers, MIN returns 0.*/\n\tfunction MIN(set) {\n\t\tvar min = \"\";\n\t\tfor (var i = 0; i < set.length; i++) {\n\t\t\tvar v = _to_number(set[i]);\n\t\t\tif (v !== false && (v < min || min === \"\")) min = v;\n\t\t}\n\t\treturn min || 0;\n\t}\n\t\n\t/*Oonly numbers in the array or reference are multiplied. \n\tEmpty cells, logical values, and text in the array or reference are ignored.*/\n\tfunction PRODUCT(set) {\n\t\tvar product = \"\";\n\t\tfor (var i = 0; i < set.length; i++) {\n\t\t\tvar v = _to_number(set[i]);\n\t\t\tif (v !== false) product = product === \"\" ? v : product * v;\n\t\t}\n\t\treturn product;\n\t}\n\t\n\t/* For valid products only numbers are multiplied. Empty cells, logical values, and text are ignored.\n\tTreats array entries that are not numeric as if they were zeros.*/\n\tfunction SUMPRODUCT(sets) {\n\t\tvar length = sets[0].length;\n\t\tfor (var i in sets) {\n\t\t\tif (sets[i].length !== length) return;\n\t\t}var sp = 0;\n\t\tfor (var i = 0; i < sets[0].length; i++) {\n\t\t\tvar product = \"\";\n\t\t\tfor (var s in sets) {\n\t\t\t\tvar v = _to_number(sets[s][i]);\n\t\t\t\tif (v !== false) product = product === \"\" ? v : product * v;else {\n\t\t\t\t\tproduct = 0;break;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!webix.isUndefined(product)) sp += product;\n\t\t}\n\t\treturn sp;\n\t}\n\t\n\t/*Empty cells, logical values, text, or error values in the array or reference are ignored. */\n\tfunction SUMSQ(set) {\n\t\tvar sq = 0;\n\t\tfor (var i = 0; i < set.length; i++) {\n\t\t\tvar v = _to_number(set[i]);\n\t\t\tif (typeof v === \"number\") sq += Math.pow(v, 2);\n\t\t}\n\t\treturn sq;\n\t}\n\t\n\t/*Empty cells, logical values, text, or error values in the array or reference are ignored. */\n\tfunction VARP(set) {\n\t\tvar count = this.COUNT(set);\n\t\tvar avg = this.AVERAGE(set);\n\t\n\t\tvar sum = 0;\n\t\tfor (var i = 0; i < set.length; i++) {\n\t\t\tvar v = _to_number(set[i]);\n\t\t\tif (v !== false) sum += Math.pow(v - avg, 2);\n\t\t}\n\t\treturn sum / count;\n\t}\n\t\n\t/* Empty cells, logical values, text, or error values in the array or reference are ignored. */\n\tfunction STDEVP(set) {\n\t\treturn Math.sqrt(this.VARP(set));\n\t}\n\t\n\t/*real numbers*/\n\tfunction POWER(num, pow) {\n\t\tvar n = _to_number(num),\n\t\t    p = _to_number(pow);\n\t\tif (typeof n == \"number\" && typeof p == \"number\") return Math.pow(n, p);\n\t}\n\t\n\t/*real numbers*/\n\tfunction QUOTIENT(num, div) {\n\t\tvar n = _to_number(num),\n\t\t    d = _to_number(div);\n\t\tif (typeof n == \"number\" && typeof d == \"number\") return n / d;\n\t}\n\t\n\t/*Returns a positive square root.*/\n\tfunction SQRT(num) {\n\t\tvar v = _to_number(num);\n\t\tif (v !== false && v >= 0) return Math.sqrt(v);\n\t}\n\t\n\tfunction ABS(num) {\n\t\tvar v = _to_number(num);\n\t\tif (v !== false) return Math.abs(v);\n\t}\n\t\n\tfunction RAND() {\n\t\treturn Math.random();\n\t}\n\t\n\tfunction PI() {\n\t\treturn Math.PI;\n\t}\n\t\n\t/*Rounds a number down to the nearest integer*/\n\tfunction INT(num) {\n\t\tvar v = _to_number(num);\n\t\tif (v !== false) return Math.round(v);\n\t}\n\t\n\t/*rounds a number to a specified number of digits*/\n\tfunction ROUND(num, digits) {\n\t\tvar v = _to_number(num);\n\t\tvar d = _to_number(digits) || 0;\n\t\tif (v !== false) return parseFloat(v.toFixed(d));\n\t}\n\t\n\t/*rounds a number down to a specified number of digits*/\n\tfunction ROUNDDOWN(num, digits) {\n\t\tvar v = _to_number(num);\n\t\tvar d = _to_number(digits) || 0;\n\t\tif (v !== false) return Math.floor(v * Math.pow(10, d)) / Math.pow(10, d);\n\t}\n\t\n\t/*rounds a number up to a specified number of digits*/\n\tfunction ROUNDUP(num, digits) {\n\t\tvar v = _to_number(num);\n\t\tvar d = _to_number(digits) || 0;\n\t\tif (v !== false) return Math.ceil(v * Math.pow(10, d)) / Math.pow(10, d);\n\t}\n\t\n\t/*Truncates a number to an integer by removing the fractional part of the number.*/\n\tfunction TRUNC(num) {\n\t\tvar v = _to_number(num);\n\t\tif (v !== false) return parseInt(v);\n\t}\n\t\n\t/*Returns number rounded up to the nearest even integer*/\n\tfunction EVEN(num) {\n\t\tvar v = _to_number(num);\n\t\tif (v !== false) {\n\t\t\tvar r = Math.round(v);\n\t\t\treturn r % 2 ? r + 1 : r;\n\t\t}\n\t}\n\t\n\t/*Returns number rounded up to the nearest odd integer*/\n\tfunction ODD(num) {\n\t\tvar v = _to_number(num);\n\t\tif (v !== false) {\n\t\t\tvar r = Math.round(v);\n\t\t\treturn r % 2 ? r : r + 1;\n\t\t}\n\t}\n\n/***/ },\n/* 14 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\texports.__esModule = true;\n\tvar decode = exports.decode = {};\n\tvar encode = exports.encode = {};\n\t\n\tvar alpha = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\n\tfor (var i = 1; i < 1000; i++) {\n\t\tvar prefixIndex = parseInt((i - 1) / alpha.length);\n\t\tvar str = (prefixIndex ? alpha[prefixIndex - 1] : \"\") + alpha[(i - 1) % alpha.length];\n\t\n\t\tdecode[str] = i;\n\t\tencode[i] = str;\n\t}\n\t\n\tencode[0] = encode[1];\n\n/***/ },\n/* 15 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\texports.__esModule = true;\n\texports.init = init;\n\tvar styledata, clipdata;\n\t\n\tfunction init(view, readonly) {\n\t\tvar grid = view.$$(\"cells\");\n\t\n\t\tgrid.attachEvent(\"onKeyPress\", function (code, e) {\n\t\t\tif (code === 67 && e.ctrlKey && grid.getSelectedId()) {\n\t\t\t\tstyledata = _get_sel_style(view, grid);\n\t\t\t\tclipdata = document.getElementsByClassName(\"webix_clipbuffer\")[0].value;\n\t\t\t}\n\t\t});\n\t\n\t\tif (!readonly) grid.attachEvent(\"onPaste\", function (text) {\n\t\t\treturn _clip_to_sel(view, grid, text);\n\t\t});\n\t\n\t\t// undo\n\t\tview.attachEvent(\"onUndo\", function (type, row, column, value, style) {\n\t\t\tif (type == \"paste\") _undoPaste(view, row, column, value, style);\n\t\t});\n\t}\n\t\n\tfunction _clip_to_sel(view, grid, text) {\n\t\tvar data = text === clipdata ? JSON.parse(styledata) : webix.csv.parse(text, grid.config.delimiter);\n\t\tvar leftTop = grid.mapSelection(null);\n\t\tif (!leftTop) return;\n\t\n\t\tvar group = webix.uid();\n\t\tgrid.mapCells(leftTop.row, leftTop.column, data.length, null, function (value, row, col, row_ind, col_ind) {\n\t\t\tif (data[row_ind] && data[row_ind].length > col_ind) {\n\t\t\t\tvar cdata = data[row_ind][col_ind];\n\t\t\t\tvar fromSheet = text === clipdata;\n\t\t\t\tvar oldValue = grid.getItem(row)[col];\n\t\t\t\tvar newValue = fromSheet ? cdata.text : cdata;\n\t\t\t\tvar oldStyle = fromSheet ? view.getStyle(row, col) : null;\n\t\t\t\tvar style = fromSheet ? cdata.style : null;\n\t\n\t\t\t\tif (view.callEvent(\"onBeforePaste\", [row, col, newValue, oldValue, style, oldStyle, group])) {\n\t\t\t\t\tif (text === clipdata) {\n\t\t\t\t\t\tgrid.getItem(row)[col] = newValue;\n\t\t\t\t\t\tview.setStyle(row, col, style);\n\t\t\t\t\t}\n\t\t\t\t\treturn newValue;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn value;\n\t\t});\n\t\tgrid.render();\n\t}\n\t\n\tfunction _get_sel_style(view, grid) {\n\t\tvar data = [];\n\t\tgrid.mapSelection(function (value, row, col, row_ind, col_ind) {\n\t\t\tif (!data[row_ind]) data[row_ind] = [];\n\t\n\t\t\tdata[row_ind].push({ text: value, style: view.getStyle(row, col) });\n\t\t\treturn value;\n\t\t});\n\t\treturn JSON.stringify(data);\n\t}\n\t\n\tfunction _undoPaste(view, row, column, value, style) {\n\t\tvar grid = view.$$(\"cells\");\n\t\tgrid.getItem(row)[column] = value;\n\t\tview.setStyle(row, column, style);\n\t\tgrid.render();\n\t}\n\n/***/ },\n/* 16 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\texports.__esModule = true;\n\texports.init = init;\n\texports.selectRow = selectRow;\n\texports.selectColumn = selectColumn;\n\t\n\tvar _column_names = __webpack_require__(14);\n\t\n\tvar nms = _interopRequireWildcard(_column_names);\n\t\n\tvar _hide = __webpack_require__(17);\n\t\n\tvar hid = _interopRequireWildcard(_hide);\n\t\n\tvar _add = __webpack_require__(19);\n\t\n\tvar add = _interopRequireWildcard(_add);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj[\"default\"] = obj; return newObj; } }\n\t\n\tvar locale = webix.i18n.spreadsheet.menus;\n\t\n\tvar row_data = [{ id: \"add\", group: \"row\", value: locale.add_row }, { id: \"del\", group: \"row\", value: locale.del_row }, { id: \"show\", group: \"row\", value: locale.show_row }, { id: \"hide\", group: \"row\", value: locale.hide_row }];\n\t\n\tvar column_data = [{ id: \"add\", group: \"column\", value: locale.add_column }, { id: \"del\", group: \"column\", value: locale.del_column }, { id: \"show\", group: \"column\", value: locale.show_column }, { id: \"hide\", group: \"column\", value: locale.hide_column }];\n\t\n\tfunction init(view) {\n\t  webix.ui({\n\t    view: \"contextmenu\",\n\t    id: \"rows_context_menu\",\n\t    on: {\n\t      onItemClick: function onItemClick(id, e, node) {\n\t        var _view$$$$getSelectAre = view.$$(\"cells\").getSelectArea();\n\t\n\t        var start = _view$$$$getSelectAre.start;\n\t        var end = _view$$$$getSelectAre.end;\n\t\n\t        if (!start || !end) return;\n\t\n\t        view.callEvent(\"onCommand\", [this.getItem(id), start, end]);\n\t      },\n\t      onBeforeShow: function onBeforeShow(pos, field_id, type) {\n\t        if (field_id === \"rowId\") return false;\n\t        this.clearAll();\n\t\n\t        if (type === 'row') {\n\t          selectRow(field_id, view);\n\t          this.parse(row_data);\n\t        }\n\t        if (type === 'column') {\n\t          selectColumn(field_id, view);\n\t          this.parse(column_data);\n\t        }\n\t      }\n\t    }\n\t  });\n\t\n\t  hid.init(view);\n\t  add.init(view);\n\t}\n\t\n\tfunction selectRow(id, view) {\n\t  var start = { row: id, column: 1 };\n\t  var last = { row: id, column: view.config.columnCount };\n\t  _selectRange(start, last, view);\n\t}\n\t\n\tfunction selectColumn(id, view) {\n\t  var startRow = view.$$(\"cells\").data.order[0];\n\t  var lastRow = view.$$(\"cells\").data.order.length;\n\t\n\t  var start = { row: startRow, column: id };\n\t  var last = { row: lastRow, column: id };\n\t\n\t  _selectRange(start, last, view);\n\t}\n\t\n\tfunction _selectRange(a, b, view) {\n\t  view.$$(\"cells\").addSelectArea(a, b);\n\t}\n\n/***/ },\n/* 17 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(process) {\"use strict\";\n\t\n\texports.__esModule = true;\n\texports.init = init;\n\texports.process = process;\n\tfunction init(view) {\n\t\tview.attachEvent(\"onCommand\", function (action, start, end) {\n\t\t\tif (action.id == \"show\" || action.id == \"hide\") process(action, start, end, view);\n\t\t});\n\t\treset(view);\n\t}\n\t\n\tfunction reset(view) {\n\t\tview._hideColumn = [];\n\t\tview._hideRow = [];\n\t}\n\t\n\tfunction process(action, start, end, view) {\n\t\tif (action.group == \"column\") switch (action.id) {\n\t\t\tcase 'show':\n\t\t\t\tif (!view._hideColumn.length) return;\n\t\t\t\tvar n = end.column;\n\t\t\t\twhile (n >= start.column) {\n\t\t\t\t\tvar id = _handleState(view._hideColumn, n);\n\t\t\t\t\tif (id !== false) {\n\t\t\t\t\t\tvar cell = view.$$(\"cells\").getColumnConfig(id - 1 || \"rowId\").header[0];\n\t\t\t\t\t\tcell.css = cell.css.replace(\"webix_ss_hideColumn\", \"\");\n\t\t\t\t\t\tview.$$(\"cells\").showColumn(id);\n\t\t\t\t\t}\n\t\t\t\t\tn--;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\n\t\t\tcase 'hide':\n\t\t\t\tvar p = end.column;\n\t\t\t\twhile (p >= start.column) {\n\t\t\t\t\tview._hideColumn.push(p);\n\t\t\t\t\tvar cell = view.$$(\"cells\").getColumnConfig(p - 1 || \"rowId\").header[0];\n\t\t\t\t\tcell.css = (cell.css || \"\") + \" webix_ss_hideColumn\";\n\t\t\t\t\tview.$$(\"cells\").hideColumn(p);\n\t\t\t\t\tp--;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t} else if (action.group == \"row\") {\n\t\t\tswitch (action.id) {\n\t\t\t\tcase 'show':\n\t\t\t\t\tif (!view._hideRow.length) return;\n\t\t\t\t\tvar o = end.row;\n\t\t\t\t\twhile (o >= start.row) {\n\t\t\t\t\t\tvar state = _handleState(view._hideRow, o);\n\t\t\t\t\t\tif (state !== false) {\n\t\t\t\t\t\t\tif (state - 1 === 0) {\n\t\t\t\t\t\t\t\tvar cell = view.$$(\"cells\").getColumnConfig(\"rowId\").header[0];\n\t\t\t\t\t\t\t\tcell.css = cell.css.replace(\"webix_ss_hideRow\", \"\");\n\t\t\t\t\t\t\t\tview.$$(\"cells\").refreshColumns();\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tview.$$(\"cells\").removeCellCss(state - 1, \"rowId\", \"webix_ss_hideRow\");\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\to--;\n\t\t\t\t\t}\n\t\t\t\t\tview.$$(\"cells\").filter(function (obj) {\n\t\t\t\t\t\treturn view._hideRow.indexOf(obj.id) === -1;\n\t\t\t\t\t});\n\t\t\t\t\tbreak;\n\t\n\t\t\t\tcase 'hide':\n\t\t\t\t\tfor (var k = end.row; k >= start.row; k--) {\n\t\t\t\t\t\tview._hideRow.push(k);\n\t\t\t\t\t\tif (k - 1 === 0) {\n\t\t\t\t\t\t\tvar cell = view.$$(\"cells\").getColumnConfig(\"rowId\").header[0];\n\t\t\t\t\t\t\tcell.css = (cell.css || \"\") + \" webix_ss_hideRow\";\n\t\t\t\t\t\t\tview.$$(\"cells\").refreshColumns();\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tview.$$(\"cells\").addCellCss(k - 1, \"rowId\", \"webix_ss_hideRow\");\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tview.$$(\"cells\").filter(function (obj) {\n\t\t\t\t\t\treturn view._hideRow.indexOf(obj.id) === -1;\n\t\t\t\t\t});\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\t\n\tfunction _handleState(arr, id) {\n\t\tvar indexNext = arr.indexOf(id + 1); //next column behind current\n\t\tvar indexPrev = arr.indexOf(id - 1); //prev column before current\n\t\n\t\tif (indexNext >= 0) {\n\t\t\treturn arr.splice(indexNext, 1)[0];\n\t\t} else if (indexPrev >= 0) {\n\t\t\treturn arr.splice(indexPrev, 1)[0];\n\t\t}\n\t\treturn false;\n\t}\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(18)))\n\n/***/ },\n/* 18 */\n/***/ function(module, exports) {\n\n\t// shim for using process in browser\n\t\n\tvar process = module.exports = {};\n\tvar queue = [];\n\tvar draining = false;\n\tvar currentQueue;\n\tvar queueIndex = -1;\n\t\n\tfunction cleanUpNextTick() {\n\t    draining = false;\n\t    if (currentQueue.length) {\n\t        queue = currentQueue.concat(queue);\n\t    } else {\n\t        queueIndex = -1;\n\t    }\n\t    if (queue.length) {\n\t        drainQueue();\n\t    }\n\t}\n\t\n\tfunction drainQueue() {\n\t    if (draining) {\n\t        return;\n\t    }\n\t    var timeout = setTimeout(cleanUpNextTick);\n\t    draining = true;\n\t\n\t    var len = queue.length;\n\t    while(len) {\n\t        currentQueue = queue;\n\t        queue = [];\n\t        while (++queueIndex < len) {\n\t            if (currentQueue) {\n\t                currentQueue[queueIndex].run();\n\t            }\n\t        }\n\t        queueIndex = -1;\n\t        len = queue.length;\n\t    }\n\t    currentQueue = null;\n\t    draining = false;\n\t    clearTimeout(timeout);\n\t}\n\t\n\tprocess.nextTick = function (fun) {\n\t    var args = new Array(arguments.length - 1);\n\t    if (arguments.length > 1) {\n\t        for (var i = 1; i < arguments.length; i++) {\n\t            args[i - 1] = arguments[i];\n\t        }\n\t    }\n\t    queue.push(new Item(fun, args));\n\t    if (queue.length === 1 && !draining) {\n\t        setTimeout(drainQueue, 0);\n\t    }\n\t};\n\t\n\t// v8 likes predictible objects\n\tfunction Item(fun, array) {\n\t    this.fun = fun;\n\t    this.array = array;\n\t}\n\tItem.prototype.run = function () {\n\t    this.fun.apply(null, this.array);\n\t};\n\tprocess.title = 'browser';\n\tprocess.browser = true;\n\tprocess.env = {};\n\tprocess.argv = [];\n\tprocess.version = ''; // empty string to avoid regexp issues\n\tprocess.versions = {};\n\t\n\tfunction noop() {}\n\t\n\tprocess.on = noop;\n\tprocess.addListener = noop;\n\tprocess.once = noop;\n\tprocess.off = noop;\n\tprocess.removeListener = noop;\n\tprocess.removeAllListeners = noop;\n\tprocess.emit = noop;\n\t\n\tprocess.binding = function (name) {\n\t    throw new Error('process.binding is not supported');\n\t};\n\t\n\tprocess.cwd = function () { return '/' };\n\tprocess.chdir = function (dir) {\n\t    throw new Error('process.chdir is not supported');\n\t};\n\tprocess.umask = function() { return 0; };\n\n\n/***/ },\n/* 19 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(process) {\"use strict\";\n\t\n\texports.__esModule = true;\n\texports.init = init;\n\texports.process = process;\n\t\n\tvar _updater = __webpack_require__(20);\n\t\n\tvar fpd = _interopRequireWildcard(_updater);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj[\"default\"] = obj; return newObj; } }\n\t\n\tfunction init(view) {\n\t\tview.attachEvent(\"onCommand\", function (action, start, end) {\n\t\t\tif (action.id == \"add\" || action.id == \"del\") process(action, start, end, view);\n\t\t});\n\t}\n\t\n\tfunction process(action, start, end, view) {\n\t\tvar params = view.serialize({\n\t\t\tmath: true\n\t\t});\n\t\tvar data = params.data;\n\t\tvar i = data.length;\n\t\n\t\t//shift data\n\t\tif (action.group == \"column\") switch (action.id) {\n\t\t\tcase 'add':\n\t\t\t\tview.config.columnCount += 1;\n\t\t\t\tview.reset({\n\t\t\t\t\tselect: true\n\t\t\t\t});\n\t\t\t\twhile (i--) {\n\t\t\t\t\tif (data[i][1] >= start.column) data[i][1] += 1;\n\t\t\t\t}break;\n\t\t\tcase 'del':\n\t\t\t\tview.config.columnCount -= end.column - start.column + 1;\n\t\t\t\tview.reset({\n\t\t\t\t\tselect: true\n\t\t\t\t});\n\t\t\t\twhile (i--) {\n\t\t\t\t\tif (data[i][1] >= start.column && data[i][1] <= end.column) data.splice(i, 1);else if (data[i][1] > end.column) data[i][1] -= 1;\n\t\t\t\t}break;\n\t\t} else if (action.group == \"row\") switch (action.id) {\n\t\t\tcase 'add':\n\t\t\t\tview.config.rowCount += 1;\n\t\t\t\tview.reset({\n\t\t\t\t\tselect: true\n\t\t\t\t});\n\t\t\t\twhile (i--) {\n\t\t\t\t\tif (data[i][0] >= start.row) data[i][0] += 1;\n\t\t\t\t}break;\n\t\n\t\t\tcase 'del':\n\t\t\t\tview.config.rowCount -= end.row - start.row + 1;\n\t\t\t\tview.reset({\n\t\t\t\t\tselect: true\n\t\t\t\t});\n\t\t\t\twhile (i--) {\n\t\t\t\t\tif (data[i][0] >= start.row && data[i][0] <= end.row) data.splice(i, 1);else if (data[i][0] > end.row) data[i][0] -= 1;\n\t\t\t\t}break;\n\t\t}\n\t\n\t\t//update formulas\n\t\tvar updater = fpd.get(action.group, action.id);\n\t\ti = params.data.length;\n\t\twhile (i--) {\n\t\t\tif (data[i][2] && typeof data[i][2] === \"string\" && data[i][2].substr(0, 1) == \"=\") data[i][2] = updater(data[i][2], start, end);\n\t\t}\n\t\n\t\tparams.data = data;\n\t\tview.parse(params);\n\t}\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(18)))\n\n/***/ },\n/* 20 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\texports.__esModule = true;\n\texports.updateRanges = updateRanges;\n\texports.update = update;\n\texports.updateMath = updateMath;\n\t\n\tvar _column_names = __webpack_require__(14);\n\t\n\tvar nms = _interopRequireWildcard(_column_names);\n\t\n\tvar _parser = __webpack_require__(21);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj[\"default\"] = obj; return newObj; } }\n\t\n\tfunction updateRanges() {}\n\t\n\tfunction update() {}\n\t\n\tfunction updateMath(formula, action) {\n\t  var stack = (0, _parser.split)(formula);\n\t  var max = stack.length;\n\t  for (var i = 1; i < max; i += 2) {\n\t    var _stack$i = stack[i];\n\t    var row = _stack$i[0];\n\t    var column = _stack$i[1];\n\t\n\t\n\t    if (action.id === \"move\") {\n\t      column += action.column;\n\t      row += action.row;\n\t    } else if (action.id === \"row\" && action.row <= row) {\n\t      row += action.count;\n\t    } else if (action.id === \"column\" && action.column <= column) {\n\t      column += action.count;\n\t    }\n\t\n\t    if (!column || !row) stack[i] = 0;else stack[i] = nms.encode[column] + row;\n\t  }\n\t\n\t  return stack.join(\"\");\n\t}\n\n/***/ },\n/* 21 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\texports.split = split;\n\texports.parse = parse;\n\tfunction isChar(char) {\n\t\tvar code = char.charCodeAt(0);\n\t\treturn code >= 65 && code <= 122;\n\t}\n\tfunction isNumber(char) {\n\t\tvar code = char.charCodeAt(0);\n\t\treturn code >= 48 && code <= 57;\n\t}\n\t\n\tfunction getWord(formula, i) {\n\t\tvar max = formula.length;\n\t\tvar hasNumber = false;\n\t\tvar isField = true;\n\t\n\t\tfor (var j = i + 1; j < max; j++) {\n\t\t\tvar key = formula[j];\n\t\n\t\t\tif (!isChar(key) && !isNumber(key)) return formula.substr(i, j - i);\n\t\t}\n\t\n\t\treturn formula.substr(i);\n\t}\n\t\n\tvar operand = /[A-Z]{1,2}[0-9]+/;\n\tfunction isPosition(text) {\n\t\treturn operand.test(text);\n\t}\n\t\n\tfunction position(word) {\n\t\tvar size = isNumber(word[1]) ? 1 : 2;\n\t\tvar column = word.substr(0, size);\n\t\tvar row = word.substr(size);\n\t\n\t\tvar colid;\n\t\tif (column.length == 2) colid = (column.charCodeAt(0) - 64) * 28 + column.charCodeAt(1) - 64;else colid = column.charCodeAt(0) - 64;\n\t\n\t\treturn [row * 1, colid];\n\t}\n\tfunction operandCode(deps, word) {\n\t\tvar _position = position(word);\n\t\n\t\tvar r = _position[0];\n\t\tvar c = _position[1];\n\t\n\t\tdeps.push([r, c, r, c]);\n\t\n\t\treturn 'this.v(' + r + ',' + c + ')';\n\t}\n\t\n\tfunction methodCode(word) {\n\t\treturn 'this.m.' + word;\n\t}\n\t\n\tfunction namedRangeCode(word) {\n\t\treturn 'this.g.' + word + '()';\n\t}\n\tfunction templateCode(word) {\n\t\treturn 'this.p.' + word;\n\t}\n\t\n\tfunction rangeCode(deps, a, b) {\n\t\tvar _position2 = position(a);\n\t\n\t\tvar r1 = _position2[0];\n\t\tvar c1 = _position2[1];\n\t\n\t\tvar _position3 = position(b);\n\t\n\t\tvar r2 = _position3[0];\n\t\tvar c2 = _position3[1];\n\t\n\t\n\t\tif (r1 > r2) {\n\t\t\tvar t = r1;r1 = r2;r2 = t;\n\t\t}\n\t\tif (c1 > c2) {\n\t\t\tvar t = c1;c1 = c2;c2 = t;\n\t\t}\n\t\n\t\tdeps.push([r1, c1, r2, c2]);\n\t\n\t\treturn 'this.r(' + r1 + ',' + c1 + ',' + r2 + ',' + c2 + ')';\n\t}\n\t\n\tfunction split(formula) {\n\t\tvar lines = [];\n\t\tvar index = 0;\n\t\tvar quotes = false,\n\t\t    ph = false;\n\t\n\t\tfor (var i = 1; i < formula.length; i++) {\n\t\t\tvar key = formula[i];\n\t\t\tif (key == '\"') {\n\t\t\t\tquotes = !quotes;\n\t\t\t} else if (!quotes) {\n\t\t\t\tif (key == '{' && formula[i + 1] == \"{\") {\n\t\t\t\t\tph = true;\n\t\t\t\t} else if (key == '}' && formula[i + 1] == \"}\") {\n\t\t\t\t\tph = false;\n\t\t\t\t} else if (!ph) {\n\t\t\t\t\tif (isChar(key)) {\n\t\t\t\t\t\tvar word = getWord(formula, i).toUpperCase();\n\t\t\t\t\t\tvar next = i + word.length - 1;\n\t\t\t\t\t\tif (formula[next + 1] !== \"(\" && isPosition(word)) {\n\t\t\t\t\t\t\tif (i !== 0) lines.push(formula.substr(index, i - index));\n\t\t\t\t\t\t\tlines.push(position(word));\n\t\t\t\t\t\t\tindex = next + 1;\n\t\t\t\t\t\t}\n\t\t\t\t\t\ti = next;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\n\t\tif (index != formula.length) lines.push(formula.substr(index));\n\t\treturn lines;\n\t}\n\t\n\tfunction parse(formula) {\n\t\tvar code = \"return \";\n\t\tvar deps = [];\n\t\n\t\tvar quotes = false;\n\t\tvar pair = \"\";\n\t\n\t\tif (formula[0] !== \"=\") return false;\n\t\n\t\tfor (var i = 1; i < formula.length; i++) {\n\t\t\tvar key = formula[i];\n\t\n\t\t\tif (key == '\"') quotes = !quotes;else if (key == '{' && formula[i + 1] == \"{\") {\n\t\t\t\tvar word = getWord(formula, i + 2);\n\t\t\t\ti += word.length + 3;\n\t\t\t\tcode += templateCode(word);\n\t\t\t\tcontinue;\n\t\t\t} else if (!quotes && isChar(key)) {\n\t\t\t\tvar word = getWord(formula, i).toUpperCase();\n\t\t\t\ti += word.length - 1;\n\t\n\t\t\t\tif (formula[i + 1] === \"(\") {\n\t\t\t\t\tcode += methodCode(word);\n\t\t\t\t} else if (isPosition(word)) {\n\t\t\t\t\tif (formula[i + 1] === \":\") {\n\t\t\t\t\t\tpair = word;\n\t\t\t\t\t\ti++;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (pair !== \"\") {\n\t\t\t\t\t\t\tcode += rangeCode(deps, pair, word);\n\t\t\t\t\t\t\tpair = \"\";\n\t\t\t\t\t\t} else code += operandCode(deps, word);\n\t\t\t\t\t}\n\t\t\t\t} else code += namedRangeCode(word);\n\t\n\t\t\t\tcontinue;\n\t\t\t}\n\t\n\t\t\tcode += formula[i];\n\t\t}\n\t\n\t\treturn { code: code + \";\", triggers: deps };\n\t}\n\n/***/ },\n/* 22 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\texports.__esModule = true;\n\texports.init = init;\n\tfunction init(view) {\n\t\tvar grid = view.$$(\"cells\");\n\t\n\t\twebix.UIManager.addHotKey(\"delete\", function () {\n\t\t\tview.eachSelectedCell(function (cell) {\n\t\t\t\treturn view.setCellValue(cell.row, cell.column, \"\");\n\t\t\t});\n\t\t\tview.refresh();\n\t\t}, grid);\n\t\n\t\twebix.UIManager.addHotKey(\"any\", function (view, ev) {\n\t\t\t//ignore shift key\n\t\t\tif ((ev.which || ev.keyCode) == 16) return;\n\t\n\t\t\tvar sel = view.getSelectedId(true);\n\t\t\tif (sel.length && grid.config.editable) grid.edit(sel[0]);\n\t\t}, grid);\n\t\n\t\twebix.UIManager.addHotKey(\"ctrl-z\", function () {\n\t\t\treturn view.undo();\n\t\t}, grid);\n\t\twebix.UIManager.addHotKey(\"ctrl-y\", function () {\n\t\t\treturn view.redo();\n\t\t}, grid);\n\t}\n\n/***/ },\n/* 23 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\texports.__esModule = true;\n\texports.init = init;\n\tfunction init(view) {\n\t\tif (view.config.resizeCell) {\n\t\t\tvar grid = view.$$(\"cells\");\n\t\t\tgrid.define(\"resizeRow\", true);\n\t\t\tgrid.define(\"resizeColumn\", true);\n\t\t\tgrid.define(\"fixedRowHeight\", false);\n\t\n\t\t\tgrid.attachEvent(\"onRowResize\", function (id) {\n\t\t\t\tview.$$(\"cells\").removeSelectArea();\n\t\t\t\tview._save(\"sizes\", { row: id, column: 0, size: view.getRow(id).$height });\n\t\t\t});\n\t\t\tgrid.attachEvent(\"onColumnResize\", function (id) {\n\t\t\t\tview.$$(\"cells\").removeSelectArea();\n\t\t\t\tview._save(\"sizes\", { row: 0, column: id, size: view.getColumn(id).width });\n\t\t\t});\n\t\n\t\t\t// undo\n\t\t\tview.attachEvent(\"onUndo\", function (type, row, column, value) {\n\t\t\t\tif (type == \"c-resize\" || type == \"r-resize\") _undoResize(view, row, column, value);\n\t\t\t});\n\t\t}\n\t\n\t\tview.attachEvent(\"onDataParse\", function (data) {\n\t\t\tif (data.sizes) {\n\t\t\t\tfor (var i = 0; i < data.sizes.length; i++) {\n\t\t\t\t\tvar size = data.sizes[i];\n\t\t\t\t\tif (size[0] * 1 !== 0) {\n\t\t\t\t\t\tview.getRow(size[0]).$height = size[2] * 1;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tview.getColumn(size[1]).width = size[2] * 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t\tif (data.sizes.length) view.refresh(true);\n\t\t\t}\n\t\t});\n\t\n\t\tview.attachEvent(\"onDataSerialize\", function (data) {\n\t\t\tvar sizes = [];\n\t\t\tvar grid = view.$$(\"cells\");\n\t\t\tvar columns = grid.config.columns;\n\t\t\tvar order = grid.data.order;\n\t\n\t\t\tvar defWidth = grid.config.columnWidth;\n\t\t\tvar defHeight = grid.config.rowHeight;\n\t\n\t\t\tfor (var i = 1; i < columns.length; i++) {\n\t\t\t\tvar width = columns[i].width;\n\t\t\t\tif (width && width != defWidth) sizes.push([0, i, width]);\n\t\t\t}\n\t\n\t\t\tfor (var i = 0; i < order.length; i++) {\n\t\t\t\tvar height = grid.getItem(order[i]).$height;\n\t\t\t\tif (height && height != defHeight) sizes.push([order[i] * 1, 0, height]);\n\t\t\t}\n\t\n\t\t\tdata.sizes = sizes;\n\t\t});\n\t}\n\t\n\tfunction _undoResize(view, row, column, value) {\n\t\tif (row) {\n\t\t\tview.$$(\"cells\").getItem(row).$height = value;\n\t\t\tview.refresh();\n\t\t\tview._save(\"sizes\", { row: row, column: 0, size: value });\n\t\t} else {\n\t\t\tview._table.setColumnWidth(column, value);\n\t\t}\n\t\t// update area selection\n\t\tview.$$(\"cells\")._renderSelectAreas();\n\t}\n\n/***/ },\n/* 24 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\texports.__esModule = true;\n\texports.init = init;\n\texports.addSpan = addSpan;\n\texports.removeSpan = removeSpan;\n\texports.getRange = getRange;\n\tfunction init(view) {\n\t\tview.attachEvent(\"onStyleChange\", function (row, column, style) {\n\t\t\tvar span = getSpan(view, row, column);\n\t\t\tif (span) span[3] = style.id;\n\t\t});\n\t\n\t\tview.attachEvent(\"onCellChange\", function (row, column, value) {\n\t\t\tvar span = getSpan(view, row, column);\n\t\t\tif (span) span[2] = value;\n\t\t});\n\t\n\t\tview.attachEvent(\"onDataParse\", function (data) {\n\t\t\tif (data.spans) for (var i = 0; i < data.spans.length; i++) {\n\t\t\t\tvar span = data.spans[i];\n\t\t\t\taddSpan(view, { row: span[0], column: span[1] }, span[2] * 1, span[3] * 1);\n\t\t\t}\n\t\t});\n\t\n\t\tview.attachEvent(\"onDataSerialize\", function (data) {\n\t\t\tvar spans = [];\n\t\t\tvar pull = view.$$(\"cells\").getSpan();\n\t\t\tif (pull) {\n\t\t\t\tfor (var rid in pull) {\n\t\t\t\t\tvar row = pull[rid];\n\t\t\t\t\tfor (var cid in row) {\n\t\t\t\t\t\tvar span = row[cid];\n\t\t\t\t\t\tspans.push([rid * 1, cid * 1, span[0], span[1]]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t\tdata.spans = spans;\n\t\t\t}\n\t\t});\n\t\n\t\tview.attachEvent(\"onUndo\", function (type, row, column, value, isUndo) {\n\t\t\tif (type == \"span\" || type == \"split\") {\n\t\t\t\tif (type == \"span\") isUndo = !isUndo;\n\t\t\t\tundoSpan(view, row, column, value, isUndo);\n\t\t\t}\n\t\t});\n\t}\n\t\n\tfunction getSpan(view, row, column) {\n\t\tvar item = view.$$(\"cells\").getSpan()[row];\n\t\tif (item) return item[column];\n\t}\n\t\n\tfunction addSpan(view, cell, x, y) {\n\t\tif (x < 2 && y < 2) return;\n\t\n\t\tvar row = view.getRow(cell.row);\n\t\tvar value = row[cell.column];\n\t\tvar css = row.$cellCss ? row.$cellCss[cell.column] || \"\" : \"\";\n\t\n\t\tview.$$(\"cells\").addSpan(cell.row, cell.column, x, y, value, css);\n\t\tview._save(\"spans\", {\n\t\t\trow: cell.row, column: cell.column,\n\t\t\tx: x, y: y\n\t\t});\n\t}\n\t\n\tfunction removeSpan(view, cell) {\n\t\tview.$$(\"cells\").removeSpan(cell.row, cell.column);\n\t\tview._save(\"spans\", {\n\t\t\trow: cell.row, column: cell.column,\n\t\t\tx: 0, y: 0\n\t\t});\n\t}\n\t\n\tfunction getRange(sel) {\n\t\tvar lx, ly, rx, ry;\n\t\trx = ry = 0;\n\t\tlx = ly = Infinity;\n\t\n\t\tfor (var i = 0; i < sel.length; i++) {\n\t\t\tvar cx = sel[i].column * 1;\n\t\t\tvar cy = sel[i].row * 1;\n\t\n\t\t\tlx = Math.min(cx, lx);\n\t\t\trx = Math.max(cx, rx);\n\t\t\tly = Math.min(cy, ly);\n\t\t\try = Math.max(cy, ry);\n\t\t}\n\t\n\t\treturn {\n\t\t\tcell: { row: ly, column: lx },\n\t\t\tx: rx - lx + 1,\n\t\t\ty: ry - ly + 1\n\t\t};\n\t}\n\t\n\tfunction undoSpan(view, row, column, value, isUndo) {\n\t\tif (isUndo) {\n\t\t\tremoveSpan(view, { row: row, column: column });\n\t\t} else {\n\t\t\taddSpan(view, { row: row, column: column }, value[0], value[1]);\n\t\t}\n\t\tview.refresh();\n\t}\n\n/***/ },\n/* 25 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\texports.__esModule = true;\n\texports.init = init;\n\texports.undo = undo;\n\texports.redo = redo;\n\tfunction init(view) {\n\t    reset(view);\n\t    view.attachEvent(\"onReset\", function () {\n\t        return reset(view);\n\t    });\n\t    // styles\n\t    view.attachEvent(\"onBeforeStyleChange\", function (row, column, nstyle, ostyle, group) {\n\t        return addToHistory(view, { action: \"style\", row: row, column: column, value: ostyle, newValue: nstyle, group: group });\n\t    });\n\t    // editing\n\t    view.attachEvent(\"onBeforeValueChange\", function (row, column, nvalue, ovalue) {\n\t        return addToHistory(view, { action: \"value\", row: row, column: column, value: ovalue, newValue: nvalue });\n\t    });\n\t    // merge cells\n\t    view.attachEvent(\"onBeforeSpan\", function (row, column, value) {\n\t        return addToHistory(view, { action: \"span\", row: row, column: column, value: value, newValue: value });\n\t    });\n\t    // split cells\n\t    view.attachEvent(\"onBeforeSplit\", function (row, column, value, group) {\n\t        return addToHistory(view, { action: \"split\", row: row, column: column, value: value, newValue: value, group: group });\n\t    });\n\t    // column resize\n\t    view.$$(\"cells\").attachEvent(\"onColumnResize\", function (column, nvalue, ovalue) {\n\t        return addToHistory(view, { action: \"c-resize\", row: 0, column: column, value: ovalue, newValue: nvalue });\n\t    });\n\t    // row resize\n\t    view.$$(\"cells\").attachEvent(\"onRowResize\", function (row, nvalue, ovalue) {\n\t        return addToHistory(view, { action: \"r-resize\", row: row, column: 0, value: ovalue, newValue: nvalue });\n\t    });\n\t\n\t    // clipboard\n\t    view.attachEvent(\"onBeforePaste\", function (row, column, nvalue, ovalue, nstyle, ostyle, group) {\n\t        return addToHistory(view, { action: \"paste\", row: row, column: column, value: ovalue, newValue: nvalue,\n\t            style: ostyle, newStyle: nstyle, group: group });\n\t    });\n\t}\n\t\n\tfunction undo(view) {\n\t    restoreHistory(view, -1);\n\t}\n\t\n\tfunction redo(view) {\n\t    restoreHistory(view, 1);\n\t}\n\t\n\tfunction reset(view) {\n\t    view._ssUndoHistory = [];\n\t    view._ssUndoCursor = -1;\n\t}\n\t\n\tfunction addToHistory(view, data) {\n\t    if (!view.$skipHistory) {\n\t        // remove futher history\n\t        view._ssUndoHistory.splice(view._ssUndoCursor + 1);\n\t        // add to an array and increase cursor\n\t        view._ssUndoHistory.push(data);\n\t        view._ssUndoCursor++;\n\t    }\n\t}\n\tfunction ignoreUndo(func, view) {\n\t    view.$skipHistory = true;\n\t    func();\n\t    view.$skipHistory = false;\n\t}\n\t\n\tfunction restoreHistory(view, step) {\n\t    var data = view._ssUndoHistory[step > 0 ? view._ssUndoCursor + step : view._ssUndoCursor];\n\t\n\t    if (data) {\n\t        var value = step > 0 ? data.newValue : data.value;\n\t        var direction = step > 0;\n\t\n\t        var params = [data.action, data.row, data.column, value, direction];\n\t        if (data.action == \"paste\") params.push(direction ? data.newStyle : data.style);\n\t\n\t        ignoreUndo(function () {\n\t            view.callEvent(\"onUndo\", params);\n\t        }, view);\n\t\n\t        view._ssUndoCursor += step;\n\t\n\t        // group support\n\t        var group = data.group;\n\t        var prevData = view._ssUndoHistory[step > 0 ? view._ssUndoCursor + step : view._ssUndoCursor];\n\t        if (prevData && group && group == prevData.group) {\n\t            restoreHistory(view, step);\n\t        }\n\t    }\n\t}\n\n/***/ },\n/* 26 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\texports.__esModule = true;\n\texports.init = init;\n\t\n\t__webpack_require__(27);\n\t\n\tvar _math_methods = __webpack_require__(13);\n\t\n\tvar methods = _interopRequireWildcard(_math_methods);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj[\"default\"] = obj; return newObj; } }\n\t\n\tvar methodsName = Object.keys(methods);\n\tmethodsName.splice(methodsName.indexOf('__esModule'), 1);\n\t\n\tfunction init(view) {\n\t  view.attachEvent(\"onComponentInit\", function () {\n\t    return ready(view);\n\t  });\n\t\n\t  return {\n\t    view: \"toolbar\",\n\t    css: \"webix_ssheet_toolbar\",\n\t    elements: [{ view: 'label', template: \"Edit: \", width: 60 }, {\n\t      view: 'live-editor',\n\t      disabled: true,\n\t      id: 'liveEditor',\n\t      suggestData: methodsName,\n\t      linkToView: view.config.id\n\t    }]\n\t  };\n\t}\n\t\n\tfunction ready(view) {\n\t  var isBlockSelect = false;\n\t  var areaObj = null;\n\t\n\t  //block native editor, and move focus to the custom input\n\t  view.$$(\"cells\").attachEvent(\"onBeforeEditStart\", function () {\n\t    view.$$(\"liveEditor\").focus();\n\t    return false;\n\t  });\n\t\n\t  view.$$(\"cells\").attachEvent('onBeforeBlockSelect', function (data) {\n\t    if (view.$$('liveEditor') !== webix.UIManager.getFocus()) return true;\n\t    isBlockSelect = true;\n\t  });\n\t\n\t  view.attachEvent('onAfterSelect', function (data) {\n\t    if (!isBlockSelect) {\n\t      var editor = view.$$('liveEditor');\n\t      areaObj = view.$$(\"cells\").getSelectArea();\n\t      editor.config.selectCell = areaObj;\n\t\n\t      var value = view.getCellValue(data[0].row, data[0].column);\n\t      editor.setValue(value || '');\n\t      editor.enable();\n\t    }\n\t  });\n\t\n\t  //a moment before cell selection\n\t  webix.event(view.$$(\"cells\").$view, \"click\", function (ev) {\n\t    if (view.$$('liveEditor') !== webix.UIManager.getFocus()) return true;\n\t\n\t    var text = view.$$('liveEditor').getValue().trim();\n\t    var first = text.substr(0, 1);\n\t    var last = text.substr(text.length - 1, 1);\n\t    var grid = view.$$(\"cells\");\n\t\n\t    //if we have a math formula in the editor\n\t    if (last.match(/[\\+\\-\\/\\*\\%\\=\\(:]/)) {\n\t      //paste cell position\n\t      var id = grid.locate(ev);\n\t      if (id && !id.header && id.column !== \"rowId\") {\n\t        var block = view.getColumn(id.column).header[0].text + id.row;\n\t        view.$$('liveEditor').setRange(block);\n\t        return webix.html.preventEvent(ev);\n\t      }\n\t    } else {\n\t      //else, apply formula and set new cell value\n\t      var cell = grid.getSelectArea();\n\t      view.setCellValue(cell.start.row, cell.start.column, text);\n\t      grid.refresh(cell.start.row);\n\t    }\n\t  }, this, true);\n\t\n\t  view.$$(\"cells\").attachEvent(\"onBeforeAreaRemove\", function (name) {\n\t    if (view.$$('liveEditor') !== webix.UIManager.getFocus()) return true;\n\t    if (name === areaObj.name.toString()) return false;\n\t  });\n\t\n\t  view.$$(\"cells\").attachEvent(\"onAfterAreaAdd\", function (start, end) {\n\t    if (view.$$('liveEditor') !== webix.UIManager.getFocus()) return true;\n\t\n\t    var areas = view.$$(\"cells\").getAllSelectAreas();\n\t    for (var name in areas) {\n\t      if (!areaObj || name !== areaObj.name.toString()) {\n\t        view.$$(\"cells\").removeSelectArea(name);\n\t      }\n\t    }\n\t    return false;\n\t  });\n\t\n\t  view.$$(\"cells\").attachEvent(\"onAfterBlockSelect\", function (start, end) {\n\t    if (!isBlockSelect) return true;\n\t    isBlockSelect = false;\n\t    var blockStart = view.getColumn(start.column).header[0].text + start.row;\n\t    var blockEnd = view.getColumn(end.column).header[0].text + end.row;\n\t    if (blockStart == blockEnd) view.$$('liveEditor').setRange(blockStart);else view.$$('liveEditor').setRange(blockStart + \":\" + blockEnd);\n\t  });\n\t}\n\n/***/ },\n/* 27 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\t__webpack_require__(28);\n\t\n\twebix.protoUI({\n\t  name: \"live-editor\",\n\t  $cssName: \"text webix_ssheet_formula\",\n\t  defaults: {\n\t    keyPressTimeout: 25,\n\t    selectCell: null\n\t  },\n\t  $init: function $init(config) {\n\t    var _this = this;\n\t\n\t    config.suggest = {\n\t      view: \"suggest-formula\",\n\t      data: config.suggestData\n\t    };\n\t    this.attachEvent(\"onKeyPress\", function (code, e) {\n\t      if (code === 13) {\n\t        //ignore Enter key if it was pressed to select some value from suggest\n\t        if (new Date() - (_this._last_value_set || 0) > 300) {\n\t          _this.updateCellValue();\n\t          webix.UIManager.setFocus(_this.getTopParentView().$$(\"cells\"));\n\t        }\n\t      }\n\t    });\n\t  },\n\t  updateCellValue: function updateCellValue() {\n\t    var newv = this.getValue();\n\t    if (!this.config.selectCell) this.setValue(\"\");else {\n\t      var master = webix.$$(this.config.linkToView);\n\t      master.setCellValue(this.config.selectCell.start.row, this.config.selectCell.start.column, newv);\n\t      master.refresh();\n\t    }\n\t  },\n\t  setValueHere: function setValueHere(value) {\n\t    this._last_value_set = new Date();\n\t\n\t    var node = this.getInputNode();\n\t    var formula = node.value;\n\t    var cursor = node.selectionStart;\n\t\n\t    var str1 = formula.substring(0, cursor);\n\t    var str2 = formula.substring(cursor);\n\t\n\t    str1 = str1.replace(/([a-zA-Z]+)$/, value);\n\t\n\t    node.value = str1 + \"(\" + str2;\n\t    node.setSelectionRange(str1.length + 1, str1.length + 1);\n\t  },\n\t  setRange: function setRange(range) {\n\t    var node = this.getInputNode();\n\t    var cursor = node.selectionStart;\n\t    var formula = this.getValue();\n\t\n\t    var str1 = formula.substring(0, cursor) + range;\n\t    var str2 = formula.substring(cursor);\n\t\n\t    node.value = str1 + str2;\n\t    node.setSelectionRange(str1.length + 1, str1.length + 1);\n\t    this.focus();\n\t  }\n\t}, webix.ui.text);\n\n/***/ },\n/* 28 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\twebix.protoUI({\n\t  name: \"suggest-formula\",\n\t  defaults: {\n\t    fitMaster: false,\n\t    width: 200,\n\t    filter: function filter(item, value) {\n\t      var trg = webix.$$(this.config.master).getInputNode();\n\t      var cursor = trg.selectionStart;\n\t      var val = trg.value;\n\t\n\t      if (val.charAt(0) !== '=') return;\n\t\n\t      var str1 = val.substring(0, cursor).match(/([a-zA-Z]+)$/);\n\t      var str2 = val.charAt(cursor).search(/[^A-Za-z0-9]/);\n\t\n\t      if (str1 && (cursor === val.length || str2 === 0)) {\n\t        value = str1[0];\n\t      }\n\t      return item.value.toString().toLowerCase().indexOf(value.toLowerCase()) === 0;\n\t    }\n\t  },\n\t  $init: function $init() {\n\t    var _this = this;\n\t\n\t    this.attachEvent(\"onBeforeShow\", function (node, mode, point) {\n\t      if (node.tagName) {\n\t        var sizes = webix.html.offset(node);\n\t        var symbolLenght = 9;\n\t\n\t        var y = sizes.y + sizes.height;\n\t        var x = sizes.x + node.selectionStart * symbolLenght;\n\t\n\t        webix.ui.popup.prototype.show.apply(_this, [{ x: x, y: y }]);\n\t        return false;\n\t      }\n\t    });\n\t  },\n\t  setMasterValue: function setMasterValue(data, refresh) {\n\t    var text = data.id ? this.getItemText(data.id) : data.text || data.value;\n\t    var master = webix.$$(this.config.master);\n\t    master.setValueHere(text);\n\t\n\t    if (!refresh) this.hide(true);\n\t\n\t    this.callEvent(\"onValueSuggest\", [data, text]);\n\t  }\n\t}, webix.ui.suggest);\n\n/***/ },\n/* 29 */\n/***/ function(module, exports) {\n\n\t// removed by extract-text-webpack-plugin\n\t\"use strict\";\n\n/***/ }\n/******/ ]);\n//# sourceMappingURL=data:application/json;base64,"],"sourceRoot":"/source/"}