{"version":3,"sources":["pivot.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","webix","i18n","pivot","extend","apply","bar","cancel","chartType","columns","count","date","fields","filters","groupBy","line","logScale","max","min","multiselect","operationNotDefined","layoutIncorrect","pivotMessage","popupHeader","radar","radarArea","rows","select","settings","stackedBar","sum","text","total","values","valuesNotDefined","windowTitle","windowMessage","protoUI","name","_selected","$init","config","this","_get_ui","$ready","push","_after_init","body","view","borderless","autoheight","template","data","attachEvent","$eventSource","getItem","hide","getSelected","ui","popup","IdSpace","_interopRequireWildcard","obj","__esModule","newObj","key","Object","prototype","hasOwnProperty","_typeof","Symbol","iterator","constructor","_filters","flt","version","defaults","fieldMap","yScaleWidth","columnWidth","filterLabelAlign","filterWidth","filterMinWidth","filterLabelWidth","$divider","structure","$view","className","render","bind","$$","hidden","cols","table","navigation","leftSplit","resizeColumn","on","onHeaderClick","getTopParentView","getColumnIndex","column","readonly","configure","datatable","_config_popup","operations","callEvent","define","functions","i","title","_apply_locale","pos","html","offset","getNode","setPosition","x","y","getFields","show","without_filters","_process_data","pull","order","footer","_add_footer","header","_process_filters","length","_filter_events","totalColumn","refreshColumns","clearAll","parse","grid","names","split","content","value","format","parseFloat","toFixed","$exportView","options","filterHTML","_apply_map","items","f","item","label","field","type","labelAlign","labelWidth","minWidth","maxWidth","_distinct_values","empty","hash","isUndefined","isNumeric","n","isNaN","sort","a","b","val1","val2","toString","toLowerCase","reconstruct","children","getChildViews","el","newvalue","_set_filter_value","getValue","_init_filters","_header","_header_hash","operation","isArray","_i","concat","_group","_process_rows","_process_columns","_process_header","_groupItem","slice","_filter_item","_i2","j","k","_calculate_item","_minmax_in_row","open","_i3","_item","vname","_i4","_sort_header","sorted","isSorting","res","_i5","sortFunction","DataStore","sorting","as","sortDir","index","_i6","colspan","_render_header","vConfig","valuesConfig","parts","tmp","_j","join","width","_add_total_columns","text0","readonlyTitle","splice","exportAsTree","arr","h","found","totalCols","copy","math","replace","_correct_colspan","first","_get_key_leaves","result","leaves","op","_operationOptions","leavesOnly","Math","round","$cellCss","max_value","min_value","window","indexOf","_j2","_j3","args","addOperation","method","fields_hash","getIdByIndex","uid","str","_i7","_field","_i8","_field2","_i9","_field3","_i10","_field4","_text","_i11","_field5","init","filterItem","setStructure","getStructure","getConfigWindow","profile_setter","console","time","timeEnd","delay","layout","DataLoader","EventSystem","Settings","numHelper","fvalue","func","isDate","parseFormatStr","trim","substr","rules","equal","not_equal","more_equal","more","less_equal","less","range","range_inc","multi","contains","fvalues","datafilter","pivotSumColumn","refresh","master","node","mapCells","columnId","$level","firstChild","innerHTML","summColumn","padding","height","cancelButtonWidth","applyButtonWidth","fieldsColumnWidth","head","modal","move","css","_popup_templates","popupHeaders","scroll","drag","onBeforeDropOut","_check_values_drag","icon","popupIconHeaders","onClick","webix_pivot_link","_filter_selector","onBeforeDrop","_copy_filter_field","_check_filter_drag","iconContent","_function_template","_function_selector","webix_pivot_plus","_function_add","webix_pivot_minus","_function_remove","_copy_values_field","ctx","from","to","source","remove","each","add","start","lists","sameItem","innerId","ops","locale","e","func_selector","autofit","locate","sel","updateItem","close","els","getItemNode","childNodes","getAttribute","selector","data_setter","filter","editButtonWidth","color","chart","singleLegendItem","palette","templates","groupNameToStr","groupNameToObject","seriesTitle","_capitalize","templates_setter","chartMap","border","alpha","radius","borderColor","fill","disableItems","chartMap_setter","getUI","arguments","align","inputWidth","tooltip","_applyLocale","click","paddingY","paddingX","margin","maxHeight","pivotPopup","scale","_valueLength","_valueFields","mode","_processFilters","_setFilterEvents","_initFilters","_setChartConfig","_loadFilteredData","mapConfig","xAxis","yAxis","top","_getSeries","series","legend","scheme","$group","_pivot_group","$sort","by","removeAllSeries","charAt","toUpperCase","_applyMap","capitalize","stringResult","_distinctValues","shift","silent","_filterItem","getRange","_setFilterValue","legendTitle","map","valign","marker","series_names","_getColor","sConfig","rowIndex","parseInt","columnIndex","_processLegend","addGroupMethod","GroupMethods","removeGroupMethod","groupMethods_setter","valueNameHash","_getUI","_afterInit","chartTypeLabelWidth","chartTypeWidth","logScaleLabelWidth","chartTypes","types","_skipValueDrag","_checkValueDrag","onBeforeDrag","_hidePopups","gravity","webix_link_selection","_filterSelector","webix_link_title","webix_color_selection","_function_color","_copyValueField","yCount","_changeGroupby","_increaseColorIndex","getFirstId","alert","colorboard","getBody","temp"],"mappings":"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","file":"pivot.js","sourcesContent":["/*\r\n@license\r\nWebix Pivot v.3.4.0\r\nThis software is covered by Webix Commercial License.\r\nUsage without proper license is prohibited.\r\n(c) XB Software Ltd.\r\n*/\r\n/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"/codebase/\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\t__webpack_require__(3);\n\t\n\t__webpack_require__(5);\n\t\n\t__webpack_require__(6);\n\t\n\t__webpack_require__(7);\n\t\n\t__webpack_require__(11);\n\n/***/ },\n/* 1 */,\n/* 2 */,\n/* 3 */\n/***/ function(module, exports) {\n\n\t// removed by extract-text-webpack-plugin\n\t\"use strict\";\n\n/***/ },\n/* 4 */,\n/* 5 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\twebix.i18n.pivot = webix.extend(webix.i18n.pivot || {}, {\n\t    apply: \"Apply\",\n\t    bar: \"Bar\",\n\t    cancel: \"Cancel\",\n\t    chartType: \"Chart type\",\n\t    columns: \"Columns\",\n\t    count: \"count\",\n\t    date: \"date\",\n\t    fields: \"Fields\",\n\t    filters: \"Filters\",\n\t    groupBy: \"Group By\",\n\t    line: \"Line\",\n\t    logScale: \"Logarithmic scale\",\n\t    max: \"max\",\n\t    min: \"min\",\n\t    multiselect: \"multi-select\",\n\t    operationNotDefined: \"Operation is not defined\",\n\t    layoutIncorrect: \"pivotLayout should be an Array instance\",\n\t    pivotMessage: \"[Click to configure]\",\n\t    popupHeader: \"Pivot Settings\",\n\t    radar: \"Radar\",\n\t    radarArea: \"Area Radar\",\n\t    rows: \"Rows\",\n\t    select: \"select\",\n\t    settings: \"Settings\",\n\t    stackedBar: \"Stacked Bar\",\n\t    sum: \"sum\",\n\t    text: \"text\",\n\t    total: \"Total\",\n\t    values: \"Values\",\n\t    valuesNotDefined: \"Values or Group field are not defined\",\n\t    windowTitle: \"Pivot Configuration\",\n\t    windowMessage: \"move fields into a required sector\"\n\t});\n\n/***/ },\n/* 6 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\twebix.protoUI({\n\t    name: \"webix_pivot_popup\",\n\t    _selected: null,\n\t    $init: function $init(config) {\n\t        webix.extend(config, this._get_ui(config));\n\t        this.$ready.push(this._after_init);\n\t    },\n\t    _get_ui: function _get_ui(config) {\n\t        return {\n\t            body: {\n\t                id: \"list\", view: \"list\", borderless: true, autoheight: true, template: \"#title#\", data: config.data\n\t            }\n\t        };\n\t    },\n\t    _after_init: function _after_init() {\n\t        this.attachEvent(\"onItemClick\", function (id) {\n\t            this._selected = this.$eventSource.getItem(id);\n\t            this.hide();\n\t        });\n\t    },\n\t    getSelected: function getSelected() {\n\t        return this._selected;\n\t    }\n\t}, webix.ui.popup, webix.IdSpace);\n\n/***/ },\n/* 7 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj; };\n\t\n\tvar _filters = __webpack_require__(8);\n\t\n\tvar flt = _interopRequireWildcard(_filters);\n\t\n\t__webpack_require__(9);\n\t\n\t__webpack_require__(10);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj[\"default\"] = obj; return newObj; } }\n\t\n\twebix.protoUI({\n\t\tname: \"pivot\",\n\t\tversion: \"{{version}}\",\n\t\tdefaults: {\n\t\t\tfieldMap: {},\n\t\t\tyScaleWidth: 300,\n\t\t\tcolumnWidth: 150,\n\t\t\tfilterLabelAlign: \"right\",\n\t\t\tfilterWidth: 300,\n\t\t\tfilterMinWidth: 150,\n\t\t\tfilterLabelWidth: 100\n\t\n\t\t},\n\t\t$divider: \"_'_\",\n\t\t$init: function $init(config) {\n\t\t\tif (!config.structure) config.structure = {};\n\t\t\twebix.extend(config.structure, { rows: [], columns: [], values: [], filters: [] });\n\t\n\t\t\tthis.$view.className += \" webix_pivot\";\n\t\t\twebix.extend(config, this._get_ui(config));\n\t\t\tthis.$ready.push(this.render);\n\t\t\tthis.data.attachEvent(\"onStoreUpdated\", webix.bind(function () {\n\t\t\t\t// call render if pivot is initialized\n\t\t\t\tif (this.$$(\"data\")) this.render();\n\t\t\t}, this));\n\t\t},\n\t\t_get_ui: function _get_ui(config) {\n\t\t\tvar filters = { id: \"filters\", view: \"toolbar\", hidden: true, cols: [{}] };\n\t\n\t\t\tvar table = {\n\t\t\t\tview: \"treetable\",\n\t\t\t\tid: \"data\",\n\t\t\t\tselect: \"row\",\n\t\t\t\tnavigation: true,\n\t\t\t\tleftSplit: 1,\n\t\t\t\tresizeColumn: true,\n\t\t\t\ton: {\n\t\t\t\t\t\"onHeaderClick\": function onHeaderClick(id) {\n\t\t\t\t\t\tvar pivot = this.getTopParentView();\n\t\t\t\t\t\tif (this.getColumnIndex(id.column) === 0 && !pivot.config.readonly) pivot.configure();\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tcolumns: [{}]\n\t\t\t};\n\t\n\t\t\tif (config.datatable && _typeof(config.datatable) == \"object\") {\n\t\t\t\tdelete config.datatable.id;\n\t\t\t\twebix.extend(table, config.datatable, true);\n\t\t\t}\n\t\n\t\t\treturn { rows: [filters, table] };\n\t\t},\n\t\tconfigure: function configure() {\n\t\t\tif (!this._config_popup) {\n\t\t\t\tvar config = { view: \"webix_pivot_config\", operations: [], pivot: this.config.id };\n\t\t\t\twebix.extend(config, this.config.popup || {});\n\t\t\t\tthis._config_popup = webix.ui(config);\n\t\t\t\tthis.callEvent(\"onPopup\", [this._config_popup]);\n\t\t\t\tthis._config_popup.attachEvent(\"onApply\", webix.bind(function (structure) {\n\t\t\t\t\tthis.define(\"structure\", structure);\n\t\t\t\t\tthis.render();\n\t\t\t\t}, this));\n\t\t\t}\n\t\n\t\t\tvar functions = [];\n\t\t\tfor (var i in this.operations) {\n\t\t\t\tfunctions.push({ name: i, title: this._apply_locale(i) });\n\t\t\t}this._config_popup.define(\"operations\", functions);\n\t\t\tvar pos = webix.html.offset(this.$$(\"data\").getNode());\n\t\t\tthis._config_popup.setPosition(pos.x + 10, pos.y + 10);\n\t\t\tthis._config_popup.define(\"data\", this.getFields());\n\t\t\tthis._config_popup.show();\n\t\t},\n\t\n\t\trender: function render(without_filters) {\n\t\t\tvar data = this._process_data(this.data.pull, this.data.order);\n\t\n\t\t\tif (this.config.footer) this._add_footer(data.header);\n\t\n\t\t\tif (!without_filters) {\n\t\t\t\tdata.filters = this._process_filters();\n\t\t\t}\n\t\n\t\t\tthis.callEvent(\"onBeforeRender\", [data]);\n\t\n\t\t\tif (data.filters) {\n\t\t\t\tvar filters = data.filters;\n\t\t\t\tif (filters.length > 0) {\n\t\t\t\t\tthis.$$(\"filters\").show();\n\t\t\t\t\tthis.$$(\"filters\").define(\"cols\", filters);\n\t\t\t\t\tthis._filter_events();\n\t\t\t\t} else {\n\t\t\t\t\tthis.$$(\"filters\").hide();\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (this.config.totalColumn) this.$$(\"data\").define(\"math\", true);\n\t\n\t\t\tthis.$$(\"data\").config.columns = data.header;\n\t\n\t\t\tthis.$$(\"data\").refreshColumns();\n\t\t\tthis.$$(\"data\").clearAll();\n\t\t\tthis.$$(\"data\").parse(data.data);\n\t\t},\n\t\t_add_footer: function _add_footer(columns) {\n\t\t\tvar config, grid, i, names;\n\t\n\t\t\tgrid = this.$$(\"data\");\n\t\t\tgrid.define(\"footer\", true);\n\t\n\t\t\tif (columns.length) columns[0].footer = this._apply_locale(\"total\");\n\t\n\t\t\tfor (i = 1; i < columns.length; i++) {\n\t\t\t\tconfig = null;\n\t\n\t\t\t\tif (this.config.footer == \"sumOnly\") {\n\t\t\t\t\tnames = columns[i].id.split(this.$divider);\n\t\t\t\t\tif (names[names.length - 2] != \"sum\") config = \" \";\n\t\t\t\t}\n\t\n\t\t\t\tif (!config) config = {\n\t\t\t\t\tcontent: \"pivotSumColumn\",\n\t\t\t\t\ttemplate: webix.bind(function (data) {\n\t\t\t\t\t\tvar value = data.value;\n\t\t\t\t\t\treturn value && value != \"0\" && !this.format ? parseFloat(value).toFixed(3) : value;\n\t\t\t\t\t}, columns[i])\n\t\t\t\t};\n\t\n\t\t\t\tcolumns[i].footer = config;\n\t\n\t\t\t\tif (_typeof(this.config.footer) == \"object\") {\n\t\t\t\t\twebix.extend(columns[i].footer, this.config.footer, true);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t$exportView: function $exportView(options) {\n\t\t\twebix.extend(options, { filterHTML: true });\n\t\t\treturn this.$$(\"data\");\n\t\t},\n\t\t_apply_locale: function _apply_locale(value) {\n\t\t\treturn webix.i18n.pivot[value] || value;\n\t\t},\n\t\t_apply_map: function _apply_map(value) {\n\t\t\treturn this.config.fieldMap[value] || value;\n\t\t},\n\t\t_process_filters: function _process_filters() {\n\t\t\tvar filters = this.config.structure.filters || [];\n\t\t\tvar items = [];\n\t\t\tfor (var i = 0; i < filters.length; i++) {\n\t\t\t\tvar f = filters[i];\n\t\t\t\tvar item = { value: f.value, label: this._apply_map(f.name), field: f.name, view: f.type,\n\t\t\t\t\tlabelAlign: this.config.filterLabelAlign, labelWidth: this.config.filterLabelWidth, minWidth: this.config.filterMinWidth, maxWidth: this.config.filterWidth\n\t\t\t\t};\n\t\t\t\tif (f.type == \"select\" || f.type == \"multiselect\") item.options = this._distinct_values(f.name, f.type != \"multiselect\");\n\t\t\t\titems.push(item);\n\t\t\t}\n\t\t\treturn items;\n\t\t},\n\t\n\t\t_distinct_values: function _distinct_values(field, empty) {\n\t\t\tvar values = [];\n\t\t\tif (empty) values.push({ value: \"\", id: \"\" });\n\t\t\tvar data = this.data.pull;\n\t\t\tvar hash = {};\n\t\t\tfor (var obj in data) {\n\t\t\t\tvar value = data[obj][field];\n\t\t\t\tif (!webix.isUndefined(value)) {\n\t\t\t\t\tif (!hash[value]) {\n\t\t\t\t\t\tvalues.push({ value: value, id: value });\n\t\t\t\t\t\thash[value] = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tvar isNumeric = function isNumeric(n) {\n\t\t\t\treturn !isNaN(parseFloat(n));\n\t\t\t};\n\t\t\tvalues.sort(function (a, b) {\n\t\t\t\tvar val1 = a.value;\n\t\t\t\tvar val2 = b.value;\n\t\t\t\tif (!val2) return 1;\n\t\t\t\tif (!val1) return -1;\n\t\t\t\tif (!isNumeric(val1) || !isNumeric(val2)) {\n\t\t\t\t\tval1 = val1.toString().toLowerCase();\n\t\t\t\t\tval2 = val2.toString().toLowerCase();\n\t\t\t\t}\n\t\t\t\treturn val1 > val2 ? 1 : val1 < val2 ? -1 : 0;\n\t\t\t});\n\t\t\treturn values;\n\t\t},\n\t\n\t\t_filter_events: function _filter_events() {\n\t\t\tvar filters = this.$$(\"filters\");\n\t\t\tfilters.reconstruct();\n\t\n\t\t\tvar children = filters.getChildViews();\n\t\t\tvar pivot = this;\n\t\t\tfor (var i = 0; i < children.length; i++) {\n\t\t\t\tvar el = children[i];\n\t\t\t\tif (el.name == \"select\" || el.name == \"multiselect\" || el.name == \"datepicker\") el.attachEvent(\"onChange\", function (newvalue) {\n\t\t\t\t\tpivot._set_filter_value(this.config.field, newvalue);\n\t\t\t\t});else el.attachEvent(\"onTimedKeyPress\", function () {\n\t\t\t\t\tpivot._set_filter_value(this.config.field, this.getValue());\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\t\n\t\t_set_filter_value: function _set_filter_value(field, value) {\n\t\t\tvar filters = this.config.structure.filters;\n\t\t\tfor (var i = 0; i < filters.length; i++) {\n\t\t\t\tif (filters[i].name == field) {\n\t\t\t\t\tfilters[i].value = value;\n\t\t\t\t\tthis.render(true);\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}return false;\n\t\t},\n\t\n\t\t_process_data: function _process_data(data, order) {\n\t\t\tthis._init_filters();\n\t\n\t\t\tvar structure = this.config.structure;\n\t\t\tstructure._header = [];\n\t\t\tstructure._header_hash = {};\n\t\n\t\t\tfor (var i = 0; i < structure.values.length; i++) {\n\t\t\t\tstructure.values[i].operation = structure.values[i].operation || [\"sum\"];\n\t\t\t\tif (!webix.isArray(structure.values[i].operation)) structure.values[i].operation = [structure.values[i].operation];\n\t\t\t}\n\t\t\tvar columns = [];\n\t\n\t\t\tfor (var _i = 0; _i < structure.columns.length; _i++) {\n\t\t\t\tcolumns[_i] = _typeof(structure.columns[_i]) == \"object\" ? structure.columns[_i].id || _i : structure.columns[_i];\n\t\t\t}\n\t\n\t\t\tvar fields = structure.rows.concat(columns);\n\t\n\t\t\tvar items = this._group(data, order, fields);\n\t\t\tvar header = {};\n\t\t\tif (structure.rows.length > 0) items = this._process_rows(items, structure.rows, structure, header);else {\n\t\t\t\t// there are no rows in structure, only columns and values\n\t\t\t\tthis._process_columns(items, columns, structure, header);\n\t\t\t\titems = [];\n\t\t\t}\n\t\t\theader = this._process_header(header);\n\t\t\treturn { header: header, data: items };\n\t\t},\n\t\t_groupItem: function _groupItem(hash, item, fields) {\n\t\t\tif (fields.length) {\n\t\t\t\tvar value = item[fields[0]];\n\t\t\t\tif (webix.isUndefined(hash[value])) hash[value] = {};\n\t\t\t\tthis._groupItem(hash[value], item, fields.slice(1));\n\t\t\t} else hash[item.id] = item;\n\t\t},\n\t\t_group: function _group(data, order, fields) {\n\t\t\tvar id,\n\t\t\t    item,\n\t\t\t    i,\n\t\t\t    j,\n\t\t\t    value,\n\t\t\t    hash = {};\n\t\n\t\t\tfor (i = 0; i < order.length; i++) {\n\t\t\t\tid = order[i];\n\t\t\t\titem = data[id];\n\t\t\t\tif (item && this._filter_item(item)) {\n\t\t\t\t\tthis._groupItem(hash, item, fields);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn hash;\n\t\t},\n\t\t_process_rows: function _process_rows(data, rows, structure, header) {\n\t\t\tvar items = [];\n\t\t\tif (rows.length > 1) {\n\t\t\t\tfor (var i in data) {\n\t\t\t\t\tdata[i] = this._process_rows(data[i], rows.slice(1), structure, header);\n\t\t\t\t}var values = structure._header;\n\t\n\t\t\t\tfor (var _i2 in data) {\n\t\t\t\t\tvar item = { data: data[_i2] };\n\t\t\t\t\tfor (var j = 0; j < item.data.length; j++) {\n\t\t\t\t\t\tfor (var k = 0; k < values.length; k++) {\n\t\t\t\t\t\t\tvar value = values[k];\n\t\t\t\t\t\t\tif (webix.isUndefined(item[value])) item[value] = [];\n\t\t\t\t\t\t\titem[value].push(item.data[j][value]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\titem = this._calculate_item(item, structure);\n\t\t\t\t\titem = this._minmax_in_row(item, structure);\n\t\t\t\t\titem.name = _i2;\n\t\t\t\t\titem.open = true;\n\t\t\t\t\titems.push(item);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tfor (var _i3 in data) {\n\t\t\t\t\tvar _item = this._process_columns(data[_i3], this.config.structure.columns, structure, header);\n\t\t\t\t\t_item.name = _i3;\n\t\t\t\t\t_item = this._calculate_item(_item, structure);\n\t\t\t\t\t_item = this._minmax_in_row(_item, structure);\n\t\t\t\t\titems.push(_item);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn items;\n\t\t},\n\t\n\t\t_process_columns: function _process_columns(data, columns, structure, header, item, name) {\n\t\t\tvar vname;\n\t\t\titem = item || {};\n\t\t\tif (columns.length > 0) {\n\t\t\t\tname = name || \"\";\n\t\t\t\tfor (var i in data) {\n\t\t\t\t\tif (!header[i]) header[i] = {};\n\t\t\t\t\tdata[i] = this._process_columns(data[i], columns.slice(1), structure, header[i], item, (name.length > 0 ? name + this.$divider : \"\") + i);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tvar values = this.config.structure.values;\n\t\t\t\tfor (var id in data) {\n\t\t\t\t\tfor (var _i4 = 0; _i4 < values.length; _i4++) {\n\t\t\t\t\t\tfor (var j = 0; j < values[_i4].operation.length; j++) {\n\t\t\t\t\t\t\tif (name) vname = name + this.$divider + values[_i4].operation[j] + this.$divider + values[_i4].name;else // if no columns\n\t\t\t\t\t\t\t\tvname = values[_i4].operation[j] + this.$divider + values[_i4].name;\n\t\t\t\t\t\t\tif (!structure._header_hash[vname]) {\n\t\t\t\t\t\t\t\tstructure._header.push(vname);\n\t\t\t\t\t\t\t\tstructure._header_hash[vname] = true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (webix.isUndefined(item[vname])) {\n\t\t\t\t\t\t\t\titem[vname] = [];\n\t\t\t\t\t\t\t\theader[values[_i4].operation[j] + this.$divider + values[_i4].name] = {};\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\titem[vname].push(data[id][values[_i4].name]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn item;\n\t\t},\n\t\t_sort_header: function _sort_header(header) {\n\t\t\tvar columns = this.config.structure.columns;\n\t\t\tvar sorted = false;\n\t\n\t\t\tvar isSorting = false;\n\t\t\tfor (var i = 0; i < columns.length && !isSorting; i++) {\n\t\t\t\tif (_typeof(columns[i]) == \"object\" && columns[i].sort) isSorting = true;\n\t\t\t}\n\t\t\tif (!isSorting) return false;\n\t\n\t\t\theader.sort(function (a, b) {\n\t\t\t\tvar order = null;\n\t\t\t\tvar res;\n\t\t\t\tfor (var _i5 = 0; _i5 < columns.length && order === null; _i5++) {\n\t\t\t\t\tvar c = columns[_i5];\n\t\t\t\t\tif ((typeof c === \"undefined\" ? \"undefined\" : _typeof(c)) == \"object\" && c.sort) {\n\t\n\t\t\t\t\t\tvar sortFunction = c.sort;\n\t\t\t\t\t\tif (typeof c.sort == \"string\") sortFunction = webix.DataStore.prototype.sorting.as[c.sort];\n\t\t\t\t\t\tres = sortFunction(a[_i5].text, b[_i5].text);\n\t\n\t\t\t\t\t\tif (res || _i5 == columns.length - 1) {\n\t\t\t\t\t\t\tsorted = true;\n\t\t\t\t\t\t\tif (c.sortDir == \"desc\") {\n\t\t\t\t\t\t\t\tres = res * -1;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\torder = res;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else order = 0;\n\t\t\t\t}\n\t\t\t\treturn order;\n\t\t\t});\n\t\n\t\t\tif (header[0]) {\n\t\t\t\tvar j = header[0].length - 2;\n\t\t\t\twhile (j >= 0) {\n\t\t\t\t\tvar text = \"\";\n\t\t\t\t\tvar index = 0;\n\t\t\t\t\tfor (var _i6 = 0; _i6 < header.length; _i6++) {\n\t\t\t\t\t\tif (text != header[_i6][j].text) {\n\t\t\t\t\t\t\tindex = _i6;\n\t\t\t\t\t\t\ttext = header[_i6][j].text;\n\t\t\t\t\t\t\theader[_i6][j].colspan = 1;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tdelete header[_i6][j].colspan;\n\t\t\t\t\t\t\theader[index][j].colspan++;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tj--;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t_process_header: function _process_header(header) {\n\t\t\theader = this._render_header(header);\n\t\n\t\t\tthis._sort_header(header);\n\t\t\tvar vConfig,\n\t\t\t    valuesConfig = this.config.structure.values;\n\t\n\t\t\tfor (var i = 0; i < header.length; i++) {\n\t\t\t\tvar parts = [];\n\t\t\t\tfor (var j = 0; j < header[i].length; j++) {\n\t\t\t\t\tparts.push(header[i][j].name);\n\t\t\t\t} // find value configuration\n\t\t\t\tvConfig = null;\n\t\t\t\tvar tmp = parts[parts.length - 1].split(this.$divider);\n\t\t\t\tfor (var _j = 0; _j < valuesConfig.length && !vConfig; _j++) {\n\t\t\t\t\tif (valuesConfig[_j].operation) for (var p = 0; p < valuesConfig[_j].operation.length; p++) {\n\t\t\t\t\t\tif (valuesConfig[_j].name == tmp[1] && valuesConfig[_j].operation[p] == tmp[0]) {\n\t\t\t\t\t\t\tvConfig = valuesConfig[_j];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t\theader[i] = { id: parts.join(this.$divider), header: header[i], sort: \"int\", width: this.config.columnWidth };\n\t\t\t\t// add format\n\t\t\t\tif (vConfig && vConfig.format) header[i].format = vConfig.format;\n\t\t\t}\n\t\n\t\t\tthis.callEvent(\"onHeaderInit\", [header]);\n\t\n\t\t\tif (this.config.totalColumn && header.length) {\n\t\t\t\theader = this._add_total_columns(header);\n\t\t\t}\n\t\n\t\t\tvar text0 = \"<div class='webix_pivot_config_msg'>\" + webix.i18n.pivot.pivotMessage + \"</div>\";\n\t\n\t\t\tif (this.config.readonly) {\n\t\t\t\ttext0 = this.config.readonlyTitle || \"\";\n\t\t\t\tthis.$$(\"data\").$view.className += \" webix_pivot_readonly\";\n\t\t\t}\n\t\t\theader.splice(0, 0, { id: \"name\", exportAsTree: true, template: \"{common.treetable()} #name#\", header: { text: text0 }, width: this.config.yScaleWidth });\n\t\n\t\t\treturn header;\n\t\t},\n\t\t_add_total_columns: function _add_total_columns(header) {\n\t\t\tvar arr,\n\t\t\t    h,\n\t\t\t    i,\n\t\t\t    j,\n\t\t\t    found = false,\n\t\t\t    index = 0,\n\t\t\t    totalCols = [];\n\t\n\t\t\t// if no columns in selected\n\t\t\tif (header[0].header.length < 2) return header;\n\t\n\t\t\ti = header.length - 1;\n\t\n\t\t\twhile (!found && i) {\n\t\t\t\tif (header[i].header[0].name != header[i - 1].header[0].name) {\n\t\t\t\t\tfound = true;\n\t\t\t\t\tindex = i;\n\t\t\t\t}\n\t\t\t\ti--;\n\t\t\t}\n\t\t\tvar c = 0;\n\t\t\tfor (i = index; i < header.length; i++) {\n\t\t\t\th = webix.copy(header[i]);\n\t\t\t\tarr = [];\n\t\t\t\tfound = true;\n\t\t\t\tif (this.config.totalColumn == \"sumOnly\") {\n\t\t\t\t\tvar parts = h.id.split(this.$divider);\n\t\t\t\t\tvar operation = parts[parts.length - 2];\n\t\t\t\t\tif (operation != \"sum\") found = false;\n\t\t\t\t}\n\t\t\t\tif (found) {\n\t\t\t\t\tfor (j = c + 1; j < header.length + 1; j += header.length - index) {\n\t\t\t\t\t\tarr.push(\"[$r,:\" + j + \"]\");\n\t\t\t\t\t}\n\t\t\t\t\th.math = arr.join(\"+\");\n\t\n\t\t\t\t\tif (!h.format) h.format = function (value) {\n\t\t\t\t\t\treturn value && value != \"0\" ? parseFloat(value).toFixed(3) : value;\n\t\t\t\t\t};\n\t\n\t\t\t\t\tif (_typeof(this.config.totalColumn) == \"object\") {\n\t\t\t\t\t\twebix.extend(h, this.config.totalColumn, true);\n\t\t\t\t\t}\n\t\n\t\t\t\t\th.id = h.id.replace(h.header[0].name, \"$webixtotal\");\n\t\t\t\t\th.header[0].name = \"total\";\n\t\t\t\t\th.header[0].text = this._apply_locale(\"total\");\n\t\t\t\t\ttotalCols.push(h);\n\t\t\t\t}\n\t\n\t\t\t\tc++;\n\t\t\t}\n\t\t\ttotalCols = this._correct_colspan(totalCols);\n\t\t\treturn header.concat(totalCols);\n\t\t},\n\t\t_correct_colspan: function _correct_colspan(header) {\n\t\t\tif (header[0]) {\n\t\t\t\tvar j = header[0].header.length - 2;\n\t\t\t\twhile (j >= 0) {\n\t\t\t\t\tvar text = \"\";\n\t\t\t\t\tvar index = 0;\n\t\t\t\t\tfor (var i = 0; i < header.length; i++) {\n\t\t\t\t\t\tif (text != header[i].header[j].text) {\n\t\t\t\t\t\t\tindex = i;\n\t\t\t\t\t\t\ttext = header[i].header[j].text;\n\t\t\t\t\t\t\theader[i].header[j].colspan = 1;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tdelete header[i].header[j].colspan;\n\t\t\t\t\t\t\theader[index].header[j].colspan++;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tj--;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn header;\n\t\t},\n\t\t_render_header: function _render_header(data) {\n\t\n\t\t\tvar header = [];\n\t\n\t\t\tfor (var i in data) {\n\t\n\t\t\t\t// is the last level?\n\t\t\t\tvar empty = true;\n\t\t\t\t//noinspection JSUnusedLocalSymbols\n\t\t\t\tfor (var k in data[i]) {\n\t\t\t\t\tempty = false;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\n\t\t\t\tif (!empty) {\n\t\t\t\t\tdata[i] = this._render_header(data[i]);\n\t\t\t\t\tvar first = false;\n\t\t\t\t\tfor (var j = 0; j < data[i].length; j++) {\n\t\t\t\t\t\tvar h = data[i][j];\n\t\t\t\t\t\th.splice(0, 0, { name: i, text: i });\n\t\t\t\t\t\tif (!first) {\n\t\t\t\t\t\t\th[0].colspan = data[i].length;\n\t\t\t\t\t\t\tfirst = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t\theader.push(h);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tvar tmp = i.split(this.$divider);\n\t\n\t\t\t\t\tif (tmp.length > 1) {\n\t\t\t\t\t\theader.push([{ name: i, text: this._apply_map(tmp[1]) + \" (\" + this._apply_locale(tmp[0]) + \")\" }]);\n\t\t\t\t\t} else\n\t\t\t\t\t\t// there are no values in structure, only rows and columns\n\t\t\t\t\t\theader.push([{ name: i, text: i }]);\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\treturn header;\n\t\t},\n\t\t_get_key_leaves: function _get_key_leaves(data, key, result) {\n\t\t\tfor (var i = 0; i < data.length; i++) {\n\t\t\t\tif (data[i].data) this._get_key_leaves(data[i].data, key, result);else result.push(data[i][key]);\n\t\t\t}\n\t\t},\n\t\t_calculate_item: function _calculate_item(item, structure) {\n\t\t\tvar i, key, leaves, op, tmp, values;\n\t\n\t\t\tfor (i = 0; i < structure._header.length; i++) {\n\t\t\t\tkey = structure._header[i];\n\t\t\t\ttmp = key.split(this.$divider);\n\t\n\t\t\t\top = tmp[tmp.length - 2];\n\t\n\t\t\t\tvalues = item[key];\n\t\n\t\t\t\tleaves = this._operationOptions[op] && this._operationOptions[op].leavesOnly;\n\t\t\t\tif (leaves && item.data) {\n\t\n\t\t\t\t\tvalues = [];\n\t\t\t\t\tthis._get_key_leaves(item.data, key, values);\n\t\t\t\t}\n\t\t\t\tif (values) {\n\t\t\t\t\tvar data = [];\n\t\n\t\t\t\t\tfor (var j = 0; j < values.length; j++) {\n\t\t\t\t\t\tif (values[j] || values[j] == \"0\") {\n\t\t\t\t\t\t\tdata.push(values[j]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (data.length) item[key] = this.operations[op].call(this, data, key, item);else item[key] = '';\n\t\t\t\t} else item[key] = '';\n\t\n\t\t\t\tif (item[key]) item[key] = Math.round(item[key] * 100000) / 100000;\n\t\t\t}\n\t\t\treturn item;\n\t\t},\n\t\t_minmax_in_row: function _minmax_in_row(item, structure) {\n\t\t\t// nothing to do\n\t\t\tif (!this.config.min && !this.config.max) return item;\n\t\n\t\t\tvar values = this.config.structure.values;\n\t\t\tif (!item.$cellCss) item.$cellCss = {};\n\t\n\t\t\t// calculating for each value\n\t\t\tfor (var i = 0; i < values.length; i++) {\n\t\t\t\tvar value = values[i];\n\t\n\t\t\t\tvar max = [],\n\t\t\t\t    max_value = -99999999;\n\t\t\t\tvar min = [],\n\t\t\t\t    min_value = 99999999;\n\t\n\t\t\t\tfor (var j = 0; j < structure._header.length; j++) {\n\t\t\t\t\tvar key = structure._header[j];\n\t\t\t\t\tif (window.isNaN(item[key])) continue;\n\t\t\t\t\t// it's a another value\n\t\t\t\t\tif (key.indexOf(value.name, this.length - value.name.length) === -1) continue;\n\t\n\t\t\t\t\tif (this.config.max && item[key] > max_value) {\n\t\t\t\t\t\tmax = [key];\n\t\t\t\t\t\tmax_value = item[key];\n\t\t\t\t\t} else if (item[key] == max_value) {\n\t\t\t\t\t\tmax.push(key);\n\t\t\t\t\t}\n\t\t\t\t\tif (this.config.min && item[key] < min_value) {\n\t\t\t\t\t\tmin = [key];\n\t\t\t\t\t\tmin_value = item[key];\n\t\t\t\t\t} else if (item[key] == min_value) {\n\t\t\t\t\t\tmin.push(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t\tfor (var _j2 = 0; _j2 < min.length; _j2++) {\n\t\t\t\t\titem.$cellCss[min[_j2]] = \"webix_min\";\n\t\t\t\t}\n\t\t\t\tfor (var _j3 = 0; _j3 < max.length; _j3++) {\n\t\t\t\t\titem.$cellCss[max[_j3]] = \"webix_max\";\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn item;\n\t\t},\n\t\t_operationOptions: {},\n\t\toperations: {\n\t\t\tsum: function sum(args) {\n\t\t\t\tvar sum = 0;\n\t\t\t\tfor (var i = 0; i < args.length; i++) {\n\t\t\t\t\tvar value = args[i];\n\t\t\t\t\tvalue = parseFloat(value, 10);\n\t\t\t\t\tif (!window.isNaN(value)) sum += value;\n\t\t\t\t}\n\t\t\t\treturn sum;\n\t\t\t},\n\t\t\tcount: function count(data, key, item) {\n\t\t\t\tvar count = 0;\n\t\t\t\tif (!item.data) count = data.length;else {\n\t\t\t\t\tfor (var i = 0; i < item.data.length; i++) {\n\t\t\t\t\t\tcount += item.data[i][key] || 0;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn count;\n\t\t\t},\n\t\t\tmax: function max(args) {\n\t\t\t\tif (args.length == 1) return args[0];\n\t\t\t\treturn Math.max.apply(this, args);\n\t\t\t},\n\t\t\tmin: function min(args) {\n\t\t\t\tif (args.length == 1) return args[0];\n\t\t\t\treturn Math.min.apply(this, args);\n\t\t\t}\n\t\t},\n\t\taddOperation: function addOperation(name, method, options) {\n\t\t\tthis.operations[name] = method;\n\t\t\tif (options) this._operationOptions[name] = options;\n\t\t},\n\t\tgetFields: function getFields() {\n\t\t\tvar fields = [];\n\t\t\tvar fields_hash = {};\n\t\t\tfor (var i = 0; i < Math.min(this.data.count() || 5); i++) {\n\t\t\t\tvar item = this.data.getItem(this.data.getIdByIndex(i));\n\t\t\t\tfor (var field in item) {\n\t\t\t\t\tif (!fields_hash[field]) {\n\t\t\t\t\t\tfields.push(field);\n\t\t\t\t\t\tfields_hash[field] = webix.uid();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tvar str = this.config.structure;\n\t\t\tvar result = { fields: [], rows: [], columns: [], values: [], filters: [] };\n\t\n\t\t\tfor (var _i7 = 0; _i7 < (str.filters || []).length; _i7++) {\n\t\t\t\tvar _field = str.filters[_i7];\n\t\t\t\tif (!webix.isUndefined(fields_hash[_field.name])) {\n\t\t\t\t\tvar text = this._apply_map(_field.name);\n\t\t\t\t\tresult.filters.push({ name: _field.name, text: text, type: _field.type, value: _field.value, id: fields_hash[_field] });\n\t\t\t\t\t//delete fields_hash[field.name]; // filter allows to drag a field multiple times\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor (var _i8 = 0; _i8 < str.rows.length; _i8++) {\n\t\t\t\tvar _field2 = str.rows[_i8];\n\t\t\t\tif (!webix.isUndefined(fields_hash[_field2])) {\n\t\t\t\t\tresult.rows.push({ name: _field2, text: this._apply_map(_field2), id: fields_hash[_field2] });\n\t\t\t\t\tdelete fields_hash[_field2];\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tfor (var _i9 = 0; _i9 < str.columns.length; _i9++) {\n\t\t\t\tvar _field3 = _typeof(str.columns[_i9]) == \"object\" ? str.columns[_i9].id || _i9 : str.columns[_i9];\n\t\t\t\tif (!webix.isUndefined(fields_hash[_field3])) {\n\t\t\t\t\tresult.columns.push({ name: _field3, text: this._apply_map(_field3), id: fields_hash[_field3] });\n\t\t\t\t\tdelete fields_hash[_field3];\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tfor (var _i10 = 0; _i10 < str.values.length; _i10++) {\n\t\t\t\tvar _field4 = str.values[_i10];\n\t\t\t\tif (!webix.isUndefined(fields_hash[_field4.name])) {\n\t\t\t\t\tvar _text = this._apply_map(_field4.name);\n\t\t\t\t\tresult.values.push({ name: _field4.name, text: _text, operation: _field4.operation, id: fields_hash[_field4.name] });\n\t\t\t\t\t//delete fields_hash[field.name];   // values allows to drag a field multiple times\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tfor (var _i11 = 0; _i11 < fields.length; _i11++) {\n\t\t\t\tvar _field5 = fields[_i11];\n\t\t\t\tif (!webix.isUndefined(fields_hash[_field5])) result.fields.push({ name: _field5, text: this._apply_map(_field5), id: fields_hash[_field5] });\n\t\t\t}\n\t\t\treturn result;\n\t\t},\n\t\t_init_filters: function _init_filters() {\n\t\t\tvar filters = this.config.structure.filters || [];\n\t\t\tflt.init(filters);\n\t\t},\n\t\t_filter_item: function _filter_item(item) {\n\t\t\tvar filters = this.config.structure.filters || [];\n\t\t\treturn flt.filterItem(filters, item);\n\t\t},\n\t\tsetStructure: function setStructure(config) {\n\t\t\tthis.define(\"structure\", config);\n\t\t\tthis.render();\n\t\t},\n\t\tgetStructure: function getStructure() {\n\t\t\treturn this.config.structure;\n\t\t},\n\t\tgetConfigWindow: function getConfigWindow() {\n\t\t\treturn this._config_popup;\n\t\t},\n\t\tprofile_setter: function profile_setter(value) {\n\t\t\tvar c = window.console;\n\t\t\tif (value) {\n\t\t\t\tthis.attachEvent(\"onBeforeLoad\", function () {\n\t\t\t\t\tc.time(\"data loading\");\n\t\t\t\t});\n\t\t\t\tthis.data.attachEvent(\"onParse\", function () {\n\t\t\t\t\tc.timeEnd(\"data loading\");c.time(\"data parsing\");\n\t\t\t\t});\n\t\t\t\tthis.data.attachEvent(\"onStoreLoad\", function () {\n\t\t\t\t\tc.timeEnd(\"data parsing\");c.time(\"data processing\");\n\t\t\t\t});\n\t\t\t\tthis.$ready.push(function () {\n\t\t\t\t\tthis.$$(\"data\").attachEvent(\"onBeforeRender\", function () {\n\t\t\t\t\t\tif (this.count()) {\n\t\t\t\t\t\t\tc.timeEnd(\"data processing\");c.time(\"data rendering\");\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\tthis.$$(\"data\").attachEvent(\"onAfterRender\", function () {\n\t\t\t\t\t\tif (this.count()) webix.delay(function () {\n\t\t\t\t\t\t\tc.timeEnd(\"data rendering\");\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}, webix.IdSpace, webix.ui.layout, webix.DataLoader, webix.EventSystem, webix.Settings);\n\n/***/ },\n/* 8 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\texports.__esModule = true;\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj; };\n\t\n\texports.init = init;\n\texports.filterItem = filterItem;\n\tfunction numHelper(fvalue, value, func) {\n\t    if ((typeof fvalue === \"undefined\" ? \"undefined\" : _typeof(fvalue)) == \"object\") {\n\t        for (var i = 0; i < fvalue.length; i++) {\n\t            fvalue[i] = window.parseFloat(fvalue[i]);\n\t            if (window.isNaN(fvalue[i])) return true;\n\t        }\n\t    } else {\n\t        fvalue = window.parseFloat(fvalue);\n\t        // if filter value is not a number then ignore such filter\n\t        if (window.isNaN(fvalue)) return true;\n\t    }\n\t    // if row value is not a number then don't show this row\n\t    if (window.isNaN(value)) return false;\n\t    return func(fvalue, value);\n\t}\n\t\n\tvar rules = exports.rules = {\n\t    contains: function contains(fvalue, value) {\n\t        return value.indexOf(fvalue.toString().toLowerCase()) >= 0;\n\t    },\n\t    equal: function equal(fvalue, value) {\n\t        return numHelper(fvalue, value, function (fvalue, value) {\n\t            return fvalue == value;\n\t        });\n\t    },\n\t    not_equal: function not_equal(fvalue, value) {\n\t        return numHelper(fvalue, value, function (fvalue, value) {\n\t            return fvalue != value;\n\t        });\n\t    },\n\t    less: function less(fvalue, value) {\n\t        return numHelper(fvalue, value, function (fvalue, value) {\n\t            return value < fvalue;\n\t        });\n\t    },\n\t    less_equal: function less_equal(fvalue, value) {\n\t        return numHelper(fvalue, value, function (fvalue, value) {\n\t            return value <= fvalue;\n\t        });\n\t    },\n\t    more: function more(fvalue, value) {\n\t        return numHelper(fvalue, value, function (fvalue, value) {\n\t            return value > fvalue;\n\t        });\n\t    },\n\t    more_equal: function more_equal(fvalue, value) {\n\t        return numHelper(fvalue, value, function (fvalue, value) {\n\t            return value >= fvalue;\n\t        });\n\t    },\n\t    multi: function multi(fvalues, value) {\n\t        var result = false;\n\t        fvalues = fvalues.split(\",\");\n\t        for (var i = 0; i < fvalues.length; i++) {\n\t            result = result || value.indexOf(fvalues[i].toString().toLowerCase()) >= 0;\n\t        }\n\t        return result;\n\t    },\n\t    range: function range(fvalue, value) {\n\t        return numHelper(fvalue, value, function (fvalue, value) {\n\t            return value < fvalue[1] && value >= fvalue[0];\n\t        });\n\t    },\n\t    range_inc: function range_inc(fvalue, value) {\n\t        return numHelper(fvalue, value, function (fvalue, value) {\n\t            return value <= fvalue[1] && value >= fvalue[0];\n\t        });\n\t    }\n\t};\n\t\n\tfunction init(filters) {\n\t    for (var i = 0; i < filters.length; i++) {\n\t        var f = filters[i];\n\t\n\t        var fvalue = f.value || \"\";\n\t        if (webix.isDate(fvalue)) {\n\t            fvalue = webix.i18n.parseFormatStr(fvalue);\n\t        } else if (typeof fvalue == \"string\") {\n\t            if (fvalue.trim) fvalue = fvalue.trim();\n\t        }\n\t\n\t        if (fvalue.substr(0, 1) == \"=\") {\n\t            f.func = rules.equal;\n\t            fvalue = fvalue.substr(1);\n\t        } else if (fvalue.substr(0, 2) == \"<>\") {\n\t            f.func = rules.not_equal;\n\t            fvalue = fvalue.substr(2);\n\t        } else if (fvalue.substr(0, 2) == \">=\") {\n\t            f.func = rules.more_equal;\n\t            fvalue = fvalue.substr(2);\n\t        } else if (fvalue.substr(0, 1) == \">\") {\n\t            f.func = rules.more;\n\t            fvalue = fvalue.substr(1);\n\t        } else if (fvalue.substr(0, 2) == \"<=\") {\n\t            f.func = rules.less_equal;\n\t            fvalue = fvalue.substr(2);\n\t        } else if (fvalue.substr(0, 1) == \"<\") {\n\t            f.func = rules.less;\n\t            fvalue = fvalue.substr(1);\n\t        } else if (fvalue.indexOf(\"...\") > 0) {\n\t            f.func = rules.range;\n\t            fvalue = fvalue.split(\"...\");\n\t        } else if (fvalue.indexOf(\"..\") > 0) {\n\t            f.func = rules.range_inc;\n\t            fvalue = fvalue.split(\"..\");\n\t        } else if (f.type == \"multiselect\") {\n\t            f.func = rules.multi;\n\t        } else if (f.type == \"datepicker\") {\n\t            f.func = function (fvalue, value) {\n\t                return fvalue == value;\n\t            };\n\t        } else f.func = rules.contains;\n\t\n\t        f.fvalue = fvalue;\n\t    }\n\t}\n\t\n\tfunction filterItem(filters, item) {\n\t    for (var i = 0; i < filters.length; i++) {\n\t        var f = filters[i];\n\t        if (f.fvalue) {\n\t            if (webix.isUndefined(item[f.name])) return false;\n\t\n\t            var value = item[f.name].toString().toLowerCase();\n\t            var result = f.func(f.fvalue, value);\n\t\n\t            if (!result) return false;\n\t        }\n\t    }\n\t    return true;\n\t}\n\n/***/ },\n/* 9 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\twebix.ui.datafilter.pivotSumColumn = webix.extend({\n\t    refresh: function refresh(master, node, value) {\n\t        var result = 0;\n\t        master.mapCells(null, value.columnId, null, 1, function (value, id) {\n\t            if (!isNaN(value) && master.getItem(id).$level == 1) result += value * 1;\n\t            return value;\n\t        });\n\t\n\t        if (value.format) result = value.format(result);\n\t        if (value.template) result = value.template({ value: result });\n\t\n\t        node.firstChild.innerHTML = result;\n\t    }\n\t}, webix.ui.datafilter.summColumn);\n\n/***/ },\n/* 10 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\twebix.protoUI({\n\t    name: \"webix_pivot_config\",\n\t\n\t    $init: function $init(config) {\n\t        this.$view.className += \" webix_popup webix_pivot\";\n\t        webix.extend(config, this.defaults);\n\t        webix.extend(config, this._get_ui(config));\n\t        this.$ready.push(this._after_init);\n\t    },\n\t    defaults: {\n\t        padding: 8,\n\t        height: 500,\n\t        width: 700,\n\t        cancelButtonWidth: 100,\n\t        applyButtonWidth: 100,\n\t        fieldsColumnWidth: 180,\n\t        head: false,\n\t        modal: true,\n\t        move: true\n\t    },\n\t    _get_ui: function _get_ui(config) {\n\t        return {\n\t            head: {\n\t                /*type: \"space\",\n\t                 margin: 5,\n\t                 padding: 5,\n\t                 borderless: true,*/\n\t                view: \"toolbar\",\n\t                //height: 45,\n\t                cols: [{ id: \"config_title\", view: \"label\", label: webix.i18n.pivot.windowTitle || \"\" }, { view: \"button\", id: \"cancel\", label: webix.i18n.pivot.cancel, width: config.cancelButtonWidth }, { view: \"button\", id: \"apply\", type: \"form\", label: webix.i18n.pivot.apply, width: config.applyButtonWidth }]\n\t            },\n\t            body: {\n\t                type: \"wide\",\n\t                //  margin: 5,\n\t                rows: [{\n\t                    //type: \"wide\",\n\t\n\t                    cols: [\n\t                    // {width:1},\n\t                    {\n\t                        width: config.fieldsColumnWidth,\n\t\n\t                        rows: [{ id: \"fieldsHeader\", data: { value: \"fields\" }, css: \"webix_pivot_header_fields\", template: this._popup_templates.popupHeaders, height: 45 }, { id: \"fields\", view: \"list\", scroll: true, type: { height: \"auto\" }, css: \"\", drag: true, template: \"<span class='webix_pivot_list_marker'></span>#text#\",\n\t                            on: {\n\t                                onBeforeDropOut: webix.bind(this._check_values_drag, this)\n\t                            }\n\t                        }]\n\t                    }, {\n\t                        type: \"space\",\n\t                        rows: [{\n\t                            type: \"wide\",\n\t                            rows: [{\n\t                                css: \"webix_pivot_transparent\", borderless: true, template: \"<div class='webix_pivot_fields_msg'>\" + webix.i18n.pivot.windowMessage || \"\" + \"</div>\", height: 25\n\t                            }, {\n\t                                type: \"wide\",\n\t                                cols: [{\n\t\n\t                                    rows: [{ id: \"filtersHeader\", data: { value: \"filters\", icon: \"filter\" }, template: this._popup_templates.popupIconHeaders, css: \"webix_pivot_popup_title\", height: 40 }, { id: \"filters\", view: \"list\", scroll: false, drag: true, css: \"webix_pivot_values\",\n\t                                        template: function template(obj) {\n\t                                            obj.type = obj.type || \"select\";\n\t                                            return \"<a class='webix_pivot_link'>\" + obj.text + \" <span class='webix_link_selection'>\" + obj.type + \"</span></a> \";\n\t                                        },\n\t                                        type: {\n\t                                            height: 35\n\t                                        },\n\t                                        onClick: { \"webix_pivot_link\": webix.bind(this._filter_selector, this) },\n\t                                        on: {\n\t                                            onBeforeDrop: webix.bind(this._copy_filter_field, this),\n\t                                            onBeforeDropOut: webix.bind(this._check_filter_drag, this)\n\t                                        }\n\t                                    }] }, {\n\t                                    rows: [{ id: \"columnsHeader\", data: { value: \"columns\", icon: \"columns\" }, template: this._popup_templates.popupIconHeaders, css: \"webix_pivot_popup_title\", height: 40 }, { id: \"columns\", view: \"list\", scroll: false, drag: true, type: { height: 35 }, template: \"#text#\" }]\n\t                                }] }, {\n\t                                type: \"wide\",\n\t                                cols: [{\n\t                                    rows: [{ id: \"rowsHeader\", data: { value: \"rows\", icon: \"list\" }, template: this._popup_templates.popupIconHeaders, css: \"webix_pivot_popup_title\", height: 40 }, { id: \"rows\", view: \"list\", scroll: false, drag: true, template: \"#text#\", type: { height: 35 } }]\n\t                                }, {\n\t                                    rows: [{ id: \"valuesHeader\", data: { value: \"values\", icon: false, iconContent: \"<b>&Sigma;</b>\" }, template: this._popup_templates.popupIconHeaders, css: \"webix_pivot_popup_title\", height: 40 }, { id: \"values\", view: \"list\", scroll: true, drag: true, css: \"webix_pivot_values\", type: { height: \"auto\" },\n\t                                        template: webix.bind(this._function_template, this),\n\t                                        onClick: {\n\t                                            \"webix_pivot_link\": webix.bind(this._function_selector, this),\n\t                                            \"webix_pivot_plus\": webix.bind(this._function_add, this),\n\t                                            \"webix_pivot_minus\": webix.bind(this._function_remove, this)\n\t                                        },\n\t                                        on: {\n\t                                            onBeforeDrop: webix.bind(this._copy_values_field, this),\n\t                                            onBeforeDropOut: webix.bind(this._check_values_drag, this)\n\t                                        }\n\t                                    }]\n\t                                }] }]\n\t\n\t                        }]\n\t\n\t                    }]\n\t                }]\n\t\n\t            }\n\t        };\n\t    },\n\t    _popup_templates: {\n\t        popupHeaders: function popupHeaders(obj) {\n\t            return webix.i18n.pivot[obj.value];\n\t        },\n\t        popupIconHeaders: function popupIconHeaders(obj) {\n\t            if (obj.icon) return \"<span class='webix_pivot_header_icon webix_icon fa-\" + obj.icon + \"'></span>\" + webix.i18n.pivot[obj.value];else return \"<span class='webix_pivot_header_icon'>\" + obj.iconContent + \"</span>\" + webix.i18n.pivot[obj.value];\n\t        }\n\t    },\n\t    _check_values_drag: function _check_values_drag(ctx) {\n\t        var from = ctx.from,\n\t            to = ctx.to;\n\t        if (to != from) {\n\t            var id = ctx.source[0];\n\t\n\t            if (from == this.$$(\"values\") && to != this.$$(\"filters\")) {\n\t                if (this.$$(\"fields\").getItem(id)) this.$$(\"fields\").remove(id);\n\t            } else if (to != this.$$(\"values\")) {\n\t                var found = false;\n\t                if (from == this.$$(\"filters\")) {\n\t                    var name = from.getItem(id).name;\n\t                    this.$$(\"values\").data.each(function (item) {\n\t                        if (item.name == name) {\n\t                            id = found = item.id;\n\t                        }\n\t                    });\n\t                }\n\t\n\t                if (found || from == this.$$(\"fields\") && to != this.$$(\"filters\")) {\n\t                    if (this.$$(\"values\").getItem(id)) this.$$(\"values\").remove(id);\n\t                }\n\t            }\n\t        }\n\t    },\n\t    _copy_values_field: function _copy_values_field(ctx) {\n\t        if (ctx.to && ctx.from != ctx.to) {\n\t            var id = ctx.source;\n\t            var item = ctx.from.getItem(id);\n\t            if (ctx.from == this.$$(\"fields\")) {\n\t                if (ctx.to.getItem(id)) {\n\t                    this._function_add({}, id);\n\t                } else {\n\t                    ctx.to.add(webix.copy(item), ctx.index);\n\t                }\n\t                return false;\n\t            } else {\n\t                if (!this.$$(\"fields\").getItem(id)) this.$$(\"fields\").add(webix.copy(item));\n\t            }\n\t        }\n\t        return true;\n\t    },\n\t    _copy_filter_field: function _copy_filter_field(ctx) {\n\t        if (ctx.from != ctx.to) {\n\t            var item = webix.copy(ctx.from.getItem(ctx.start));\n\t            var name = item.name;\n\t            delete item.id;\n\t            var found = false;\n\t            this.$$(\"filters\").data.each(function (field) {\n\t                if (field.name == name) {\n\t                    found = true;\n\t                }\n\t            });\n\t            if (!found) ctx.to.add(item);\n\t            return false;\n\t        }\n\t        return false;\n\t    },\n\t    _check_filter_drag: function _check_filter_drag(ctx) {\n\t        if (ctx.from && ctx.to && ctx.from != ctx.to) {\n\t            var lists = [\"fields\", \"rows\", \"columns\"];\n\t            var name = ctx.from.getItem(ctx.start).name;\n\t            for (var i = 0; i < lists.length; i++) {\n\t                var sameItem = null;\n\t                this.$$(lists[i]).data.each(function (item) {\n\t                    if (item.name == name) {\n\t                        sameItem = item;\n\t                    }\n\t                });\n\t                if (sameItem) this.$$(lists[i]).remove(sameItem.id);\n\t            }\n\t            this._check_values_drag(ctx);\n\t        }\n\t        return true;\n\t    },\n\t    _after_init: function _after_init() {\n\t        this.attachEvent(\"onItemClick\", function (id) {\n\t            var innerId = this.innerId(id);\n\t            if (innerId == \"cancel\" || innerId == \"apply\") {\n\t                //transform button clicks to events\n\t                var structure = this.getStructure();\n\t\n\t                if (webix.$$(this.config.pivot).callEvent(\"onBefore\" + innerId, [structure])) {\n\t                    this.callEvent(\"on\" + innerId, [structure]);\n\t                    this.hide();\n\t                }\n\t            }\n\t        });\n\t    },\n\t    _function_template: function _function_template(obj) {\n\t        obj.operation = obj.operation || [\"sum\"];\n\t        if (!webix.isArray(obj.operation)) obj.operation = [obj.operation];\n\t\n\t        var ops = [];\n\t        var locale = webix.$$(this.config.pivot)._apply_locale;\n\t        for (var i = 0; i < obj.operation.length; i++) {\n\t            var op = \"<span class='webix_pivot_link' webix_operation='\" + i + \"'>\";\n\t            op += \"<span>\" + obj.text + \"</span>\";\n\t            op += \"<span class='webix_link_selection'>\" + locale(obj.operation[i]) + \"</span>\";\n\t            op += \"<span class='webix_pivot_minus webix_icon fa-times'></span>\";\n\t            op += \"</span>\";\n\t            ops.push(op);\n\t        }\n\t\n\t        return ops.join(\" \");\n\t    },\n\t\n\t    _function_selector: function _function_selector(e, id) {\n\t        var func_selector = {\n\t            view: \"webix_pivot_popup\", autofit: true,\n\t            width: 150,\n\t            data: this.config.operations || []\n\t        };\n\t        var p = webix.ui(func_selector);\n\t        p.show(e);\n\t        p.attachEvent(\"onHide\", webix.bind(function () {\n\t            var index = webix.html.locate(e, \"webix_operation\");\n\t            var sel = p.getSelected();\n\t            if (sel !== null) {\n\t                this.$$(\"values\").getItem(id).operation[index] = sel.name;\n\t                this.$$(\"values\").updateItem(id);\n\t            }\n\t\n\t            p.close();\n\t        }, this));\n\t    },\n\t\n\t    _function_add: function _function_add(e, id) {\n\t        var item = this.$$(\"values\").getItem(id);\n\t        item.operation.push(\"sum\");\n\t        this.$$(\"values\").updateItem(id);\n\t\n\t        webix.delay(function () {\n\t            var index = item.operation.length - 1;\n\t            var els = this.$$(\"values\").getItemNode(id).childNodes;\n\t            var el = null;\n\t            for (var i = 0; i < els.length; i++) {\n\t                el = els[i];\n\t                if (!el.getAttribute) continue;\n\t                var op = el.getAttribute(\"webix_operation\");\n\t                if (!webix.isUndefined(op) && op == index) break;\n\t            }\n\t            if (el !== null) this._function_selector(el, id);\n\t        }, this);\n\t    },\n\t    _function_remove: function _function_remove(e, id) {\n\t        var index = webix.html.locate(e, \"webix_operation\");\n\t        var item = this.$$(\"values\").getItem(id);\n\t        if (item.operation.length > 1) {\n\t            item.operation.splice(index, 1);\n\t            this.$$(\"values\").updateItem(id);\n\t        } else {\n\t            this.$$(\"values\").remove(id);\n\t            //this.$$(\"values\").move(id, null, this.$$(\"fields\"));\n\t        }\n\t        return false;\n\t    },\n\t\n\t    _filter_selector: function _filter_selector(e, id) {\n\t        var locale = webix.$$(this.config.pivot)._apply_locale;\n\t        var selector = {\n\t            view: \"webix_pivot_popup\", autofit: true,\n\t            height: 150, width: 150,\n\t            data: [{ name: \"datepicker\", title: locale(\"date\") }, { name: \"multiselect\", title: locale(\"multiselect\") }, { name: \"select\", title: locale(\"select\") }, { name: \"text\", title: locale(\"text\") }]\n\t\n\t        };\n\t        var p = webix.ui(selector);\n\t        p.show(e);\n\t        p.attachEvent(\"onHide\", webix.bind(function () {\n\t            var sel = p.getSelected();\n\t            if (sel !== null) {\n\t                var item = this.$$('filters').getItem(id);\n\t                item.type = sel.name;\n\t                this.$$('filters').updateItem(id);\n\t            }\n\t\n\t            p.close();\n\t        }, this));\n\t    },\n\t\n\t    data_setter: function data_setter(value) {\n\t        this.$$(\"fields\").clearAll();\n\t        this.$$(\"fields\").parse(value.fields);\n\t        this.$$(\"fields\").filter(function (item) {\n\t            return item.name != \"id\";\n\t        });\n\t\n\t        this.$$(\"filters\").clearAll();\n\t        this.$$(\"filters\").parse(value.filters);\n\t\n\t        this.$$(\"columns\").clearAll();\n\t        this.$$(\"columns\").parse(value.columns);\n\t\n\t        this.$$(\"rows\").clearAll();\n\t        this.$$(\"rows\").parse(value.rows);\n\t\n\t        this.$$(\"values\").clearAll();\n\t        this.$$(\"values\").parse(value.values);\n\t    },\n\t    setStructure: function setStructure(config) {\n\t        this.define(\"structure\", config);\n\t        this.render();\n\t    },\n\t    getStructure: function getStructure() {\n\t        var structure = { rows: [], columns: [], values: [], filters: [] };\n\t\n\t        var rows = this.$$(\"rows\");\n\t        rows.data.each(function (obj) {\n\t            structure.rows.push(obj.name);\n\t        });\n\t\n\t        var columns = this.$$(\"columns\");\n\t        columns.data.each(function (obj) {\n\t            structure.columns.push(obj.name);\n\t        });\n\t\n\t        var values = this.$$(\"values\");\n\t        values.data.each(function (obj) {\n\t            structure.values.push(obj);\n\t        });\n\t\n\t        var filters = this.$$(\"filters\");\n\t        filters.data.each(function (obj) {\n\t            structure.filters.push(obj);\n\t        });\n\t\n\t        return structure;\n\t    }\n\t}, webix.ui.window, webix.IdSpace);\n\n/***/ },\n/* 11 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj; };\n\t\n\tvar _filters = __webpack_require__(8);\n\t\n\tvar flt = _interopRequireWildcard(_filters);\n\t\n\t__webpack_require__(12);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj[\"default\"] = obj; return newObj; } }\n\t\n\twebix.protoUI({\n\t\tname: \"pivot-chart\",\n\t\tversion: \"{{version}}\",\n\t\tdefaults: {\n\t\t\tfieldMap: {},\n\t\t\trows: [],\n\t\t\tfilterLabelAlign: \"right\",\n\t\t\tfilterWidth: 300,\n\t\t\tfilterMinWidth: 180,\n\t\t\teditButtonWidth: 110,\n\t\t\tfilterLabelWidth: 100,\n\t\t\tchartType: \"bar\",\n\t\t\tcolor: \"#36abee\",\n\t\t\tchart: {},\n\t\t\tsingleLegendItem: 1,\n\t\t\tpalette: [[\"#e33fc7\", \"#a244ea\", \"#476cee\", \"#36abee\", \"#58dccd\", \"#a7ee70\"], [\"#d3ee36\", \"#eed236\", \"#ee9336\", \"#ee4339\", \"#595959\", \"#b85981\"], [\"#c670b8\", \"#9984ce\", \"#b9b9e2\", \"#b0cdfa\", \"#a0e4eb\", \"#7faf1b\"], [\"#b4d9a4\", \"#f2f79a\", \"#ffaa7d\", \"#d6806f\", \"#939393\", \"#d9b0d1\"], [\"#780e3b\", \"#684da9\", \"#242464\", \"#205793\", \"#5199a4\", \"#065c27\"], [\"#54b15a\", \"#ecf125\", \"#c65000\", \"#990001\", \"#363636\", \"#800f3e\"]]\n\t\t},\n\t\ttemplates: {\n\t\t\tgroupNameToStr: function groupNameToStr(name, operation) {\n\t\t\t\treturn name + \"_\" + operation;\n\t\t\t},\n\t\t\tgroupNameToObject: function groupNameToObject(name) {\n\t\t\t\tvar arr = name.split(\"_\");\n\t\t\t\treturn { name: arr[0], operation: arr[1] };\n\t\t\t},\n\t\t\tseriesTitle: function seriesTitle(data, i) {\n\t\t\t\tvar name = this.config.fieldMap[data.name] || this._capitalize(data.name);\n\t\t\t\tvar operation = webix.isArray(data.operation) ? data.operation[i] : data.operation;\n\t\t\t\treturn name + \" ( \" + (webix.i18n.pivot[operation] || operation) + \")\";\n\t\t\t}\n\t\t},\n\t\ttemplates_setter: function templates_setter(obj) {\n\t\t\tif ((typeof obj === \"undefined\" ? \"undefined\" : _typeof(obj)) == \"object\") webix.extend(this.templates, obj);\n\t\t},\n\t\tchartMap: {\n\t\t\tbar: function bar(color) {\n\t\t\t\treturn {\n\t\t\t\t\tborder: 0,\n\t\t\t\t\talpha: 1,\n\t\t\t\t\tradius: 0,\n\t\t\t\t\tcolor: color\n\t\t\t\t};\n\t\t\t},\n\t\t\tline: function line(color) {\n\t\t\t\treturn {\n\t\t\t\t\talpha: 1,\n\t\t\t\t\titem: {\n\t\t\t\t\t\tborderColor: color,\n\t\t\t\t\t\tcolor: color\n\t\t\t\t\t},\n\t\t\t\t\tline: {\n\t\t\t\t\t\tcolor: color,\n\t\t\t\t\t\twidth: 2\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t},\n\t\t\tradar: function radar(color) {\n\t\t\t\treturn {\n\t\t\t\t\talpha: 1,\n\t\t\t\t\tfill: false,\n\t\t\t\t\tdisableItems: true,\n\t\t\t\t\titem: {\n\t\t\t\t\t\tborderColor: color,\n\t\t\t\t\t\tcolor: color\n\t\t\t\t\t},\n\t\t\t\t\tline: {\n\t\t\t\t\t\tcolor: color,\n\t\t\t\t\t\twidth: 2\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t}\n\t\t},\n\t\tchartMap_setter: function chartMap_setter(obj) {\n\t\t\tif ((typeof obj === \"undefined\" ? \"undefined\" : _typeof(obj)) == \"object\") webix.extend(this.chartMap, obj, true);\n\t\t},\n\t\t$init: function $init(config) {\n\t\t\tif (!config.structure) config.structure = {};\n\t\t\twebix.extend(config.structure, { groupBy: \"\", values: [], filters: [] });\n\t\n\t\t\tthis.$view.className += \" webix_pivot_chart\";\n\t\t\twebix.extend(config, { editButtonWidth: this.defaults.editButtonWidth });\n\t\t\twebix.extend(config, this.getUI(config));\n\t\n\t\t\tthis.$ready.push(webix.bind(function () {\n\t\t\t\twebix.delay(this.render, this); // delay needed for correct legend rendering\n\t\t\t}, this));\n\t\t\tthis.data.attachEvent(\"onStoreUpdated\", webix.bind(function () {\n\t\t\t\t// call render if pivot is initialized\n\t\t\t\tif (this.$$(\"chart\")) this.render(this, arguments);\n\t\t\t}, this));\n\t\t},\n\t\tgetUI: function getUI(config) {\n\t\t\tvar cols = [];\n\t\n\t\t\tcols.push({ id: \"filters\", hidden: true, cols: [] });\n\t\t\tif (!config.readonly) {\n\t\t\t\tcols.push({}, {\n\t\t\t\t\tid: \"edit\", view: \"icon\", type: \"iconButton\", align: \"right\", icon: \"pencil-square-o\", inputWidth: config.editButtonWidth,\n\t\t\t\t\ttooltip: this._applyLocale(\"settings\"), click: webix.bind(this.configure, this)\n\t\t\t\t});\n\t\t\t}\n\t\t\tvar header = {\n\t\t\t\tpaddingY: 10,\n\t\t\t\tpaddingX: 5,\n\t\t\t\tmargin: 10,\n\t\t\t\tmaxHeight: 5,\n\t\t\t\tid: \"toolbar\",\n\t\t\t\tcols: cols\n\t\t\t};\n\t\n\t\t\tvar chart = { id: \"bodyLayout\", type: \"line\", margin: 10, cols: [{ id: \"chart\", view: \"chart\" }] };\n\t\t\treturn { type: \"clean\", rows: [header, chart] };\n\t\t},\n\t\tconfigure: function configure() {\n\t\t\tif (!this.pivotPopup) {\n\t\t\t\tvar config = { view: \"webix_pivot_chart_config\", operations: [], pivot: this.config.id };\n\t\t\t\twebix.extend(config, this.config.popup || {});\n\t\n\t\t\t\tthis.pivotPopup = webix.ui(config);\n\t\t\t\tthis.callEvent(\"onPopup\", [this.pivotPopup]);\n\t\t\t\tthis.pivotPopup.attachEvent(\"onApply\", webix.bind(function (structure) {\n\t\t\t\t\tthis.config.chartType = this.pivotPopup.$$(\"chartType\") ? this.pivotPopup.$$(\"chartType\").getValue() : \"bar\";\n\t\t\t\t\tthis.config.chart.scale = this.pivotPopup.$$(\"logScale\").getValue() ? \"logarithmic\" : \"linear\";\n\t\t\t\t\twebix.extend(this.config.structure, structure, true);\n\t\t\t\t\tthis.render();\n\t\t\t\t}, this));\n\t\t\t}\n\t\n\t\t\tvar functions = [];\n\t\t\tfor (var i in this.operations) {\n\t\t\t\tfunctions.push({ name: i, title: this._applyLocale(i) });\n\t\t\t}this.pivotPopup._valueLength = this._valueLength;\n\t\t\tthis.pivotPopup.define(\"operations\", functions);\n\t\t\tvar pos = webix.html.offset(this.$$(\"chart\").getNode());\n\t\t\tthis.pivotPopup.setPosition(pos.x + 10, pos.y + 10);\n\t\t\tthis.pivotPopup.define(\"data\", this.getFields());\n\t\t\tthis.pivotPopup._valueFields = this.pivotPopup.show();\n\t\t},\n\t\trender: function render(mode) {\n\t\t\t// render filters\n\t\t\tvar filters = this._processFilters();\n\t\t\tif (filters.length) {\n\t\n\t\t\t\tthis.$$(\"filters\").show();\n\t\t\t\tthis.$$(\"filters\").define(\"cols\", filters);\n\t\t\t\tthis._setFilterEvents();\n\t\t\t} else {\n\t\t\t\tthis.$$(\"filters\").hide();\n\t\t\t}\n\t\t\tthis._initFilters();\n\t\n\t\t\tthis._setChartConfig();\n\t\n\t\t\tthis._loadFilteredData();\n\t\t},\n\t\t_setChartConfig: function _setChartConfig() {\n\t\t\tvar config = this.config;\n\t\t\tvar values = config.structure.values;\n\t\n\t\t\tfor (var i = 0; i < values.length; i++) {\n\t\t\t\tvalues[i].operation = values[i].operation || [\"sum\"];\n\t\t\t\tif (!webix.isArray(values[i].operation)) values[i].operation = [values[i].operation];\n\t\t\t}\n\t\n\t\t\tvar chartType = this.config.chartType || \"bar\";\n\t\t\tvar mapConfig = this.chartMap[chartType];\n\t\n\t\t\tvar chart = {\n\t\n\t\t\t\t\"type\": mapConfig && mapConfig(\"\").type ? mapConfig(\"\").type : chartType,\n\t\t\t\t\"xAxis\": webix.extend({ template: \"#id#\" }, config.chart.xAxis || {}, true),\n\t\t\t\t\"yAxis\": webix.extend({}, config.chart.yAxis || {})\n\t\t\t};\n\t\n\t\t\twebix.extend(chart, config.chart);\n\t\t\tif (!chart.padding) {\n\t\t\t\tchart.padding = { top: 17 };\n\t\t\t}\n\t\n\t\t\tvar result = this._getSeries();\n\t\n\t\t\tchart.series = result.series;\n\t\n\t\t\tchart.legend = false;\n\t\t\tif (config.singleLegendItem || this._valueLength > 1) {\n\t\t\t\tchart.legend = result.legend;\n\t\t\t}\n\t\n\t\t\tchart.scheme = {\n\t\t\t\t$group: this._pivot_group,\n\t\t\t\t$sort: {\n\t\t\t\t\tby: \"id\"\n\t\t\t\t}\n\t\t\t};\n\t\t\tthis.$$(\"chart\").removeAllSeries();\n\t\t\tfor (var c in chart) {\n\t\t\t\tthis.$$(\"chart\").define(c, chart[c]);\n\t\t\t}\n\t\t},\n\t\t_applyLocale: function _applyLocale(value) {\n\t\t\treturn webix.i18n.pivot[value] || value;\n\t\t},\n\t\t_capitalize: function _capitalize(value) {\n\t\t\treturn value.charAt(0).toUpperCase() + value.slice(1);\n\t\t},\n\t\t_applyMap: function _applyMap(value, capitalize) {\n\t\t\treturn this.config.fieldMap[value] || (capitalize ? this._capitalize(value) : value);\n\t\t},\n\t\t_processFilters: function _processFilters() {\n\t\t\tvar filters = this.config.structure.filters || [];\n\t\n\t\t\tvar items = [];\n\t\t\tfor (var i = 0; i < filters.length; i++) {\n\t\t\t\tvar f = filters[i];\n\t\t\t\tvar item = { value: f.value, label: this._applyMap(f.name, true), field: f.name, view: f.type, stringResult: true,\n\t\t\t\t\tlabelAlign: this.config.filterLabelAlign, labelWidth: this.config.filterLabelWidth, minWidth: this.config.filterMinWidth, maxWidth: this.config.filterWidth };\n\t\t\t\tif (f.type == \"select\" || f.type == \"multiselect\") {\n\t\t\t\t\titem.options = this._distinctValues(f.name);\n\t\t\t\t\tif (f.type == \"multiselect\") item.options.shift();\n\t\t\t\t}\n\t\n\t\t\t\titems.push(item);\n\t\t\t}\n\t\t\treturn items;\n\t\t},\n\t\t_distinctValues: function _distinctValues(field) {\n\t\t\tvar values = [{ value: \"\", id: \"\" }];\n\t\t\tvar data = this.data.pull;\n\t\t\tvar hash = {};\n\t\t\tfor (var obj in data) {\n\t\t\t\tvar value = data[obj][field];\n\t\t\t\tif (!webix.isUndefined(value)) {\n\t\t\t\t\tif (!hash[value]) {\n\t\t\t\t\t\tvalues.push({ value: value, id: value });\n\t\t\t\t\t\thash[value] = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tvalues.sort(function (a, b) {\n\t\t\t\tvar val1 = a.value;\n\t\t\t\tvar val2 = b.value;\n\t\t\t\tif (!val2) return 1;\n\t\t\t\tif (!val1) return -1;\n\t\n\t\t\t\tval1 = val1.toString().toLowerCase();val2 = val2.toString().toLowerCase();\n\t\t\t\treturn val1 > val2 ? 1 : val1 < val2 ? -1 : 0;\n\t\t\t});\n\t\t\treturn values;\n\t\t},\n\t\t_loadFilteredData: function _loadFilteredData() {\n\t\t\tthis._initFilters();\n\t\t\tthis.data.silent(function () {\n\t\t\t\tthis.data.filter(webix.bind(this._filterItem, this));\n\t\t\t}, this);\n\t\t\tthis.$$(\"chart\").data.silent(function () {\n\t\t\t\tthis.$$(\"chart\").clearAll();\n\t\t\t}, this);\n\t\t\tthis.$$(\"chart\").parse(this.data.getRange());\n\t\t},\n\t\t_setFilterEvents: function _setFilterEvents() {\n\t\t\tvar filters = this.$$(\"filters\");\n\t\t\tfilters.reconstruct();\n\t\t\tvar children = filters.getChildViews();\n\t\t\tvar pivot = this;\n\t\n\t\t\tfor (var i = 0; i < children.length; i++) {\n\t\t\t\tvar el = children[i];\n\t\t\t\tif (el.name == \"select\" || el.name == \"multiselect\" || el.name == \"datepicker\") el.attachEvent(\"onChange\", function (newvalue) {\n\t\t\t\t\tpivot._setFilterValue(this.config.field, newvalue);\n\t\t\t\t});else if (!webix.isUndefined(el.getValue)) {\n\t\t\t\t\tel.attachEvent(\"onTimedKeyPress\", function () {\n\t\t\t\t\t\tpivot._setFilterValue(this.config.field, this.getValue());\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\n\t\t_setFilterValue: function _setFilterValue(field, value) {\n\t\t\tvar filters = this.config.structure.filters;\n\t\t\tfor (var i = 0; i < filters.length; i++) {\n\t\t\t\tif (filters[i].name == field) {\n\t\t\t\t\tfilters[i].value = value;\n\t\t\t\t\tthis._loadFilteredData();\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}return false;\n\t\t},\n\t\n\t\tgroupNameToStr: function groupNameToStr(obj) {\n\t\t\treturn obj.name + \"_\" + obj.operation;\n\t\t},\n\t\tgroupNameToObject: function groupNameToObject(name) {\n\t\t\tvar arr = name.split(\"_\");\n\t\t\treturn { name: arr[0], operation: arr[1] };\n\t\t},\n\t\t_getSeries: function _getSeries() {\n\t\t\tvar i,\n\t\t\t    j,\n\t\t\t    legend,\n\t\t\t    map = {},\n\t\t\t    name,\n\t\t\t    legendTitle,\n\t\t\t    series = [],\n\t\t\t    values = this.config.structure.values;\n\t\n\t\t\t// legend definition\n\t\t\tlegend = {\n\t\t\t\tvalign: \"middle\",\n\t\t\t\talign: \"right\",\n\t\t\t\twidth: 140,\n\t\t\t\tlayout: \"y\"\n\t\t\t};\n\t\t\twebix.extend(legend, this.config.chart.legend || {}, true);\n\t\t\tlegend.values = [];\n\t\t\tif (!legend.marker) legend.marker = {};\n\t\t\tlegend.marker.type = this.config.chartType == \"line\" ? \"item\" : \"s\";\n\t\n\t\t\tthis.series_names = [];\n\t\t\tthis._valueLength = 0;\n\t\n\t\t\tfor (i = 0; i < values.length; i++) {\n\t\t\t\tif (!webix.isArray(values[i].operation)) {\n\t\t\t\t\tvalues[i].operation = [values[i].operation];\n\t\t\t\t}\n\t\t\t\tif (!webix.isArray(values[i].color)) {\n\t\n\t\t\t\t\tvalues[i].color = [values[i].color || this._getColor(this._valueLength)];\n\t\t\t\t}\n\t\t\t\tfor (j = 0; j < values[i].operation.length; j++) {\n\t\n\t\t\t\t\tname = this.templates.groupNameToStr(values[i].name, values[i].operation[j]);\n\t\t\t\t\tthis.series_names.push(name);\n\t\t\t\t\tif (!values[i].color[j]) values[i].color[j] = this._getColor(this._valueLength);\n\t\t\t\t\tvar color = values[i].color[j];\n\t\t\t\t\tvar sConfig = this.chartMap[this.config.chartType](color) || {};\n\t\t\t\t\tsConfig.value = \"#\" + name + \"#\";\n\t\t\t\t\tsConfig.tooltip = {\n\t\t\t\t\t\ttemplate: webix.bind(function (obj) {\n\t\t\t\t\t\t\treturn obj[this].toFixed(3);\n\t\t\t\t\t\t}, name)\n\t\t\t\t\t};\n\t\n\t\t\t\t\tseries.push(sConfig);\n\t\t\t\t\tlegendTitle = this.templates.seriesTitle.call(this, values[i], j);\n\t\t\t\t\tlegend.values.push({\n\t\t\t\t\t\ttext: legendTitle,\n\t\t\t\t\t\tcolor: color\n\t\t\t\t\t});\n\t\t\t\t\tmap[name] = [values[i].name, values[i].operation[j]];\n\t\t\t\t\tthis._valueLength++;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._pivot_group = {};\n\t\t\tif (values.length) this._pivot_group = webix.copy({\n\t\t\t\tby: this.config.structure.groupBy,\n\t\t\t\tmap: map\n\t\t\t});\n\t\n\t\t\treturn { series: series, legend: legend };\n\t\t},\n\t\t_getColor: function _getColor(i) {\n\t\t\tvar palette = this.config.palette;\n\t\t\tvar rowIndex = i / palette[0].length;\n\t\t\trowIndex = rowIndex > palette.length ? 0 : parseInt(rowIndex, 10);\n\t\t\tvar columnIndex = i % palette[0].length;\n\t\t\treturn palette[rowIndex][columnIndex];\n\t\t},\n\t\t_processLegend: function _processLegend() {\n\t\t\tvar i,\n\t\t\t    legend,\n\t\t\t    name,\n\t\t\t    values = this.config.structure.values;\n\t\n\t\t\tlegend = {\n\t\t\t\tvalign: \"middle\",\n\t\t\t\talign: \"right\",\n\t\t\t\twidth: 140,\n\t\t\t\tlayout: \"y\"\n\t\t\t};\n\t\n\t\t\twebix.extend(legend, this.config.chart.legend || {}, true);\n\t\n\t\t\tlegend.values = [];\n\t\t\tif (!legend.marker) legend.marker = {};\n\t\t\tlegend.marker.type = this.config.chartType == \"line\" ? \"item\" : \"s\";\n\t\n\t\t\tfor (i = 0; i < values.length; i++) {\n\t\t\t\tname = this.templates.seriesTitle.call(this, values[i]);\n\t\n\t\t\t\tlegend.values.push({\n\t\t\t\t\ttext: name,\n\t\t\t\t\tcolor: values[i].color\n\t\t\t\t});\n\t\t\t}\n\t\n\t\t\treturn legend;\n\t\t},\n\t\toperations: { sum: 1, count: 1, max: 1, min: 1 },\n\t\taddGroupMethod: function addGroupMethod(name, method) {\n\t\t\tthis.operations[name] = 1;\n\t\t\tif (method) webix.GroupMethods[name] = method;\n\t\t},\n\t\tremoveGroupMethod: function removeGroupMethod(name) {\n\t\t\tdelete this.operations[name];\n\t\t},\n\t\tgroupMethods_setter: function groupMethods_setter(obj) {\n\t\t\tfor (var a in obj) {\n\t\t\t\tif (obj.hasOwnProperty(a)) this.addGroupMethod(a, obj[a]);\n\t\t\t}\n\t\t},\n\t\t// fields for edit popup\n\t\tgetFields: function getFields() {\n\t\n\t\t\tvar i,\n\t\t\t    fields = [],\n\t\t\t    fields_hash = {};\n\t\t\tfor (i = 0; i < Math.min(this.data.count() || 5); i++) {\n\t\t\t\tvar item = this.data.getItem(this.data.getIdByIndex(i));\n\t\t\t\tfor (var f in item) {\n\t\t\t\t\tif (!fields_hash[f]) {\n\t\t\t\t\t\tfields.push(f);\n\t\t\t\t\t\tfields_hash[f] = webix.uid();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tvar str = this.config.structure;\n\t\t\tvar result = { fields: [], groupBy: [], values: [], filters: [] };\n\t\n\t\t\tvar field = _typeof(str.groupBy) == \"object\" ? str.groupBy[0] : str.groupBy;\n\t\t\tif (!webix.isUndefined(fields_hash[field])) {\n\t\t\t\tresult.groupBy.push({ name: field, text: this._applyMap(field), id: fields_hash[field] });\n\t\t\t\tdelete fields_hash[field];\n\t\t\t}\n\t\n\t\t\tvar valueNameHash = {};\n\t\t\tvar text;\n\t\t\tfor (i = 0; i < str.values.length; i++) {\n\t\t\t\tfield = str.values[i];\n\t\t\t\tif (!webix.isUndefined(fields_hash[field.name])) {\n\t\t\t\t\ttext = this._applyMap(field.name);\n\t\t\t\t\tif (webix.isUndefined(valueNameHash[field.name])) {\n\t\t\t\t\t\tvalueNameHash[field.name] = result.values.length;\n\t\t\t\t\t\tresult.values.push({ name: field.name, text: text, operation: field.operation, color: field.color || [this._getColor(i)], id: fields_hash[field.name] });\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar value = result.values[valueNameHash[field.name]];\n\t\t\t\t\t\tvalue.operation = value.operation.concat(field.operation);\n\t\t\t\t\t\tvalue.color = value.color.concat(field.color || [this._getColor(i)]);\n\t\t\t\t\t}\n\t\n\t\t\t\t\t//delete fields_hash[field.name];   // values allows to drag a field multiple times\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tfor (i = 0; i < (str.filters || []).length; i++) {\n\t\t\t\tfield = str.filters[i];\n\t\t\t\tif (!webix.isUndefined(fields_hash[field.name])) {\n\t\t\t\t\ttext = this._applyMap(field.name);\n\t\t\t\t\tresult.filters.push({ name: field.name, text: text, type: field.type, value: field.value, id: fields_hash[field] });\n\t\t\t\t\tdelete fields_hash[field.name];\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tfor (i = 0; i < fields.length; i++) {\n\t\t\t\tfield = fields[i];\n\t\t\t\tif (!webix.isUndefined(fields_hash[field])) result.fields.push({ name: field, text: this._applyMap(field), id: fields_hash[field] });\n\t\t\t}\n\t\t\treturn result;\n\t\t},\n\t\t_initFilters: function _initFilters() {\n\t\t\tvar filters = this.config.structure.filters || [];\n\t\t\tflt.init(filters);\n\t\t},\n\t\t_filterItem: function _filterItem(item) {\n\t\t\tvar filters = this.config.structure.filters || [];\n\t\t\treturn flt.filterItem(filters, item);\n\t\t},\n\t\tgetStructure: function getStructure() {\n\t\t\treturn this.config.structure;\n\t\t},\n\t\tgetConfigWindow: function getConfigWindow() {\n\t\t\treturn this._config_popup;\n\t\t}\n\t}, webix.IdSpace, webix.ui.layout, webix.DataLoader, webix.EventSystem, webix.Settings);\n\n/***/ },\n/* 12 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\twebix.protoUI({\n\t    name: \"webix_pivot_chart_config\",\n\t\n\t    $init: function $init(config) {\n\t        this.$view.className += \" webix_pivot_chart_popup\";\n\t        webix.extend(config, this.defaults);\n\t        webix.extend(config, this._getUI(config));\n\t        this.$ready.push(this._afterInit);\n\t    },\n\t    defaults: {\n\t        padding: 8,\n\t        height: 500,\n\t        width: 650,\n\t        head: false,\n\t        modal: true,\n\t        move: true,\n\t        chartTypeLabelWidth: 80,\n\t        chartTypeWidth: 250,\n\t        cancelButtonWidth: 100,\n\t        applyButtonWidth: 100,\n\t        logScaleLabelWidth: 125,\n\t        fieldsColumnWidth: 280\n\t    },\n\t    _getUI: function _getUI(config) {\n\t        var chartTypes = [];\n\t        var pivot = webix.$$(config.pivot);\n\t        var types = pivot.chartMap;\n\t        for (var type in types) {\n\t            chartTypes.push({ id: type, value: pivot._applyLocale(type) });\n\t        }\n\t        return {\n\t            head: {\n\t                view: \"toolbar\",\n\t                cols: [{ id: \"config_title\", view: \"label\", label: webix.i18n.pivot.windowTitle }, { view: \"button\", id: \"cancel\", label: pivot._applyLocale(\"cancel\"), width: config.cancelButtonWidth }, { view: \"button\", id: \"apply\", type: \"form\", css: \"webix_pivot_apply\", label: pivot._applyLocale(\"apply\"), width: config.applyButtonWidth }]\n\t            },\n\t            body: {\n\t                type: \"space\",\n\t                rows: [\n\t                /*{\n\t                 type: \"space\",\n\t                 cols:[\n\t                 {\tcss:\"webix_pivot_transparent\", borderless: true, template: \"<div class='webix_pivot_fields_msg'>\"+webix.i18n.pivot.windowMessage||\"\"+\"</div>\", height: 25}\n\t                 ]\n\t                  },*/\n\t                {\n\t\n\t                    type: \"wide\",\n\t                    cols: [{\n\t                        width: config.fieldsColumnWidth,\n\t                        rows: [{ id: \"fieldsHeader\", css: \"webix_pivot_header_fields\", template: \"<div class='webix_pivot_fields_msg'>\" + webix.i18n.pivot.windowMessage || \"\" + \"</div>\", height: 40 }, { id: \"fields\", view: \"list\", type: { height: \"auto\" }, drag: true, template: \"<span class='webix_pivot_list_marker'></span>#text#\",\n\t                            on: {\n\t                                onBeforeDrop: webix.bind(this._skipValueDrag, this),\n\t                                onBeforeDropOut: webix.bind(this._checkValueDrag, this),\n\t\n\t                                onBeforeDrag: webix.bind(this._hidePopups, this)\n\t                            }\n\t                        }]\n\t                    },\n\t                    //\t{ view: \"resizer\", width: 4},\n\t                    {\n\t\n\t                        type: \"wide\",\n\t                        rows: [{\n\t                            rows: [{ id: \"filtersHeader\", data: { value: \"filters\", icon: \"filter\" }, template: this._popup_templates.popupIconHeaders, css: \"webix_pivot_popup_title\", height: 40 }, { id: \"filters\", view: \"list\", scroll: true, gravity: 2, drag: true, css: \"webix_pivot_values\",\n\t                                template: function template(obj) {\n\t                                    obj.type = obj.type || \"select\";\n\t                                    return \"<div class='webix_pivot_link'>\" + obj.text + \"<div class='webix_link_selection filter'>\" + pivot._applyLocale(obj.type) + \"</div></div> \";\n\t                                },\n\t                                type: {\n\t                                    height: 35\n\t                                },\n\t                                onClick: { \"webix_link_selection\": webix.bind(this._filterSelector, this) },\n\t                                on: {\n\t                                    onBeforeDrag: webix.bind(this._hidePopups, this)\n\t                                }\n\t\n\t                            }]\n\t                        }, {\n\t                            rows: [{ id: \"valuesHeader\", data: { value: \"values\", icon: \"bar-chart\" }, template: this._popup_templates.popupIconHeaders, css: \"webix_pivot_popup_title\", height: 40 }, { id: \"values\", view: \"list\", scroll: true, gravity: 3, drag: true, css: \"webix_pivot_values\", type: { height: \"auto\" },\n\t                                template: webix.bind(this._function_template, this),\n\t                                onClick: {\n\t                                    \"webix_link_title\": webix.bind(this._function_selector, this),\n\t                                    \"webix_link_selection\": webix.bind(this._function_selector, this),\n\t                                    \"webix_color_selection\": webix.bind(this._function_color, this),\n\t                                    \"webix_pivot_minus\": webix.bind(this._function_remove, this)\n\t                                },\n\t                                on: {\n\t                                    onBeforeDrop: webix.bind(this._copyValueField, this),\n\t                                    onBeforeDropOut: webix.bind(this._checkValueDrag, this),\n\t                                    onBeforeDrag: webix.bind(this._hidePopups, this)\n\t                                }\n\t                            }]\n\t                        }, {\n\t                            rows: [{ id: \"groupHeader\", data: { value: \"groupBy\", icon: \"sitemap\" }, template: this._popup_templates.popupIconHeaders, css: \"webix_pivot_popup_title\", height: 40 }, { id: \"groupBy\", view: \"list\", yCount: 1, scroll: false, drag: true, type: { height: 35 },\n\t                                template: \"<a class='webix_pivot_link'>#text#</a> \",\n\t                                on: {\n\t                                    onBeforeDrop: webix.bind(this._changeGroupby, this),\n\t                                    onBeforeDrag: webix.bind(this._hidePopups, this)\n\t                                }\n\t                            }]\n\t                        }]\n\t                    }]\n\t                }, {\n\t                    /*paddingX: 10,\n\t                     paddingY: 5,*/\n\t                    borderless: true,\n\t                    css: \"webix_pivot_footer\",\n\t                    /*padding: 5,\n\t                     type: \"space\",*/\n\t                    cols: [{\n\t                        view: \"checkbox\", id: \"logScale\", value: pivot.config.chart.scale && pivot.config.chart.scale == \"logarithmic\", label: webix.i18n.pivot.logScale,\n\t                        labelWidth: config.logScaleLabelWidth, width: config.logScaleLabelWidth + 20\n\t                    }, {}, {\n\t                        view: \"select\", id: \"chartType\", value: pivot.config.chartType, label: webix.i18n.pivot.chartType, options: chartTypes,\n\t                        labelWidth: config.chartTypeLabelWidth, width: config.chartTypeWidth\n\t                    }]\n\t                }]\n\t\n\t            }\n\t        };\n\t    },\n\t    _popup_templates: {\n\t        popupHeaders: function popupHeaders(obj) {\n\t            return webix.i18n.pivot[obj.value];\n\t        },\n\t        popupIconHeaders: function popupIconHeaders(obj) {\n\t            return \"<span class='webix_pivot_header_icon webix_icon fa-\" + obj.icon + \"'></span>\" + webix.i18n.pivot[obj.value];\n\t        }\n\t    },\n\t    _hidePopups: function _hidePopups() {\n\t        webix.callEvent(\"onClick\", []);\n\t    },\n\t    _skipValueDrag: function _skipValueDrag(ctx) {\n\t        if (ctx.from == this.$$(\"values\")) {\n\t            var id = ctx.source[0];\n\t            if (this.$$(\"values\").getItem(id)) {\n\t                this.$$(\"values\").remove(id);\n\t            }\n\t            return false;\n\t        }\n\t        return true;\n\t    },\n\t    _checkValueDrag: function _checkValueDrag(ctx) {\n\t        if (ctx.to != ctx.from) {\n\t            var id = ctx.source[0];\n\t            if (ctx.from == this.$$(\"values\") && ctx.to != this.$$(\"fields\")) {\n\t                delete this.$$(\"values\").getItem(id).operation;\n\t                delete this.$$(\"values\").getItem(id).color;\n\t                if (this.$$(\"fields\").getItem(id)) this.$$(\"fields\").remove(id);\n\t            } else if (ctx.from == this.$$(\"fields\") && ctx.to != this.$$(\"values\")) {\n\t                if (this.$$(\"values\").getItem(id)) {\n\t                    this.$$(\"values\").remove(id);\n\t                }\n\t            }\n\t        }\n\t    },\n\t    _copyValueField: function _copyValueField(ctx) {\n\t        if (ctx.to && ctx.from != ctx.to) {\n\t            var id = ctx.source;\n\t            var item = ctx.from.getItem(id);\n\t\n\t            if (ctx.from == this.$$(\"fields\")) {\n\t                if (ctx.to.getItem(id)) {\n\t                    this._function_add({}, id);\n\t                    this._valueLength++;\n\t                } else {\n\t                    item = webix.copy(item);\n\t\n\t                    ctx.to.add(webix.copy(item), ctx.index);\n\t                    this._valueLength++;\n\t                }\n\t\n\t                return false;\n\t            } else if (!this.$$(\"fields\").getItem(id)) {\n\t                this.$$(\"fields\").add(webix.copy(item));\n\t            }\n\t\n\t            this._increaseColorIndex = true;\n\t        }\n\t        return true;\n\t    },\n\t    _changeGroupby: function _changeGroupby(ctx) {\n\t        if (this.$$(\"groupBy\").data.order.length) {\n\t            var id = this.$$(\"groupBy\").getFirstId();\n\t            var item = webix.copy(this.$$(\"groupBy\").getItem(id));\n\t            this.$$(\"groupBy\").remove(id);\n\t            this.$$(\"fields\").add(item);\n\t        }\n\t        return true;\n\t    },\n\t    _afterInit: function _afterInit() {\n\t        this.attachEvent(\"onItemClick\", function (id) {\n\t            if (this.$eventSource.name == \"button\") {\n\t                //transform button clicks to events\n\t                var structure = this.getStructure();\n\t\n\t                if (this.innerId(id) == \"apply\" && (!structure.values.length || !structure.groupBy)) {\n\t                    webix.alert(webix.i18n.pivot.valuesNotDefined);\n\t                } else {\n\t                    this.callEvent(\"on\" + this.innerId(id), [structure]);\n\t                    this.hide();\n\t                }\n\t            }\n\t        });\n\t    },\n\t\n\t    _function_template: function _function_template(obj) {\n\t        obj.operation = obj.operation || [\"sum\"];\n\t        if (!webix.isArray(obj.operation)) obj.operation = [obj.operation];\n\t\n\t        var ops = [];\n\t        var pivot = webix.$$(this.config.pivot);\n\t        var locale = pivot._applyLocale;\n\t\n\t        for (var i = 0; i < obj.operation.length; i++) {\n\t            if (!obj.color) obj.color = [pivot._getColor(this._valueLength)];\n\t            if (!obj.color[i]) obj.color.push(pivot._getColor(this._valueLength));\n\t            var op = \"<div class='webix_pivot_link' webix_operation='\" + i + \"'>\";\n\t            op += \"<div class='webix_color_selection'><div style='background-color:\" + locale(obj.color[i]) + \"'></div></div>\";\n\t            op += \"<div class='webix_link_title'>\" + obj.text + \"</div>\";\n\t            op += \"<div class='webix_link_selection'>\" + locale(obj.operation[i]) + \"</div>\";\n\t\n\t            op += \"<div class='webix_pivot_minus webix_icon fa-times'></div>\";\n\t            op += \"</div>\";\n\t            ops.push(op);\n\t        }\n\t        if (this._increaseColorIndex) {\n\t            this._increaseColorIndex = false;\n\t            this._valueLength++;\n\t        }\n\t        return ops.join(\" \");\n\t    },\n\t\n\t    _function_selector: function _function_selector(e, id) {\n\t        var func_selector = {\n\t            view: \"webix_pivot_popup\", autofit: true,\n\t            autoheight: true, width: 150,\n\t            data: this.config.operations || []\n\t        };\n\t        var p = webix.ui(func_selector);\n\t        p.show(e);\n\t        p.attachEvent(\"onHide\", webix.bind(function () {\n\t            var index = webix.html.locate(e, \"webix_operation\");\n\t            var sel = p.getSelected();\n\t            if (sel !== null) {\n\t                this.$$(\"values\").getItem(id).operation[index] = sel.name;\n\t                this.$$(\"values\").updateItem(id);\n\t            }\n\t\n\t            p.close();\n\t        }, this));\n\t    },\n\t    _function_color: function _function_color(e, id) {\n\t\n\t        var colorboard = {\n\t            view: \"colorboard\",\n\t            //id: \"colorboard\",\n\t            borderless: true\n\t\n\t        };\n\t        if (webix.$$(this.config.pivot).config.colorboard) {\n\t            webix.extend(colorboard, webix.$$(this.config.pivot).config.colorboard);\n\t        } else {\n\t            webix.extend(colorboard, {\n\t                width: 150,\n\t                height: 150,\n\t                palette: webix.$$(this.config.pivot).config.palette\n\t            });\n\t        }\n\t\n\t        var p = webix.ui({\n\t            view: \"popup\",\n\t            id: \"colorsPopup\",\n\t            body: colorboard\n\t        });\n\t        p.show(e);\n\t        p.getBody().attachEvent(\"onSelect\", function () {\n\t            p.hide();\n\t        });\n\t        p.attachEvent(\"onHide\", webix.bind(function () {\n\t            var index = webix.html.locate(e, \"webix_operation\");\n\t            var value = p.getBody().getValue();\n\t            if (value) {\n\t                this.$$(\"values\").getItem(id).color[index] = value;\n\t                this.$$(\"values\").updateItem(id);\n\t            }\n\t            p.close();\n\t        }, this));\n\t        return false;\n\t    },\n\t    _function_add: function _function_add(e, id) {\n\t        var item = this.$$(\"values\").getItem(id);\n\t        item.operation.push(\"sum\");\n\t        var pivot = webix.$$(this.config.pivot);\n\t        var palette = pivot.config.palette;\n\t        item.color.push(pivot._getColor(this._valueLength));\n\t        this.$$(\"values\").updateItem(id);\n\t\n\t        webix.delay(function () {\n\t            var index = item.operation.length - 1;\n\t            var els = this.$$(\"values\").getItemNode(id).childNodes;\n\t            var el = null;\n\t            for (var i = 0; i < els.length; i++) {\n\t                el = els[i];\n\t                if (!el.getAttribute) continue;\n\t                var op = el.getAttribute(\"webix_operation\");\n\t                if (!webix.isUndefined(op) && op == index) break;\n\t            }\n\t            if (el !== null) this._function_selector(el, id);\n\t        }, this);\n\t    },\n\t    _function_remove: function _function_remove(e, id) {\n\t        var index = webix.html.locate(e, \"webix_operation\");\n\t        var item = this.$$(\"values\").getItem(id);\n\t        if (item.operation.length > 1) {\n\t            item.operation.splice(index, 1);\n\t            this.$$(\"values\").updateItem(id);\n\t        } else {\n\t            this.$$(\"values\").remove(id);\n\t            //this.$$(\"values\").move(id, null, this.$$(\"fields\"));\n\t        }\n\t        return false;\n\t    },\n\t\n\t    _filterSelector: function _filterSelector(e, id) {\n\t        var locale = webix.$$(this.config.pivot)._applyLocale;\n\t        var selector = {\n\t            view: \"webix_pivot_popup\", autofit: true,\n\t            height: 150, width: 150,\n\t            data: [{ name: \"datepicker\", title: locale(\"date\") }, { name: \"multiselect\", title: locale(\"multiselect\") }, { name: \"select\", title: locale(\"select\") }, { name: \"text\", title: locale(\"text\") }]\n\t        };\n\t        var p = webix.ui(selector);\n\t        p.show(e);\n\t        p.attachEvent(\"onHide\", webix.bind(function () {\n\t            var sel = p.getSelected();\n\t            if (sel !== null) {\n\t                var item = this.$$('filters').getItem(id);\n\t                item.type = sel.name;\n\t                this.$$('filters').updateItem(id);\n\t            }\n\t\n\t            p.close();\n\t        }, this));\n\t    },\n\t\n\t    data_setter: function data_setter(value) {\n\t        this.$$(\"fields\").clearAll();\n\t        this.$$(\"fields\").parse(value.fields);\n\t        this.$$(\"fields\").filter(function (item) {\n\t            return item.name != \"id\";\n\t        });\n\t\n\t        this.$$(\"filters\").clearAll();\n\t        this.$$(\"filters\").parse(value.filters);\n\t\n\t        this.$$(\"groupBy\").clearAll();\n\t        this.$$(\"groupBy\").parse(value.groupBy);\n\t\n\t        this.$$(\"values\").clearAll();\n\t        this.$$(\"values\").parse(value.values);\n\t    },\n\t    getStructure: function getStructure() {\n\t        var structure = { groupBy: \"\", values: [], filters: [] };\n\t\n\t        var groupBy = this.$$(\"groupBy\");\n\t        if (groupBy.count()) structure.groupBy = groupBy.getItem(groupBy.getFirstId()).name;\n\t\n\t        var values = this.$$(\"values\");\n\t        var temp;\n\t        values.data.each(webix.bind(function (obj) {\n\t            for (var j = 0; j < obj.operation.length; j++) {\n\t                temp = webix.copy(obj);\n\t\n\t                webix.extend(temp, { operation: obj.operation[j], color: obj.color[j] || webix.$$(this.config.pivot).config.color }, true);\n\t\n\t                structure.values.push(temp);\n\t            }\n\t        }, this));\n\t\n\t        var filters = this.$$(\"filters\");\n\t        filters.data.each(function (obj) {\n\t            structure.filters.push(obj);\n\t        });\n\t\n\t        return structure;\n\t    }\n\t}, webix.ui.window, webix.IdSpace);\n\n/***/ }\n/******/ ]);\n//# sourceMappingURL=data:application/json;base64,"],"sourceRoot":"/source/"}